
<h1 id="fase-3-apis-do-open-banking-brasil v2.0.0">Fase 3 - APIs do Open Banking Brasil v2.0.0</h1>

> Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.

###Iniciação pelo Recebedor  

Iniciação pelo recebedor ocorre quando a prestação de serviço pela iniciadora é para, e somente para,  o recebedor. Nestes casos somente será permitido como beneficiário do pagamento o próprio recebedor.Algumas Instituições detentoras de conta precisarão ajustar seus sistemas de forma a apropriar o campo em sua estrutura ao invés de gerá-lo nos casos pertinentes.

<h1 id="fase-3-apis-do-open-banking-brasil-api-pagamentos">API - Pagamentos</h1>

|Versão|
|:-----|
|2.0.0-rc1.0|

#### Visão Geral

A API tem como objetivo coletar o consentimento e realizar a iniciação de pagamento entre bancos e instituições financeiras e acessível também à estabelecimentos comerciais participantes do Open Banking Brasil.

Os recursos estão disponíveis para pagadores que possuem vínculo com uma instituição detentora de conta participante do Open Banking, independentemente de serem pessoa física ou jurídica.

#### Especificação em OAS 3.0

<a href="swagger/swagger_payments_apis_v2.yaml" target="_blank">Download da Especificação (OAS 3.0)</a>  

## [Em Revisão] Criar consentimento para iniciação de pagamento.

<a id="opIdpaymentsPostConsents"></a>

> Exemplo de código

```javascript
const data = JSON.stringify({
  "data": {
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12"
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  }
});

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("POST", "https://example.com/payments/v2/consents");
xhr.setRequestHeader("Content-Type", "application/json");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");
xhr.setRequestHeader("x-idempotency-key", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("example.com")

payload = "{\"data\":{\"loggedUser\":{\"document\":{\"identification\":\"11111111111\",\"rel\":\"CPF\"}},\"businessEntity\":{\"document\":{\"identification\":\"11111111111111\",\"rel\":\"CNPJ\"}},\"creditor\":{\"personType\":\"PESSOA_NATURAL\",\"cpfCnpj\":\"58764789000137\",\"name\":\"Marco Antonio de Brito\"},\"payment\":{\"type\":\"PIX\",\"date\":\"2021-01-01\",\"currency\":\"BRL\",\"amount\":\"100000.12\"},\"debtorAccount\":{\"ispb\":\"12345678\",\"issuer\":\"1774\",\"number\":\"1234567890\",\"accountType\":\"CACC\"}}}"

headers = {
    'Content-Type': "application/json",
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string",
    'x-idempotency-key': "string"
    }

conn.request("POST", "/payments/v2/consents", payload, headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.post("https://example.com/payments/v2/consents")
  .header("Content-Type", "application/json")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .header("x-idempotency-key", "string")
  .body("{\"data\":{\"loggedUser\":{\"document\":{\"identification\":\"11111111111\",\"rel\":\"CPF\"}},\"businessEntity\":{\"document\":{\"identification\":\"11111111111111\",\"rel\":\"CNPJ\"}},\"creditor\":{\"personType\":\"PESSOA_NATURAL\",\"cpfCnpj\":\"58764789000137\",\"name\":\"Marco Antonio de Brito\"},\"payment\":{\"type\":\"PIX\",\"date\":\"2021-01-01\",\"currency\":\"BRL\",\"amount\":\"100000.12\"},\"debtorAccount\":{\"ispb\":\"12345678\",\"issuer\":\"1774\",\"number\":\"1234567890\",\"accountType\":\"CACC\"}}}")
  .asString();
```

`POST /payments/v2/consents`

Método para a criação do consentimento para iniciação de pagamento.

### Dicionário de dados

Campos de resposta do endpoint de `/consents`

<a href='dictionary/paymentsPostConsents_v1.csv' target="_blank">Fazer download do dicionário de dados</a>

Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).

> Body parameter

```json
{
  "data": {
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12"
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  }
}
```

<h3 id="[em-revisão]-criar-consentimento-para-iniciação-de-pagamento.-parameters">Parâmetros</h3>

|Nome|Origem|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|x-idempotency-key|header|string|true|Cabeçalho HTTP personalizado. Identificador de solicitação exclusivo para suportar a idempotência.|
|body|body|[CreatePaymentConsent](#schemacreatepaymentconsent)|true|Payload para criação do consentimento para iniciação do pagamento Pix.|

> O comando acima retorna uma estrutura json como essa:

> 201 Response

```json
{
  "data": {
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2021-05-21T08:30:00Z",
    "expirationDateTime": "2021-05-21T08:30:00Z",
    "statusUpdateDateTime": "2021-05-21T08:30:00Z",
    "status": "AWAITING_AUTHORISATION",
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12"
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

> A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.

<h3 id="[em-revisão]-criar-consentimento-para-iniciação-de-pagamento.-responses">Resposta</h3>

|Status|Significado|Descrição|Schema|
|---|---|---|---|
|201|[Created](https://tools.ietf.org/html/rfc7231#section-6.3.2)|Consentimento de pagamento criado com sucesso.|[ResponsePaymentConsent](#schemaresponsepaymentconsent)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|415|[Unsupported Media Type](https://tools.ietf.org/html/rfc7231#section-6.5.13)|O formato do payload não é um formato suportado.|[ResponseError](#schemaresponseerror)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.|[422ResponseErrorCreateConsent](#schema422responseerrorcreateconsent)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type| |
|---|---|---|---|---|
|201|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|400|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|401|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|403|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|404|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|405|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|406|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|415|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|422|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|Retry-After|integer|<a href='#Retry-After'>Consultar Padrões</a>|
|500|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|

<aside class="warning">
Para realizar esta operação, você deve estar autenticado e autorizado com os seguintes escopos: 

openid,consent:consentId,payments
</aside>

## [Em Revisão] Consultar consentimento para iniciação de pagamento.

<a id="opIdpaymentsGetConsentsConsentId"></a>

> Exemplo de código

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://example.com/payments/v2/consents/string");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("example.com")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/payments/v2/consents/string", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://example.com/payments/v2/consents/string")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /payments/v2/consents/{consentId}`

Método para consultar o consentimento para iniciação de pagamento.

### Dicionário de dados

Campos de resposta do endpoint de `/consents`

<a href='dictionary/paymentsGetConsentsConsentId_v1.csv' target="_blank">Fazer download do dicionário de dados</a>

Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).

<h3 id="[em-revisão]-consultar-consentimento-para-iniciação-de-pagamento.-parameters">Parâmetros</h3>

|Nome|Origem|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|consentId|path|string|true|O consentId é o identificador único do consentimento e deverá ser um URN - Uniform Resource Name.  |
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|

#### Detailed descriptions

**consentId**: O consentId é o identificador único do consentimento e deverá ser um URN - Uniform Resource Name.  
Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource 
Identifier - URI - que é atribuído sob o URI scheme "urn" e um namespace URN específico, com a intenção de que o URN 
seja um identificador de recurso persistente e independente da localização.  
Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:
- o namespace(urn)
- o identificador associado ao namespace da instituição transnmissora (bancoex) 
- o identificador específico dentro do namespace (C1DD33123).  
Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).

> O comando acima retorna uma estrutura json como essa:

> 200 Response

```json
{
  "data": {
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2021-05-21T08:30:00Z",
    "expirationDateTime": "2021-05-21T08:30:00Z",
    "statusUpdateDateTime": "2021-05-21T08:30:00Z",
    "status": "AWAITING_AUTHORISATION",
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12"
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

<h3 id="[em-revisão]-consultar-consentimento-para-iniciação-de-pagamento.-responses">Resposta</h3>

|Status|Significado|Descrição|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados do consentimento de pagamento obtidos com sucesso.|[ResponsePaymentConsent](#schemaresponsepaymentconsent)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|415|[Unsupported Media Type](https://tools.ietf.org/html/rfc7231#section-6.5.13)|O formato do payload não é um formato suportado.|[ResponseError](#schemaresponseerror)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type| |
|---|---|---|---|---|
|200|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|400|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|401|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|403|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|404|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|405|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|406|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|415|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|Retry-After|integer|<a href='#Retry-After'>Consultar Padrões</a>|
|500|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|

<aside class="warning">
Para realizar esta operação, você deve estar autenticado e autorizado com os seguintes escopos: 

openid,consent:consentId,payments
</aside>

## [Em Revisão] Pix - Criar iniciação de pagamento.

<a id="opIdpaymentsPostPixPayments"></a>

> Exemplo de código

```javascript
const data = JSON.stringify({
  "data": {
    "localInstrument": "DICT",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    },
    "remittanceInformation": "Pagamento da nota XPTO035-002.",
    "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012  \nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062  \n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB  \nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
    "proxy": "12345678901",
    "cnpjInitiator": "50685362000135",
    "transactionIdentification": "50685362000135"
  }
});

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("POST", "https://example.com/payments/v2/pix/payments");
xhr.setRequestHeader("Content-Type", "application/json");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");
xhr.setRequestHeader("x-idempotency-key", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("example.com")

payload = "{\"data\":{\"localInstrument\":\"DICT\",\"payment\":{\"amount\":\"100000.12\",\"currency\":\"BRL\"},\"creditorAccount\":{\"ispb\":\"12345678\",\"issuer\":\"1774\",\"number\":\"1234567890\",\"accountType\":\"CACC\"},\"remittanceInformation\":\"Pagamento da nota XPTO035-002.\",\"qrCode\":\"00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012  \\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062  \\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB  \\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\\n\",\"proxy\":\"12345678901\",\"cnpjInitiator\":\"50685362000135\",\"transactionIdentification\":\"50685362000135\"}}"

headers = {
    'Content-Type': "application/json",
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string",
    'x-idempotency-key': "string"
    }

conn.request("POST", "/payments/v2/pix/payments", payload, headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.post("https://example.com/payments/v2/pix/payments")
  .header("Content-Type", "application/json")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .header("x-idempotency-key", "string")
  .body("{\"data\":{\"localInstrument\":\"DICT\",\"payment\":{\"amount\":\"100000.12\",\"currency\":\"BRL\"},\"creditorAccount\":{\"ispb\":\"12345678\",\"issuer\":\"1774\",\"number\":\"1234567890\",\"accountType\":\"CACC\"},\"remittanceInformation\":\"Pagamento da nota XPTO035-002.\",\"qrCode\":\"00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012  \\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062  \\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB  \\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\\n\",\"proxy\":\"12345678901\",\"cnpjInitiator\":\"50685362000135\",\"transactionIdentification\":\"50685362000135\"}}")
  .asString();
```

`POST /payments/v2/pix/payments`

Método para a criação de uma iniciação de pagamento.

### Dicionário de dados

Campos de resposta do endpoint de `/pix/payments`

<a href='dictionary/paymentsPostPixPayments_v1.csv' target="_blank">Fazer download do dicionário de dados</a>

Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).

> Body parameter

```json
{
  "data": {
    "localInstrument": "DICT",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    },
    "remittanceInformation": "Pagamento da nota XPTO035-002.",
    "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012  \nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062  \n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB  \nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
    "proxy": "12345678901",
    "cnpjInitiator": "50685362000135",
    "transactionIdentification": "50685362000135"
  }
}
```

<h3 id="[em-revisão]-pix---criar-iniciação-de-pagamento.-parameters">Parâmetros</h3>

|Nome|Origem|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|x-idempotency-key|header|string|true|Cabeçalho HTTP personalizado. Identificador de solicitação exclusivo para suportar a idempotência.|
|body|body|[CreatePixPayment](#schemacreatepixpayment)|true|Payload para criação da iniciação do pagamento Pix.|

> O comando acima retorna uma estrutura json como essa:

> 201 Response

```json
{
  "data": {
    "paymentId": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
    "endToEndId": "E9040088820210128000800123873170",
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2020-07-21T08:30:00Z",
    "statusUpdateDateTime": "2020-07-21T08:30:00Z",
    "proxy": "12345678901",
    "status": "PDNG",
    "rejectionReason": "USER_NOT_YET_ACTIVATED",
    "localInstrument": "DICT",
    "cnpjInitiator": "50685362000135",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "transactionIdentification": "50685362000135",
    "remittanceInformation": "Pagamento da nota RSTO035-002.",
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

> A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.

<h3 id="[em-revisão]-pix---criar-iniciação-de-pagamento.-responses">Resposta</h3>

|Status|Significado|Descrição|Schema|
|---|---|---|---|
|201|[Created](https://tools.ietf.org/html/rfc7231#section-6.3.2)|Iniciação de pagamento Pix criada com sucesso.|[ResponsePixPayment](#schemaresponsepixpayment)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|415|[Unsupported Media Type](https://tools.ietf.org/html/rfc7231#section-6.5.13)|O formato do payload não é um formato suportado.|[ResponseError](#schemaresponseerror)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.|[422ResponseErrorCreatePixPayment](#schema422responseerrorcreatepixpayment)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type| |
|---|---|---|---|---|
|201|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|400|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|401|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|403|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|404|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|405|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|406|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|415|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|422|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|Retry-After|integer|<a href='#Retry-After'>Consultar Padrões</a>|
|500|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|

<aside class="warning">
Para realizar esta operação, você deve estar autenticado e autorizado com os seguintes escopos: 

openid,consent:consentId,payments
</aside>

## [Em Revisão] Pix - Consultar iniciação de pagamento.

<a id="opIdpaymentsGetPixPaymentsPaymentId"></a>

> Exemplo de código

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://example.com/payments/v2/pix/payments/string");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("example.com")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/payments/v2/pix/payments/string", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://example.com/payments/v2/pix/payments/string")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /payments/v2/pix/payments/{paymentId}`

Método para consultar uma iniciação de pagamento.

### Dicionário de dados

Campos de resposta do endpoint de `/pix/payments`.  

<a href='dictionary/paymentsGetPixPaymentsPaymentId_v1.csv' target="_blank">Fazer download do dicionário de dados</a>

Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).

<h3 id="[em-revisão]-pix---consultar-iniciação-de-pagamento.-parameters">Parâmetros</h3>

|Nome|Origem|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|paymentId|path|string|true|Identificador da operação de pagamento.|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|

> O comando acima retorna uma estrutura json como essa:

> 200 Response

```json
{
  "data": {
    "paymentId": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
    "endToEndId": "E9040088820210128000800123873170",
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2020-07-21T08:30:00Z",
    "statusUpdateDateTime": "2020-07-21T08:30:00Z",
    "proxy": "12345678901",
    "status": "PDNG",
    "rejectionReason": "USER_NOT_YET_ACTIVATED",
    "localInstrument": "DICT",
    "cnpjInitiator": "50685362000135",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "transactionIdentification": "50685362000135",
    "remittanceInformation": "Pagamento da nota RSTO035-002.",
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

<h3 id="[em-revisão]-pix---consultar-iniciação-de-pagamento.-responses">Resposta</h3>

|Status|Significado|Descrição|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de iniciação de pagamento Pix obtidos com sucesso.|[ResponsePixPayment](#schemaresponsepixpayment)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|415|[Unsupported Media Type](https://tools.ietf.org/html/rfc7231#section-6.5.13)|O formato do payload não é um formato suportado.|[ResponseError](#schemaresponseerror)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type| |
|---|---|---|---|---|
|200|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|400|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|401|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|403|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|404|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|405|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|406|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|415|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|Retry-After|integer|<a href='#Retry-After'>Consultar Padrões</a>|
|500|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|

<aside class="warning">
Para realizar esta operação, você deve estar autenticado e autorizado com os seguintes escopos: 

openid,consent:consentId,payments
</aside>

<h1 id="fase-3-apis-do-open-banking-brasil-schemas">Schemas</h1>

<h2 id="tocS_422ResponseErrorCreateConsent">422ResponseErrorCreateConsent</h2>

<a id="schema422responseerrorcreateconsent"></a>
<a id="schema_422ResponseErrorCreateConsent"></a>
<a id="tocS422responseerrorcreateconsent"></a>
<a id="tocs422responseerrorcreateconsent"></a>

```json
{
  "errors": [
    {
      "code": "FORMA_PGTO_INVALIDA",
      "title": "Forma de pagamento inválida.",
      "detail": "Meio de pagamento inválido."
    }
  ],
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|errors|[object]|true||
|» code|[EnumErrorsCreateConsent](#schemaenumerrorscreateconsent)|true|Códigos de erros previstos na criação de consentimento para a iniciação de pagamentos:  <br>• FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  <br>• DATA_PGTO_INVALIDA: Data de pagamento inválida.  <br>• NAO_INFORMADO: Não informado.|
|» title|string|true|Título específico do erro reportado, de acordo com o código enviado:  <br>• FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  <br>• DATA_PGTO_INVALIDA: Data de pagamento inválida.  <br>• NAO_INFORMADO: Não informado.|
|» detail|string|true|Descrição específica do erro de acordo com o código reportado:  <br>• FORMA_PGTO_INVALIDA – Meio de pagamento inválido.  <br>• DATA_PGTO_INVALIDA – Data de pagamento inválida no contexto, por exemplo, data no passado. Para pagamentos únicos deve ser informada a data atual, do dia corrente.  <br>• NAO_INFORMADO – Não reportado/identificado pela instituição detentora de conta.|
|meta|[Meta](#schemameta)|false|Meta informações referente a API requisitada.|

<h2 id="tocS_422ResponseErrorCreatePixPayment">422ResponseErrorCreatePixPayment</h2>

<a id="schema422responseerrorcreatepixpayment"></a>
<a id="schema_422ResponseErrorCreatePixPayment"></a>
<a id="tocS422responseerrorcreatepixpayment"></a>
<a id="tocs422responseerrorcreatepixpayment"></a>

```json
{
  "errors": [
    {
      "code": "SALDO_INSUFICIENTE",
      "title": "Saldo insuficiente.",
      "detail": "A conta selecionada não possui saldo suficiente para realizar o pagamento."
    }
  ],
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|errors|[object]|true||
|» code|[EnumErrorsCreatePayment](#schemaenumerrorscreatepayment)|true|Códigos de erros previstos na criação da iniciação de pagamento:  <br>• SALDO_INSUFICIENTE – Esta conta não possui saldo suficiente para realizar o pagamento.  <br>• BENEFICIARIO_INCOMPATIVEL – O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.  <br>• VALOR_INCOMPATIVEL – O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.  <br>• VALOR_ACIMA_LIMITE – O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.  <br>• VALOR_INVALIDO – O valor enviado não é válido para o QR Code informado.  <br>• COBRANCA_INVALIDA – Validação de expiração, validação de vencimento, Status Válido.  <br>• CONSENTIMENTO_INVALIDO – Consentimento inválido (status não é "authorised" ou está expirado).  <br>• JANELA_OPER_INVALIDA – Requisição está fora da janela de funcionamento.  <br>• NAO_INFORMADO – Não informada pela detentora de conta.|
|» title|string|true|Título específico do erro reportado, de acordo com o código enviado:  <br>• SALDO_INSUFICIENTE: Saldo insuficiente.  <br>• BENEFICIARIO_INCOMPATIVEL: Beneficiário incompatível.  <br>• VALOR_INCOMPATIVEL: Valor da transação incompatível.  <br>• VALOR_ACIMA_LIMITE: Acima do limite estabelecido.  <br>• VALOR_INVALIDO: Valor inválido.  <br>• COBRANCA_INVALIDA: Cobrança inválida.  <br>• CONSENTIMENTO_INVALIDO: Consentimento inválido.  <br>• JANELA_OPER_INVALIDA: Janela de operação inválida.  <br>• NAO_INFORMADO: Não informado.|
|» detail|string|true|Descrição específica do erro de acordo com o código reportado:  <br>• SALDO_INSUFICIENTE: A conta selecionada não possui saldo suficiente para realizar o pagamento.  <br>• BENEFICIARIO_INCOMPATIVEL: O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.  <br>• VALOR_INCOMPATIVEL: O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.  <br>• VALOR_ACIMA_LIMITE: O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.  <br>• VALOR_INVALIDO: O valor enviado não é válido para o QR Code informado.  <br>• COBRANCA_INVALIDA: Validação de expiração, validação de vencimento ou Status Válido.  <br>• CONSENTIMENTO_INVALIDO: Consentimento inválido (status diferente de "AUTHORISED" ou está expirado).  <br>• JANELA_OPER_INVALIDA: Requisição está fora da janela de funcionamento.  <br>• NAO_INFORMADO: Não reportado/identificado pela instituição detentora de conta.|
|meta|[Meta](#schemameta)|false|Meta informações referente a API requisitada.|

<h2 id="tocS_Account">Account</h2>

<a id="schemaaccount"></a>
<a id="schema_Account"></a>
<a id="tocSaccount"></a>
<a id="tocsaccount"></a>

```json
{
  "ispb": "12345678",
  "issuer": "1774",
  "number": "1234567890",
  "checkDigit": "4",
  "accountType": "CACC"
}

```

Objeto que contém a identificação de uma conta. 

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|ispb|string|true|Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.|
|issuer|string|false|Código da Agência emissora da conta sem dígito.  <br>(Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  <br>no exercício de atividades da instituição, não podendo ser móvel ou transitória).  <br>[Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).|
|number|string|true|Número da conta sem o dígito.|
|checkDigit|string|true|Dígito da conta.|
|accountType|[EnumAccountPaymentsType](#schemaenumaccountpaymentstype)|true|Tipos de contas usadas para pagamento via Pix.  <br>Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  <br>conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  <br>Segue descrição de cada valor do ENUM para o escopo do Pix.  <br>CACC - Current - Conta Corrente.  <br>SLRY - Salary - Conta-Salário.  <br>SVGS - Savings - Conta de Poupança.  <br>TRAN - TransactingAccount - Conta de Pagamento pré-paga.|

<h2 id="tocS_BusinessEntity">BusinessEntity</h2>

<a id="schemabusinessentity"></a>
<a id="schema_BusinessEntity"></a>
<a id="tocSbusinessentity"></a>
<a id="tocsbusinessentity"></a>

```json
{
  "document": {
    "identification": "11111111111111",
    "rel": "CNPJ"
  }
}

```

Usuário (pessoa jurídica) que encontra-se logado na instituição Iniciadora de Pagamento. [Restrição] Preenchimento obrigatório se usuário logado na instituição Iniciadora de Pagamento for um CNPJ (pessoa jurídica).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|document|object|true||
|» identification|string|true|Número do documento de identificação oficial do titular pessoa jurídica.|
|» rel|string|true|Tipo do documento de identificação oficial do titular pessoa jurídica.|

<h2 id="tocS_CreatePaymentConsent">CreatePaymentConsent</h2>

<a id="schemacreatepaymentconsent"></a>
<a id="schema_CreatePaymentConsent"></a>
<a id="tocScreatepaymentconsent"></a>
<a id="tocscreatepaymentconsent"></a>

```json
{
  "data": {
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12"
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|data|object|true|Objeto contendo as informações de consentimento para a iniciação de pagamento individual.|
|» loggedUser|[LoggedUser](#schemaloggeduser)|true|Usuário (pessoa natural) que encontra-se logado na instituição Iniciadora de Pagamento.|
|» businessEntity|[BusinessEntity](#schemabusinessentity)|false|Usuário (pessoa jurídica) que encontra-se logado na instituição Iniciadora de Pagamento. [Restrição] Preenchimento obrigatório se usuário logado na instituição Iniciadora de Pagamento for um CNPJ (pessoa jurídica).|
|» creditor|object|true|Objeto contendo os dados do recebedor (creditor).|
|»» personType|[EnumPaymentPersonType](#schemaenumpaymentpersontype)|true|Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).|
|»» cpfCnpj|string|true|Identificação da pessoa envolvida na transação.  <br>Preencher com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.  <br>O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços.  <br>O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.|
|»» name|string|true|Em caso de pessoa natural deve ser informado o nome completo do titular da conta do recebedor.  <br>Em caso de pessoa jurídica deve ser informada a razão social ou o nome fantasia da conta do recebedor.|
|» payment|[PaymentConsent](#schemapaymentconsent)|true|Objeto contendo dados de pagamento para consentimento.|
|» debtorAccount|[DebtorAccount](#schemadebtoraccount)|false|Objeto que contém a identificação da conta de origem do pagador.  <br>As informações quanto à conta de origem do pagador poderão ser trazidas no consentimento para a detentora, caso a iniciadora tenha coletado essas informações do cliente. Do contrário, será coletada na detentora e trazida para a iniciadora como resposta à criação do pagamento.|

<h2 id="tocS_CreatePixPayment">CreatePixPayment</h2>

<a id="schemacreatepixpayment"></a>
<a id="schema_CreatePixPayment"></a>
<a id="tocScreatepixpayment"></a>
<a id="tocscreatepixpayment"></a>

```json
{
  "data": {
    "localInstrument": "DICT",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    },
    "remittanceInformation": "Pagamento da nota XPTO035-002.",
    "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012  \nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062  \n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB  \nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
    "proxy": "12345678901",
    "cnpjInitiator": "50685362000135",
    "transactionIdentification": "50685362000135"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|data|[CreatePixPaymentData](#schemacreatepixpaymentdata)|true|Objeto contendo dados do pagamento e do recebedor (creditor).|

<h2 id="tocS_CreatePixPaymentData">CreatePixPaymentData</h2>

<a id="schemacreatepixpaymentdata"></a>
<a id="schema_CreatePixPaymentData"></a>
<a id="tocScreatepixpaymentdata"></a>
<a id="tocscreatepixpaymentdata"></a>

```json
{
  "localInstrument": "DICT",
  "payment": {
    "amount": "100000.12",
    "currency": "BRL"
  },
  "creditorAccount": {
    "ispb": "12345678",
    "issuer": "1774",
    "number": "1234567890",
    "accountType": "CACC"
  },
  "remittanceInformation": "Pagamento da nota XPTO035-002.",
  "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012  \nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062  \n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB  \nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
  "proxy": "12345678901",
  "cnpjInitiator": "50685362000135",
  "transactionIdentification": "50685362000135"
}

```

Objeto contendo dados do pagamento e do recebedor (creditor).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|localInstrument|[EnumLocalInstrument](#schemaenumlocalinstrument)|true|Especifica a forma de iniciação do pagamento:  <br>- MANU - Inserção manual de dados da conta transacional  <br>- DICT - Inserção manual de chave Pix  <br>- QRDN - QR code dinâmico (*Domínio reservado para uso futuro*)  <br>- QRES - QR code estático (*Domínio reservado para uso futuro*)|
|payment|[PaymentPix](#schemapaymentpix)|true|Objeto contendo dados do pagameto como moeda e valor.|
|creditorAccount|[CreditorAccount](#schemacreditoraccount)|true|Objeto que contém a identificação da conta de destino do beneficiário/recebedor.|
|remittanceInformation|string|false|Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.|
|qrCode|string|false|Obs: Campo reservado para uso futuro.  <br>Sequência de caracteres que corresponde ao QR Code disponibilizado para o pagador.  <br>É a sequência de caracteres que seria lida pelo leitor de QR Code, e deve propiciar o retorno dos dados do pagador após consulta na DICT.  <br>Essa funcionalidade é possível tanto para QR Code estático quanto para QR Code dinâmico.  <br>No arranjo do Pix esta é a mesma sequência gerada e/ou lida pela funcionalidade Pix Copia e Cola.  <br>Este campo deverá ser no formato UTF-8.  <br>[Restrição] Preenchimento obrigatório para pagamentos por QR Code, observado o tamanho máximo de 512 bytes.|
|proxy|string|false|Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.  <br>No caso de telefone celular deve ser informado no padrão E.1641.  <br>Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.  <br>No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.  <br>Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.  <br>No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.  <br>[Restrição] Obrigatório quando o campo localInstrument for igual a DICT.|
|cnpjInitiator|string|true|CNPJ do Iniciador de Pagamento devidamente habilitado para a prestação de Serviço de Iniciação no Pix.|
|transactionIdentification|string|false|Trata-se de um identificador de transação que deve ser retransmitido intacto pelo PSP do pagador ao gerar a ordem de pagamento. Essa informação permitirá ao recebedor identificar e correlacionar a transferência, quando recebida, com a apresentação das instruções ao pagador. Os caracteres permitidos no contexto do Pix para o campo txid (EMV 62-05) são: - Letras minúsculas, de ‘a’ a ‘z’ - Letras maiúsculas, de ‘A’ a ‘Z’ - Dígitos decimais, de ‘0’ a ‘9’ [Restrição] Se localInstrument for igual a INIC, o campo transactionIdentification deve ser preenchido obrigatoriamente. Se localInstrument for igual a MANU ou DICT, o campo transactionIdentification não deve ser preenchido. A detentora de conta deve validar se a condicionalidade do campo foi atendida pela iniciadora de pagamento.|

<h2 id="tocS_CreditorAccount">CreditorAccount</h2>

<a id="schemacreditoraccount"></a>
<a id="schema_CreditorAccount"></a>
<a id="tocScreditoraccount"></a>
<a id="tocscreditoraccount"></a>

```json
{
  "ispb": "12345678",
  "issuer": "1774",
  "number": "1234567890",
  "accountType": "CACC"
}

```

Objeto que contém a identificação da conta de destino do beneficiário/recebedor.  

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|ispb|string|true|Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.|
|issuer|string|false|Código da Agência emissora da conta sem dígito.  <br>(Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  <br>no exercício de atividades da instituição, não podendo ser móvel ou transitória).  <br>[Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).|
|number|string|true|Deve ser preenchido com o número da conta do usuário recebedor, com dígito verificador (se este existir),  <br>se houver valor alfanumérico, este deve ser convertido para 0.|
|accountType|[EnumAccountPaymentsType](#schemaenumaccountpaymentstype)|true|Tipos de contas usadas para pagamento via Pix.  <br>Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  <br>conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  <br>Segue descrição de cada valor do ENUM para o escopo do Pix.  <br>CACC - Current - Conta Corrente.  <br>SLRY - Salary - Conta-Salário.  <br>SVGS - Savings - Conta de Poupança.  <br>TRAN - TransactingAccount - Conta de Pagamento pré-paga.|

<h2 id="tocS_DebtorAccount">DebtorAccount</h2>

<a id="schemadebtoraccount"></a>
<a id="schema_DebtorAccount"></a>
<a id="tocSdebtoraccount"></a>
<a id="tocsdebtoraccount"></a>

```json
{
  "ispb": "12345678",
  "issuer": "1774",
  "number": "1234567890",
  "accountType": "CACC"
}

```

Objeto que contém a identificação da conta de origem do pagador.  
As informações quanto à conta de origem do pagador poderão ser trazidas no consentimento para a detentora, caso a iniciadora tenha coletado essas informações do cliente. Do contrário, será coletada na detentora e trazida para a iniciadora como resposta à criação do pagamento.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|ispb|string|true|Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.|
|issuer|string|false|Código da Agência emissora da conta sem dígito.  <br>(Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  <br>no exercício de atividades da instituição, não podendo ser móvel ou transitória).  <br>[Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).|
|number|string|true|Deve ser preenchido com o número da conta transacional do usuário pagador, com dígito verificador (se este existir),  <br>se houver valor alfanumérico, este deve ser convertido para 0.|
|accountType|[EnumAccountPaymentsType](#schemaenumaccountpaymentstype)|true|Tipos de contas usadas para pagamento via Pix.  <br>Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  <br>conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  <br>Segue descrição de cada valor do ENUM para o escopo do Pix.  <br>CACC - Current - Conta Corrente.  <br>SLRY - Salary - Conta-Salário.  <br>SVGS - Savings - Conta de Poupança.  <br>TRAN - TransactingAccount - Conta de Pagamento pré-paga.|

<h2 id="tocS_EndToEndId">EndToEndId</h2>

<a id="schemaendtoendid"></a>
<a id="schema_EndToEndId"></a>
<a id="tocSendtoendid"></a>
<a id="tocsendtoendid"></a>

```json
"E9040088820210128000800123873170"

```

Deve ser preenchido no formato padrão ExxxxxxxxyyyyMMddHHmmkkkkkkkkkkk (32 caracteres; “case sensitive”, isso é, diferencia letras maiúsculas e minúsculas), sendo:
• “E” – fixo (1 caractere);  
• xxxxxxxx – identificação do agente que gerou o ´EndToEndId´, podendo ser: o ISPB do participante direto ou o ISPB do participante indireto (8 caracteres numéricos [0-9]);  
• yyyyMMddHHmm – data, hora e minuto (12 caracteres), seguindo o horário UTC, da submissão da ordem de pagamento, caso a liquidação seja prioritária, ou prevista para o envio da ordem ao sistema de liquidação, caso seja realizado um agendamento. Para ordens prioritárias e não prioritárias, aceita-se o preenchimento, pelo agente que gerou o ´EndToEndId´, com uma tolerância máxima de 12 horas, para o futuro e para o passado, em relação ao horário efetivo de processamento da ordem pelo SPI;  
• kkkkkkkkkkk – sequencial criado pelo agente que gerou o ´EndToEndId´ (11 caracteres alfanuméricos [a-z/A-Z/0-9]). Deve ser único dentro de cada “yyyyMMddHHmm”.  
Admite-se que o ´EndToEndId´ seja gerado pelo participante direto, pelo participante indireto ou pelo iniciador de pagamento.  
Ele deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.  
[Restrição] O ´EndToEndId´ deve ser informado obrigatoriamente caso o status do pagamento seja ACCEPTED_SETTLEMENT_COMPLETED.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Deve ser preenchido no formato padrão ExxxxxxxxyyyyMMddHHmmkkkkkkkkkkk (32 caracteres; “case sensitive”, isso é, diferencia letras maiúsculas e minúsculas), sendo:<br>• “E” – fixo (1 caractere);  <br>• xxxxxxxx – identificação do agente que gerou o ´EndToEndId´, podendo ser: o ISPB do participante direto ou o ISPB do participante indireto (8 caracteres numéricos [0-9]);  <br>• yyyyMMddHHmm – data, hora e minuto (12 caracteres), seguindo o horário UTC, da submissão da ordem de pagamento, caso a liquidação seja prioritária, ou prevista para o envio da ordem ao sistema de liquidação, caso seja realizado um agendamento. Para ordens prioritárias e não prioritárias, aceita-se o preenchimento, pelo agente que gerou o ´EndToEndId´, com uma tolerância máxima de 12 horas, para o futuro e para o passado, em relação ao horário efetivo de processamento da ordem pelo SPI;  <br>• kkkkkkkkkkk – sequencial criado pelo agente que gerou o ´EndToEndId´ (11 caracteres alfanuméricos [a-z/A-Z/0-9]). Deve ser único dentro de cada “yyyyMMddHHmm”.  <br>Admite-se que o ´EndToEndId´ seja gerado pelo participante direto, pelo participante indireto ou pelo iniciador de pagamento.  <br>Ele deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.  <br>[Restrição] O ´EndToEndId´ deve ser informado obrigatoriamente caso o status do pagamento seja ACCEPTED_SETTLEMENT_COMPLETED.|

<h2 id="tocS_EnumAccountPaymentsType">EnumAccountPaymentsType</h2>

<a id="schemaenumaccountpaymentstype"></a>
<a id="schema_EnumAccountPaymentsType"></a>
<a id="tocSenumaccountpaymentstype"></a>
<a id="tocsenumaccountpaymentstype"></a>

```json
"CACC"

```

Tipos de contas usadas para pagamento via Pix.  
Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  
conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  
Segue descrição de cada valor do ENUM para o escopo do Pix.  
CACC - Current - Conta Corrente.  
SLRY - Salary - Conta-Salário.  
SVGS - Savings - Conta de Poupança.  
TRAN - TransactingAccount - Conta de Pagamento pré-paga.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Tipos de contas usadas para pagamento via Pix.  <br>Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  <br>conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  <br>Segue descrição de cada valor do ENUM para o escopo do Pix.  <br>CACC - Current - Conta Corrente.  <br>SLRY - Salary - Conta-Salário.  <br>SVGS - Savings - Conta de Poupança.  <br>TRAN - TransactingAccount - Conta de Pagamento pré-paga.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|CACC|
|**|SLRY|
|**|SVGS|
|**|TRAN|

<h2 id="tocS_EnumAuthorisationStatusType">EnumAuthorisationStatusType</h2>

<a id="schemaenumauthorisationstatustype"></a>
<a id="schema_EnumAuthorisationStatusType"></a>
<a id="tocSenumauthorisationstatustype"></a>
<a id="tocsenumauthorisationstatustype"></a>

```json
"AWAITING_AUTHORISATION"

```

Retorna o estado do consentimento, o qual no momento de sua criação será AWAITING_AUTHORISATION.
Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) para AUTHORISED ou REJECTED. 
O consentimento fica no estado CONSUMED após ocorrer a iniciação do pagamento referente ao consentimento.  
Em caso de consentimento expirado a detentora deverá retornar o status REJECTED.  
Estados possíveis:  
AWAITING_AUTHORISATION - Aguardando autorização  
AUTHORISED - Autorizado   
REJECTED - Rejeitado  
CONSUMED - Consumido 

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Retorna o estado do consentimento, o qual no momento de sua criação será AWAITING_AUTHORISATION.<br>Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) para AUTHORISED ou REJECTED. <br>O consentimento fica no estado CONSUMED após ocorrer a iniciação do pagamento referente ao consentimento.  <br>Em caso de consentimento expirado a detentora deverá retornar o status REJECTED.  <br>Estados possíveis:  <br>AWAITING_AUTHORISATION - Aguardando autorização  <br>AUTHORISED - Autorizado   <br>REJECTED - Rejeitado  <br>CONSUMED - Consumido|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|AWAITING_AUTHORISATION|
|**|AUTHORISED|
|**|REJECTED|
|**|CONSUMED|

<h2 id="tocS_EnumErrorsCreateConsent">EnumErrorsCreateConsent</h2>

<a id="schemaenumerrorscreateconsent"></a>
<a id="schema_EnumErrorsCreateConsent"></a>
<a id="tocSenumerrorscreateconsent"></a>
<a id="tocsenumerrorscreateconsent"></a>

```json
"FORMA_PGTO_INVALIDA"

```

Códigos de erros previstos na criação de consentimento para a iniciação de pagamentos:  
• FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  
• DATA_PGTO_INVALIDA: Data de pagamento inválida.  
• NAO_INFORMADO: Não informado.  

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Códigos de erros previstos na criação de consentimento para a iniciação de pagamentos:  <br>• FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  <br>• DATA_PGTO_INVALIDA: Data de pagamento inválida.  <br>• NAO_INFORMADO: Não informado.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|FORMA_PGTO_INVALIDA|
|**|DATA_PGTO_INVALIDA|
|**|NAO_INFORMADO|

<h2 id="tocS_EnumErrorsCreatePayment">EnumErrorsCreatePayment</h2>

<a id="schemaenumerrorscreatepayment"></a>
<a id="schema_EnumErrorsCreatePayment"></a>
<a id="tocSenumerrorscreatepayment"></a>
<a id="tocsenumerrorscreatepayment"></a>

```json
"SALDO_INSUFICIENTE"

```

Códigos de erros previstos na criação da iniciação de pagamento:  
• SALDO_INSUFICIENTE – Esta conta não possui saldo suficiente para realizar o pagamento.  
• BENEFICIARIO_INCOMPATIVEL – O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.  
• VALOR_INCOMPATIVEL – O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.  
• VALOR_ACIMA_LIMITE – O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.  
• VALOR_INVALIDO – O valor enviado não é válido para o QR Code informado.  
• COBRANCA_INVALIDA – Validação de expiração, validação de vencimento, Status Válido.  
• CONSENTIMENTO_INVALIDO – Consentimento inválido (status não é "authorised" ou está expirado).  
• JANELA_OPER_INVALIDA – Requisição está fora da janela de funcionamento.  
• NAO_INFORMADO – Não informada pela detentora de conta.  

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Códigos de erros previstos na criação da iniciação de pagamento:  <br>• SALDO_INSUFICIENTE – Esta conta não possui saldo suficiente para realizar o pagamento.  <br>• BENEFICIARIO_INCOMPATIVEL – O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.  <br>• VALOR_INCOMPATIVEL – O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.  <br>• VALOR_ACIMA_LIMITE – O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.  <br>• VALOR_INVALIDO – O valor enviado não é válido para o QR Code informado.  <br>• COBRANCA_INVALIDA – Validação de expiração, validação de vencimento, Status Válido.  <br>• CONSENTIMENTO_INVALIDO – Consentimento inválido (status não é "authorised" ou está expirado).  <br>• JANELA_OPER_INVALIDA – Requisição está fora da janela de funcionamento.  <br>• NAO_INFORMADO – Não informada pela detentora de conta.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|SALDO_INSUFICIENTE|
|**|BENEFICIARIO_INCOMPATIVEL|
|**|VALOR_INCOMPATIVEL|
|**|VALOR_ACIMA_LIMITE|
|**|VALOR_INVALIDO|
|**|COBRANCA_INVALIDA|
|**|CONSENTIMENTO_INVALIDO|
|**|JANELA_OPER_INVALIDA|
|**|NAO_INFORMADO|

<h2 id="tocS_EnumLocalInstrument">EnumLocalInstrument</h2>

<a id="schemaenumlocalinstrument"></a>
<a id="schema_EnumLocalInstrument"></a>
<a id="tocSenumlocalinstrument"></a>
<a id="tocsenumlocalinstrument"></a>

```json
"DICT"

```

Especifica a forma de iniciação do pagamento:  
- MANU - Inserção manual de dados da conta transacional  
- DICT - Inserção manual de chave Pix  
- QRDN - QR code dinâmico (*Domínio reservado para uso futuro*)  
- QRES - QR code estático (*Domínio reservado para uso futuro*)  

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Especifica a forma de iniciação do pagamento:  <br>- MANU - Inserção manual de dados da conta transacional  <br>- DICT - Inserção manual de chave Pix  <br>- QRDN - QR code dinâmico (*Domínio reservado para uso futuro*)  <br>- QRES - QR code estático (*Domínio reservado para uso futuro*)|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|MANU|
|**|DICT|
|**|QRDN|
|**|QRES|

<h2 id="tocS_EnumPaymentPersonType">EnumPaymentPersonType</h2>

<a id="schemaenumpaymentpersontype"></a>
<a id="schema_EnumPaymentPersonType"></a>
<a id="tocSenumpaymentpersontype"></a>
<a id="tocsenumpaymentpersontype"></a>

```json
"PESSOA_NATURAL"

```

Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|PESSOA_NATURAL|
|**|PESSOA_JURIDICA|

<h2 id="tocS_EnumPaymentStatusType">EnumPaymentStatusType</h2>

<a id="schemaenumpaymentstatustype"></a>
<a id="schema_EnumPaymentStatusType"></a>
<a id="tocSenumpaymentstatustype"></a>
<a id="tocsenumpaymentstatustype"></a>

```json
"PDNG"

```

Estado atual da iniciação de pagamento. O estado evolui na seguinte ordem:  
1. PDNG (PENDING) - Iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.  
2. PART (PARTIALLY ACCEPTED) - Aguardando autorização múltipla alçada.  
3. ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Iniciação de pagamento aceita e processamento do pagamento foi iniciado.  
4. ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Débito realizado na conta do pagador.  
5. ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Crédito realizado na instituição de destino.  
Em caso insucesso:  
RJCT (REJECTED) - Instrução de pagamento rejeitada.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Estado atual da iniciação de pagamento. O estado evolui na seguinte ordem:  <br>1. PDNG (PENDING) - Iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.  <br>2. PART (PARTIALLY ACCEPTED) - Aguardando autorização múltipla alçada.  <br>3. ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Iniciação de pagamento aceita e processamento do pagamento foi iniciado.  <br>4. ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Débito realizado na conta do pagador.  <br>5. ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Crédito realizado na instituição de destino.  <br>Em caso insucesso:  <br>RJCT (REJECTED) - Instrução de pagamento rejeitada.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|PDNG|
|**|PART|
|**|ACSP|
|**|ACSC|
|**|ACCC|
|**|RJCT|

<h2 id="tocS_EnumPaymentType">EnumPaymentType</h2>

<a id="schemaenumpaymenttype"></a>
<a id="schema_EnumPaymentType"></a>
<a id="tocSenumpaymenttype"></a>
<a id="tocsenumpaymenttype"></a>

```json
"PIX"

```

Este campo define o tipo de pagamento que será iniciado após a autorização do consentimento.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Este campo define o tipo de pagamento que será iniciado após a autorização do consentimento.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|PIX|

<h2 id="tocS_EnumRejectionReasonType">EnumRejectionReasonType</h2>

<a id="schemaenumrejectionreasontype"></a>
<a id="schema_EnumRejectionReasonType"></a>
<a id="tocSenumrejectionreasontype"></a>
<a id="tocsenumrejectionreasontype"></a>

```json
"USER_NOT_YET_ACTIVATED"

```

Motivo da rejeição do pagamento. Informações complementares sobre o motivo do status.  
ABORTED_SETTLEMENT_TIMEOUT - Liquidação da transação interrompida devido a timeout no SPI (AB03).
ERROR_CREDITOR_AGENT - Transação interrompida devido a erro no participante do usuário recebedor (AB09).
TIMEOUT_DEBTOR_AGENT - Timeout do participante emissor da ordem de pagamento (AB11).
INVALID_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor inexistente ou inválido (AC03).
BLOCKED_ACCOUNT - Conta transacional do usuário recebedor encontra-se bloqueada (AC06).
CLOSED_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor encerrada (AC07).
INVALID_CREDITOR_ACCOUNTTYPE - Tipo incorreto para a conta transacional do usuário recebedor (AC14).
TRANSACTION_NOT_SUPPORTED - Tipo de transação não é suportado/autorizado na conta transacional do usuário recebedor (AG03). Exemplo: transferência para conta salário.
NOT_ALLOWED_BOOK_TRANSFER - Não é permitida ordem de pagamento/devolução no SPI cujos recursos sejam transferidos de uma conta transacional para outra em uma mesma instituição participante ou entre participantes que utilizem o serviço de liquidação de um mesmo participante liquidante no SPI (booktransfer) (AG12).
FORBIDDEN_RETURN_PAYMENT - Não é permitido devolver a devolução de um pagamento instantâneo (AG13).
INCORRECT_AGENT - Participante direto não é liquidante do participante do usuário pagador / participante do usuário recebedor (AGNT).
ZERO_AMOUNT - Ordem de pagamento instantâneo com valor zero (AM01).
NOT_ALLOWED_AMOUNT - Ordem de pagamento/devolução em valor que faz superar o limite permitido para o tipo de conta transacional creditada (AM02).
INSUFFICIENT_FUNDS - Saldo insuficiente na conta PI do participante do usuário pagador (AM04).
WRONG_AMOUNT - Devolução de pagamento em valor que faz superar o valor da ordem de pagamento instantâneo correspondente (AM09).
INVALID_AMOUNT - Divergência entre a somatória dos valores do bloco ‘valorDoDinheiroOuCompra’ e o campo ‘valor’ (AM12).
INVALID_NUMBER_OF_TRANSACTIONS - Quantidade de transações inválida (AM18).
INCONSISTENT_WITH_END_CUSTOMER - CPF/CNPJ do usuário recebedor não é consistente com o titular da conta transacional especificada (BE01).
INVALID_IDENTIFICATION_CODE - Código de situação de pagamento ou de erro inválido (BE15).
INVALID_CREDITOR_IDENTIFICATION_CODE - QR Code rejeitado pelo participante do usuário recebedor (BE17).
CREDITOR_IDENTIFIER_INCORRECT - CPF/CNPJ do usuário recebedor incorreto (CH11).
ELEMENT_CONTENT_FORMALLY_INCORRECT - Elemento da mensagem incorreto (CH16).
ORDER_REJECTED - Ordem rejeitada pelo participante do usuário recebedor (DS04).
NOT_ALLOWED_PAYMENT - Participante que assinou a mensagem não é autorizado a realizar a operação na conta PI debitada. No caso em que o participante que assinou a mensagem não é o titular da conta PI debitada nem é o liquidante no SPI do participante do usuário pagador (DS0G).
NOT_ALLOWED_ACCOUNT - ISPB do participante que submeteu a resposta à ordem de pagamento/devolução diferente do ISPB do participante creditado pela ordem (DS0H).
USER_NOT_YET_ACTIVATED - Participante não se encontra cadastrado ou ainda não iniciou a operação no SPI (DS27).
INVALID_CREATION_DATE - Data e Hora do envio da mensagem inválida (DT02).
INVALID_CUT_OFF_DATE - Transação extrapola o prazo máximo para devolução de pagamento instantâneo regulamentado pelo Arranjo PIX (DT05).
SETTLEMENT_FAILED - Erro no processamento do pagamento instantâneo (ED05).
INVALID_PURPOSE - Inconsistência entre a finalidade da transação e o preenchimento do bloco elementos Structured (FF07).
INVALID_END_TO_END_ID - Identificador da operação mal formatado (FF08).
INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário pagador inválido ou inexistente (RC09).
INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário recebedor inválido ou inexistente (RC10).
REGULATORY_REASON - Ordem de pagamento em que o usuário pagador é sancionado por resolução do Conselho de Segurança das Nações Unidas (CSNU). Nos casos em que o usuário recebedor for o sancionado, a ordem de pagamento não deve ser rejeitada (RR4).
SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT - A transação original não está relacionada ao serviço de Saque Pix (SL02).
INVALID_BILL - Validação de expiração, validação de vencimento, Status Válido (INDT).  
OPERATION_WINDOW - Requisição está fora da janela de funcionamento (IDEA).  
INCOMPATIBLE_DATE - Data do pagamento divergente da data consentida ou divergente da data atual do QR Code (TERM).  
MISMATCH_AMOUNT - O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento (OB01).  
OVER_LIMIT - O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente (OB02).   
INVALID_CONSENT - Consentimento inválido (status não é "authorised" ou está expirado) (OB03).  
DENIED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora recusaram a operação (OB04).  
EXPIRED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora não tomaram ação para aprovar a operação (OB05).  
EXPIRED_BILL - O QR Code não é mais válido (OB06).  
[Restrição] Esse motivo deverá ser enviado quando o campo /data/status for igual a RJCT (REJECTED).  

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Motivo da rejeição do pagamento. Informações complementares sobre o motivo do status.  <br>ABORTED_SETTLEMENT_TIMEOUT - Liquidação da transação interrompida devido a timeout no SPI (AB03).<br>ERROR_CREDITOR_AGENT - Transação interrompida devido a erro no participante do usuário recebedor (AB09).<br>TIMEOUT_DEBTOR_AGENT - Timeout do participante emissor da ordem de pagamento (AB11).<br>INVALID_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor inexistente ou inválido (AC03).<br>BLOCKED_ACCOUNT - Conta transacional do usuário recebedor encontra-se bloqueada (AC06).<br>CLOSED_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor encerrada (AC07).<br>INVALID_CREDITOR_ACCOUNTTYPE - Tipo incorreto para a conta transacional do usuário recebedor (AC14).<br>TRANSACTION_NOT_SUPPORTED - Tipo de transação não é suportado/autorizado na conta transacional do usuário recebedor (AG03). Exemplo: transferência para conta salário.<br>NOT_ALLOWED_BOOK_TRANSFER - Não é permitida ordem de pagamento/devolução no SPI cujos recursos sejam transferidos de uma conta transacional para outra em uma mesma instituição participante ou entre participantes que utilizem o serviço de liquidação de um mesmo participante liquidante no SPI (booktransfer) (AG12).<br>FORBIDDEN_RETURN_PAYMENT - Não é permitido devolver a devolução de um pagamento instantâneo (AG13).<br>INCORRECT_AGENT - Participante direto não é liquidante do participante do usuário pagador / participante do usuário recebedor (AGNT).<br>ZERO_AMOUNT - Ordem de pagamento instantâneo com valor zero (AM01).<br>NOT_ALLOWED_AMOUNT - Ordem de pagamento/devolução em valor que faz superar o limite permitido para o tipo de conta transacional creditada (AM02).<br>INSUFFICIENT_FUNDS - Saldo insuficiente na conta PI do participante do usuário pagador (AM04).<br>WRONG_AMOUNT - Devolução de pagamento em valor que faz superar o valor da ordem de pagamento instantâneo correspondente (AM09).<br>INVALID_AMOUNT - Divergência entre a somatória dos valores do bloco ‘valorDoDinheiroOuCompra’ e o campo ‘valor’ (AM12).<br>INVALID_NUMBER_OF_TRANSACTIONS - Quantidade de transações inválida (AM18).<br>INCONSISTENT_WITH_END_CUSTOMER - CPF/CNPJ do usuário recebedor não é consistente com o titular da conta transacional especificada (BE01).<br>INVALID_IDENTIFICATION_CODE - Código de situação de pagamento ou de erro inválido (BE15).<br>INVALID_CREDITOR_IDENTIFICATION_CODE - QR Code rejeitado pelo participante do usuário recebedor (BE17).<br>CREDITOR_IDENTIFIER_INCORRECT - CPF/CNPJ do usuário recebedor incorreto (CH11).<br>ELEMENT_CONTENT_FORMALLY_INCORRECT - Elemento da mensagem incorreto (CH16).<br>ORDER_REJECTED - Ordem rejeitada pelo participante do usuário recebedor (DS04).<br>NOT_ALLOWED_PAYMENT - Participante que assinou a mensagem não é autorizado a realizar a operação na conta PI debitada. No caso em que o participante que assinou a mensagem não é o titular da conta PI debitada nem é o liquidante no SPI do participante do usuário pagador (DS0G).<br>NOT_ALLOWED_ACCOUNT - ISPB do participante que submeteu a resposta à ordem de pagamento/devolução diferente do ISPB do participante creditado pela ordem (DS0H).<br>USER_NOT_YET_ACTIVATED - Participante não se encontra cadastrado ou ainda não iniciou a operação no SPI (DS27).<br>INVALID_CREATION_DATE - Data e Hora do envio da mensagem inválida (DT02).<br>INVALID_CUT_OFF_DATE - Transação extrapola o prazo máximo para devolução de pagamento instantâneo regulamentado pelo Arranjo PIX (DT05).<br>SETTLEMENT_FAILED - Erro no processamento do pagamento instantâneo (ED05).<br>INVALID_PURPOSE - Inconsistência entre a finalidade da transação e o preenchimento do bloco elementos Structured (FF07).<br>INVALID_END_TO_END_ID - Identificador da operação mal formatado (FF08).<br>INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário pagador inválido ou inexistente (RC09).<br>INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário recebedor inválido ou inexistente (RC10).<br>REGULATORY_REASON - Ordem de pagamento em que o usuário pagador é sancionado por resolução do Conselho de Segurança das Nações Unidas (CSNU). Nos casos em que o usuário recebedor for o sancionado, a ordem de pagamento não deve ser rejeitada (RR4).<br>SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT - A transação original não está relacionada ao serviço de Saque Pix (SL02).<br>INVALID_BILL - Validação de expiração, validação de vencimento, Status Válido (INDT).  <br>OPERATION_WINDOW - Requisição está fora da janela de funcionamento (IDEA).  <br>INCOMPATIBLE_DATE - Data do pagamento divergente da data consentida ou divergente da data atual do QR Code (TERM).  <br>MISMATCH_AMOUNT - O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento (OB01).  <br>OVER_LIMIT - O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente (OB02).   <br>INVALID_CONSENT - Consentimento inválido (status não é "authorised" ou está expirado) (OB03).  <br>DENIED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora recusaram a operação (OB04).  <br>EXPIRED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora não tomaram ação para aprovar a operação (OB05).  <br>EXPIRED_BILL - O QR Code não é mais válido (OB06).  <br>[Restrição] Esse motivo deverá ser enviado quando o campo /data/status for igual a RJCT (REJECTED).|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|ABORTED_SETTLEMENT_TIMEOUT|
|**|ERROR_CREDITOR_AGENT|
|**|TIMEOUT_DEBTOR_AGENT|
|**|INVALID_CREDITOR_ACCOUNT_NUMBER|
|**|BLOCKED_ACCOUNT|
|**|CLOSED_CREDITOR_ACCOUNT_NUMBER|
|**|INVALID_CREDITOR_ACCOUNTTYPE|
|**|TRANSACTION_NOT_SUPPORTED|
|**|NOT_ALLOWED_BOOK_TRANSFER|
|**|FORBIDDEN_RETURN_PAYMENT|
|**|INCORRECT_AGENT|
|**|ZERO_AMOUNT|
|**|NOT_ALLOWED_AMOUNT|
|**|INSUFFICIENT_FUNDS|
|**|WRONG_AMOUNT|
|**|INVALID_AMOUNT|
|**|INVALID_NUMBER_OF_TRANSACTIONS|
|**|INCONSISTENT_WITH_END_CUSTOMER|
|**|INVALID_IDENTIFICATION_CODE|
|**|INVALID_CREDITOR_IDENTIFICATION_CODE|
|**|CREDITOR_IDENTIFIER_INCORRECT|
|**|ELEMENT_CONTENT_FORMALLY_INCORRECT|
|**|ORDER_REJECTED|
|**|NOT_ALLOWED_PAYMENT|
|**|NOT_ALLOWED_ACCOUNT|
|**|USER_NOT_YET_ACTIVATED|
|**|INVALID_CREATION_DATE|
|**|INVALID_CUT_OFF_DATE|
|**|SETTLEMENT_FAILED|
|**|INVALID_PURPOSE|
|**|INVALID_END_TO_END_ID|
|**|INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER|
|**|INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER|
|**|REGULATORY_REASON|
|**|SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT|
|**|INVALID_BILL|
|**|OPERATION_WINDOW|
|**|INCOMPATIBLE_DATE|
|**|MISMATCH_AMOUNT|
|**|OVER_LIMIT|
|**|INVALID_CONSENT|
|**|DENIED_MULTIPLE_AUTHORISATIONS|
|**|EXPIRED_MULTIPLE_AUTHORISATIONS|
|**|EXPIRED_BILL|

<h2 id="tocS_Identification">Identification</h2>

<a id="schemaidentification"></a>
<a id="schema_Identification"></a>
<a id="tocSidentification"></a>
<a id="tocsidentification"></a>

```json
{
  "personType": "PESSOA_NATURAL",
  "cpfCnpj": "58764789000137",
  "name": "Marco Antonio de Brito"
}

```

Objeto contendo os dados do recebedor (creditor).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|personType|[EnumPaymentPersonType](#schemaenumpaymentpersontype)|true|Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).|
|cpfCnpj|string|true|Identificação da pessoa envolvida na transação.  <br>Preencher com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.  <br>O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços.  <br>O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.|
|name|string|true|Em caso de pessoa natural deve ser informado o nome completo do titular da conta do recebedor.  <br>Em caso de pessoa jurídica deve ser informada a razão social ou o nome fantasia da conta do recebedor.|

<h2 id="tocS_Links">Links</h2>

<a id="schemalinks"></a>
<a id="schema_Links"></a>
<a id="tocSlinks"></a>
<a id="tocslinks"></a>

```json
{
  "self": "https://api.banco.com.br/open-banking/api/v1/resource",
  "first": "https://api.banco.com.br/open-banking/api/v1/resource",
  "prev": "https://api.banco.com.br/open-banking/api/v1/resource",
  "next": "https://api.banco.com.br/open-banking/api/v1/resource",
  "last": "https://api.banco.com.br/open-banking/api/v1/resource"
}

```

Referências para outros recusos da API requisitada.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|self|string(uri)|true|URI completo que gerou a resposta atual.|
|first|string(uri)|false|URI da primeira página que originou essa lista de resultados. Restrição - Obrigatório quando não for a primeira página da resposta|
|prev|string(uri)|false|URI da página anterior dessa lista de resultados. Restrição - 	Obrigatório quando não for a primeira página da resposta|
|next|string(uri)|false|URI da próxima página dessa lista de resultados. Restrição - Obrigatório quando não for a última página da resposta|
|last|string(uri)|false|URI da última página dessa lista de resultados. Restrição - Obrigatório quando não for a última página da resposta|

<h2 id="tocS_LoggedUser">LoggedUser</h2>

<a id="schemaloggeduser"></a>
<a id="schema_LoggedUser"></a>
<a id="tocSloggeduser"></a>
<a id="tocsloggeduser"></a>

```json
{
  "document": {
    "identification": "11111111111",
    "rel": "CPF"
  }
}

```

Usuário (pessoa natural) que encontra-se logado na instituição Iniciadora de Pagamento.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|document|object|true||
|» identification|string|true|Número do documento de identificação oficial do usuário.|
|» rel|string|true|Tipo do documento de identificação oficial do usuário.|

<h2 id="tocS_Meta">Meta</h2>

<a id="schemameta"></a>
<a id="schema_Meta"></a>
<a id="tocSmeta"></a>
<a id="tocsmeta"></a>

```json
{
  "totalRecords": 1,
  "totalPages": 1,
  "requestDateTime": "2021-05-21T08:30:00Z"
}

```

Meta informações referente a API requisitada.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|totalRecords|integer(int32)|true|Número total de registros no resultado|
|totalPages|integer(int32)|true|Número total de páginas no resultado|
|requestDateTime|string(date-time)|true|Data e hora da consulta, conforme especificação RFC-3339, formato UTC.|

<h2 id="tocS_PaymentConsent">PaymentConsent</h2>

<a id="schemapaymentconsent"></a>
<a id="schema_PaymentConsent"></a>
<a id="tocSpaymentconsent"></a>
<a id="tocspaymentconsent"></a>

```json
{
  "type": "PIX",
  "date": "2021-01-01",
  "currency": "BRL",
  "amount": "100000.12"
}

```

Objeto contendo dados de pagamento para consentimento.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|type|[EnumPaymentType](#schemaenumpaymenttype)|true|Este campo define o tipo de pagamento que será iniciado após a autorização do consentimento.|
|date|string(date)|true|Data do pagamento, conforme especificação RFC-3339.|
|currency|string|true|Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'. <br>Todos os valores monetários informados estão representados com a moeda vigente do Brasil.|
|amount|string|true|Valor da transação com 2 casas decimais.|

<h2 id="tocS_PaymentPix">PaymentPix</h2>

<a id="schemapaymentpix"></a>
<a id="schema_PaymentPix"></a>
<a id="tocSpaymentpix"></a>
<a id="tocspaymentpix"></a>

```json
{
  "amount": "100000.12",
  "currency": "BRL"
}

```

Objeto contendo dados do pagameto como moeda e valor.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|amount|string|true|Valor da transação com 2 casas decimais.|
|currency|string|true|Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'.  <br>Todos os valores monetários informados estão representados com a moeda vigente do Brasil.|

<h2 id="tocS_ResponseError">ResponseError</h2>

<a id="schemaresponseerror"></a>
<a id="schema_ResponseError"></a>
<a id="tocSresponseerror"></a>
<a id="tocsresponseerror"></a>

```json
{
  "errors": [
    {
      "code": "string",
      "title": "string",
      "detail": "string"
    }
  ],
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|errors|[object]|true||
|» code|string|true|Código de erro específico do endpoint|
|» title|string|true|Título legível por humanos deste erro específico|
|» detail|string|true|Descrição legível por humanos deste erro específico|
|meta|[Meta](#schemameta)|false|Meta informações referente a API requisitada.|

<h2 id="tocS_ResponsePaymentConsent">ResponsePaymentConsent</h2>

<a id="schemaresponsepaymentconsent"></a>
<a id="schema_ResponsePaymentConsent"></a>
<a id="tocSresponsepaymentconsent"></a>
<a id="tocsresponsepaymentconsent"></a>

```json
{
  "data": {
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2021-05-21T08:30:00Z",
    "expirationDateTime": "2021-05-21T08:30:00Z",
    "statusUpdateDateTime": "2021-05-21T08:30:00Z",
    "status": "AWAITING_AUTHORISATION",
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12"
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|data|object|true|Objeto contendo as informações de resposta do consentimento para a iniciação de pagamento individual.|
|» consentId|string|true|Identificador único do consentimento criado para a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.  <br>Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource <br>Identifier - URI - que é atribuído sob o URI scheme "urn" e um namespace URN específico, com a intenção de que o URN <br>seja um identificador de recurso persistente e independente da localização.  <br>Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:<br>- o namespace(urn)<br>- o identificador associado ao namespace da instituição transnmissora (bancoex) <br>- o identificador específico dentro do namespace (C1DD33123).  <br>Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).|
|» creationDateTime|string(date-time)|true|Data e hora em que o consentimento foi criado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).|
|» expirationDateTime|string(date-time)|true|Data e hora em que o consentimento da iniciação de pagamento expira, devendo ser sempre o creationDateTime mais 5 minutos. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC (UTC time format).<br>O consentimento é criado com o status AWAITING_AUTHORISATION, e deve assumir o status AUTHORIZED ou REJECTED antes do tempo de expiração - 5 minutos. Caso o tempo seja expirado, o status deve assumir REJECTED.<br>Para o cenário em que o status assumiu AUTHORISED, o tempo máximo do expirationDateTime do consentimento deve assumir "now + 60 minutos". Este é o tempo para consumir o consentimento autorizado, mudando seu status para CONSUMED. Não é possível prorrogar este tempo e a criação de um novo consentimento será necessária para os cenários de insucesso.<br>O tempo do expirationDateTime é garantido com os 15 minutos do access token, sendo possível utilizar mais três refresh tokens até totalizar 60 minutos.|
|» statusUpdateDateTime|string(date-time)|true|Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).|
|» status|[EnumAuthorisationStatusType](#schemaenumauthorisationstatustype)|true|Retorna o estado do consentimento, o qual no momento de sua criação será AWAITING_AUTHORISATION.<br>Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) para AUTHORISED ou REJECTED. <br>O consentimento fica no estado CONSUMED após ocorrer a iniciação do pagamento referente ao consentimento.  <br>Em caso de consentimento expirado a detentora deverá retornar o status REJECTED.  <br>Estados possíveis:  <br>AWAITING_AUTHORISATION - Aguardando autorização  <br>AUTHORISED - Autorizado   <br>REJECTED - Rejeitado  <br>CONSUMED - Consumido|
|» loggedUser|[LoggedUser](#schemaloggeduser)|true|Usuário (pessoa natural) que encontra-se logado na instituição Iniciadora de Pagamento.|
|» businessEntity|[BusinessEntity](#schemabusinessentity)|false|Usuário (pessoa jurídica) que encontra-se logado na instituição Iniciadora de Pagamento. [Restrição] Preenchimento obrigatório se usuário logado na instituição Iniciadora de Pagamento for um CNPJ (pessoa jurídica).|
|» creditor|[#/paths/~1payments~1v2~1consents/post/requestBody/content/application~1json/schema/properties/data/properties/creditor](#schema#/paths/~1payments~1v2~1consents/post/requestbody/content/application~1json/schema/properties/data/properties/creditor)|true|Objeto contendo os dados do recebedor (creditor).|
|» payment|[PaymentConsent](#schemapaymentconsent)|true|Objeto contendo dados de pagamento para consentimento.|
|» debtorAccount|[DebtorAccount](#schemadebtoraccount)|false|Objeto que contém a identificação da conta de origem do pagador.  <br>As informações quanto à conta de origem do pagador poderão ser trazidas no consentimento para a detentora, caso a iniciadora tenha coletado essas informações do cliente. Do contrário, será coletada na detentora e trazida para a iniciadora como resposta à criação do pagamento.|
|links|[ResponsePixPayment/properties/links](#schemaresponsepixpayment/properties/links)|true|Referências para outros recusos da API requisitada.|
|meta|[Meta](#schemameta)|true|Meta informações referente a API requisitada.|

<h2 id="tocS_ResponsePixPayment">ResponsePixPayment</h2>

<a id="schemaresponsepixpayment"></a>
<a id="schema_ResponsePixPayment"></a>
<a id="tocSresponsepixpayment"></a>
<a id="tocsresponsepixpayment"></a>

```json
{
  "data": {
    "paymentId": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
    "endToEndId": "E9040088820210128000800123873170",
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2020-07-21T08:30:00Z",
    "statusUpdateDateTime": "2020-07-21T08:30:00Z",
    "proxy": "12345678901",
    "status": "PDNG",
    "rejectionReason": "USER_NOT_YET_ACTIVATED",
    "localInstrument": "DICT",
    "cnpjInitiator": "50685362000135",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "transactionIdentification": "50685362000135",
    "remittanceInformation": "Pagamento da nota RSTO035-002.",
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|data|[ResponsePixPaymentData](#schemaresponsepixpaymentdata)|true|Objeto contendo dados do pagamento e da conta do recebedor (creditor).|
|links|object|true|Referências para outros recusos da API requisitada.|
|» self|string(uri)|true|URI completo que gerou a resposta atual.|
|meta|[Meta](#schemameta)|true|Meta informações referente a API requisitada.|

<h2 id="tocS_ResponsePixPaymentData">ResponsePixPaymentData</h2>

<a id="schemaresponsepixpaymentdata"></a>
<a id="schema_ResponsePixPaymentData"></a>
<a id="tocSresponsepixpaymentdata"></a>
<a id="tocsresponsepixpaymentdata"></a>

```json
{
  "paymentId": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
  "endToEndId": "E9040088820210128000800123873170",
  "consentId": "urn:bancoex:C1DD33123",
  "creationDateTime": "2020-07-21T08:30:00Z",
  "statusUpdateDateTime": "2020-07-21T08:30:00Z",
  "proxy": "12345678901",
  "status": "PDNG",
  "rejectionReason": "USER_NOT_YET_ACTIVATED",
  "localInstrument": "DICT",
  "cnpjInitiator": "50685362000135",
  "payment": {
    "amount": "100000.12",
    "currency": "BRL"
  },
  "transactionIdentification": "50685362000135",
  "remittanceInformation": "Pagamento da nota RSTO035-002.",
  "creditorAccount": {
    "ispb": "12345678",
    "issuer": "1774",
    "number": "1234567890",
    "accountType": "CACC"
  }
}

```

Objeto contendo dados do pagamento e da conta do recebedor (creditor).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|paymentId|string|true|Código ou identificador único informado pela instituição detentora da conta para representar  <br>a iniciação de pagamento individual. O `paymentId` deve ser diferente do `endToEndId`.  <br>Este é o identificador que deverá ser utilizado na consulta ao status da iniciação de pagamento efetuada.|
|endToEndId|[EndToEndId](#schemaendtoendid)|false|Deve ser preenchido no formato padrão ExxxxxxxxyyyyMMddHHmmkkkkkkkkkkk (32 caracteres; “case sensitive”, isso é, diferencia letras maiúsculas e minúsculas), sendo:<br>• “E” – fixo (1 caractere);  <br>• xxxxxxxx – identificação do agente que gerou o ´EndToEndId´, podendo ser: o ISPB do participante direto ou o ISPB do participante indireto (8 caracteres numéricos [0-9]);  <br>• yyyyMMddHHmm – data, hora e minuto (12 caracteres), seguindo o horário UTC, da submissão da ordem de pagamento, caso a liquidação seja prioritária, ou prevista para o envio da ordem ao sistema de liquidação, caso seja realizado um agendamento. Para ordens prioritárias e não prioritárias, aceita-se o preenchimento, pelo agente que gerou o ´EndToEndId´, com uma tolerância máxima de 12 horas, para o futuro e para o passado, em relação ao horário efetivo de processamento da ordem pelo SPI;  <br>• kkkkkkkkkkk – sequencial criado pelo agente que gerou o ´EndToEndId´ (11 caracteres alfanuméricos [a-z/A-Z/0-9]). Deve ser único dentro de cada “yyyyMMddHHmm”.  <br>Admite-se que o ´EndToEndId´ seja gerado pelo participante direto, pelo participante indireto ou pelo iniciador de pagamento.  <br>Ele deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.  <br>[Restrição] O ´EndToEndId´ deve ser informado obrigatoriamente caso o status do pagamento seja ACCEPTED_SETTLEMENT_COMPLETED.|
|consentId|string|true|Identificador único do consentimento criado para a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.  <br>Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource <br>Identifier - URI - que é atribuído sob o URI scheme "urn" e um namespace URN específico, com a intenção de que o URN <br>seja um identificador de recurso persistente e independente da localização.  <br>Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:<br>- o namespace(urn)<br>- o identificador associado ao namespace da instituição transnmissora (bancoex) <br>- o identificador específico dentro do namespace (C1DD33123).  <br>Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).|
|creationDateTime|string(date-time)|true|Data e hora em que o recurso foi criado.  <br>Uma string com data e hora conforme especificação RFC-3339,  <br>sempre com a utilização de timezone UTC(UTC time format).|
|statusUpdateDateTime|string(date-time)|true|Data e hora da última atualização da iniciação de pagamento.  <br>Uma string com data e hora conforme especificação RFC-3339,  <br>sempre com a utilização de timezone UTC(UTC time format).|
|proxy|string|false|Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.  <br>No caso de telefone celular deve ser informado no padrão E.1641.  <br>Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.  <br>No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.  <br>Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.  <br>No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.  <br>[Restrição] Obrigatório quando o campo localInstrument for igual a DICT.|
|status|[EnumPaymentStatusType](#schemaenumpaymentstatustype)|true|Estado atual da iniciação de pagamento. O estado evolui na seguinte ordem:  <br>1. PDNG (PENDING) - Iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.  <br>2. PART (PARTIALLY ACCEPTED) - Aguardando autorização múltipla alçada.  <br>3. ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Iniciação de pagamento aceita e processamento do pagamento foi iniciado.  <br>4. ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Débito realizado na conta do pagador.  <br>5. ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Crédito realizado na instituição de destino.  <br>Em caso insucesso:  <br>RJCT (REJECTED) - Instrução de pagamento rejeitada.|
|rejectionReason|[EnumRejectionReasonType](#schemaenumrejectionreasontype)|false|Motivo da rejeição do pagamento. Informações complementares sobre o motivo do status.  <br>ABORTED_SETTLEMENT_TIMEOUT - Liquidação da transação interrompida devido a timeout no SPI (AB03).<br>ERROR_CREDITOR_AGENT - Transação interrompida devido a erro no participante do usuário recebedor (AB09).<br>TIMEOUT_DEBTOR_AGENT - Timeout do participante emissor da ordem de pagamento (AB11).<br>INVALID_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor inexistente ou inválido (AC03).<br>BLOCKED_ACCOUNT - Conta transacional do usuário recebedor encontra-se bloqueada (AC06).<br>CLOSED_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor encerrada (AC07).<br>INVALID_CREDITOR_ACCOUNTTYPE - Tipo incorreto para a conta transacional do usuário recebedor (AC14).<br>TRANSACTION_NOT_SUPPORTED - Tipo de transação não é suportado/autorizado na conta transacional do usuário recebedor (AG03). Exemplo: transferência para conta salário.<br>NOT_ALLOWED_BOOK_TRANSFER - Não é permitida ordem de pagamento/devolução no SPI cujos recursos sejam transferidos de uma conta transacional para outra em uma mesma instituição participante ou entre participantes que utilizem o serviço de liquidação de um mesmo participante liquidante no SPI (booktransfer) (AG12).<br>FORBIDDEN_RETURN_PAYMENT - Não é permitido devolver a devolução de um pagamento instantâneo (AG13).<br>INCORRECT_AGENT - Participante direto não é liquidante do participante do usuário pagador / participante do usuário recebedor (AGNT).<br>ZERO_AMOUNT - Ordem de pagamento instantâneo com valor zero (AM01).<br>NOT_ALLOWED_AMOUNT - Ordem de pagamento/devolução em valor que faz superar o limite permitido para o tipo de conta transacional creditada (AM02).<br>INSUFFICIENT_FUNDS - Saldo insuficiente na conta PI do participante do usuário pagador (AM04).<br>WRONG_AMOUNT - Devolução de pagamento em valor que faz superar o valor da ordem de pagamento instantâneo correspondente (AM09).<br>INVALID_AMOUNT - Divergência entre a somatória dos valores do bloco ‘valorDoDinheiroOuCompra’ e o campo ‘valor’ (AM12).<br>INVALID_NUMBER_OF_TRANSACTIONS - Quantidade de transações inválida (AM18).<br>INCONSISTENT_WITH_END_CUSTOMER - CPF/CNPJ do usuário recebedor não é consistente com o titular da conta transacional especificada (BE01).<br>INVALID_IDENTIFICATION_CODE - Código de situação de pagamento ou de erro inválido (BE15).<br>INVALID_CREDITOR_IDENTIFICATION_CODE - QR Code rejeitado pelo participante do usuário recebedor (BE17).<br>CREDITOR_IDENTIFIER_INCORRECT - CPF/CNPJ do usuário recebedor incorreto (CH11).<br>ELEMENT_CONTENT_FORMALLY_INCORRECT - Elemento da mensagem incorreto (CH16).<br>ORDER_REJECTED - Ordem rejeitada pelo participante do usuário recebedor (DS04).<br>NOT_ALLOWED_PAYMENT - Participante que assinou a mensagem não é autorizado a realizar a operação na conta PI debitada. No caso em que o participante que assinou a mensagem não é o titular da conta PI debitada nem é o liquidante no SPI do participante do usuário pagador (DS0G).<br>NOT_ALLOWED_ACCOUNT - ISPB do participante que submeteu a resposta à ordem de pagamento/devolução diferente do ISPB do participante creditado pela ordem (DS0H).<br>USER_NOT_YET_ACTIVATED - Participante não se encontra cadastrado ou ainda não iniciou a operação no SPI (DS27).<br>INVALID_CREATION_DATE - Data e Hora do envio da mensagem inválida (DT02).<br>INVALID_CUT_OFF_DATE - Transação extrapola o prazo máximo para devolução de pagamento instantâneo regulamentado pelo Arranjo PIX (DT05).<br>SETTLEMENT_FAILED - Erro no processamento do pagamento instantâneo (ED05).<br>INVALID_PURPOSE - Inconsistência entre a finalidade da transação e o preenchimento do bloco elementos Structured (FF07).<br>INVALID_END_TO_END_ID - Identificador da operação mal formatado (FF08).<br>INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário pagador inválido ou inexistente (RC09).<br>INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário recebedor inválido ou inexistente (RC10).<br>REGULATORY_REASON - Ordem de pagamento em que o usuário pagador é sancionado por resolução do Conselho de Segurança das Nações Unidas (CSNU). Nos casos em que o usuário recebedor for o sancionado, a ordem de pagamento não deve ser rejeitada (RR4).<br>SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT - A transação original não está relacionada ao serviço de Saque Pix (SL02).<br>INVALID_BILL - Validação de expiração, validação de vencimento, Status Válido (INDT).  <br>OPERATION_WINDOW - Requisição está fora da janela de funcionamento (IDEA).  <br>INCOMPATIBLE_DATE - Data do pagamento divergente da data consentida ou divergente da data atual do QR Code (TERM).  <br>MISMATCH_AMOUNT - O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento (OB01).  <br>OVER_LIMIT - O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente (OB02).   <br>INVALID_CONSENT - Consentimento inválido (status não é "authorised" ou está expirado) (OB03).  <br>DENIED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora recusaram a operação (OB04).  <br>EXPIRED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora não tomaram ação para aprovar a operação (OB05).  <br>EXPIRED_BILL - O QR Code não é mais válido (OB06).  <br>[Restrição] Esse motivo deverá ser enviado quando o campo /data/status for igual a RJCT (REJECTED).|
|localInstrument|[EnumLocalInstrument](#schemaenumlocalinstrument)|true|Especifica a forma de iniciação do pagamento:  <br>- MANU - Inserção manual de dados da conta transacional  <br>- DICT - Inserção manual de chave Pix  <br>- QRDN - QR code dinâmico (*Domínio reservado para uso futuro*)  <br>- QRES - QR code estático (*Domínio reservado para uso futuro*)|
|cnpjInitiator|string|true|CNPJ do Iniciador de Pagamento devidamente habilitado para a prestação de Serviço de Iniciação no Pix.|
|payment|[PaymentPix](#schemapaymentpix)|true|Objeto contendo dados do pagameto como moeda e valor.|
|transactionIdentification|string|false|Trata-se de um identificador de transação que deve ser retransmitido intacto pelo PSP do pagador ao gerar a ordem de pagamento. Essa informação permitirá ao recebedor identificar e correlacionar a transferência, quando recebida, com a apresentação das instruções ao pagador. Os caracteres permitidos no contexto do Pix para o campo txid (EMV 62-05) são: - Letras minúsculas, de ‘a’ a ‘z’ - Letras maiúsculas, de ‘A’ a ‘Z’ - Dígitos decimais, de ‘0’ a ‘9’ [Restrição] Se localInstrument for igual a INIC, o campo transactionIdentification deve ser preenchido obrigatoriamente. Se localInstrument for igual a MANU ou DICT, o campo transactionIdentification não deve ser preenchido. A detentora de conta deve validar se a condicionalidade do campo foi atendida pela iniciadora de pagamento.|
|remittanceInformation|string|false|Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.|
|creditorAccount|[CreditorAccount](#schemacreditoraccount)|true|Objeto que contém a identificação da conta de destino do beneficiário/recebedor.|

