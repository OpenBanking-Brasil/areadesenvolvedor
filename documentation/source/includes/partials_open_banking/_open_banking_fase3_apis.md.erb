
<h1 id="fase-3-apis-do-open-banking-brasil">Fase 3 - APIs do Open Banking Brasil v1.0.1</h1>

> Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.

### Iniciação de pagamentos

Na fase 3 do Open Banking Brasil  será oferecida aos clientes a possibilidade de movimentação financeira a partir de aplicativos e plataformas externas ao ambiente no qual mantém sua conta.

Na prática o que teremos é a oferta de pagamentos, transferências e outras operações executadas a partir de aplicativos de terceiros, sempre com a prévia coleta do consentimento do cliente para a iniciação destas transações.

No âmbito da Resolução conjunta nº 1, de 04 de maio de 2020 o Open Banking Brasil passa a contar com os atores e operações ali definidos, reproduzidos a seguir.

#### Instituição detentora de conta

É a instituição participante do Open Banking que possui a capacidade de ofertar quaisquer dos tipos de conta a seguir: conta de depósitos à vista (conta-corrente), conta de poupança, conta-salário e conta de pagamento pré-paga, guardando similaridade com o conceito de [ASPSP](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Faccount-providers%2F&amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801583820%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=jeezEb6FpQnpx7uz2v3NAf2FYuSOps13d8VvR9kiRS8%3D&amp;reserved=0<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Faccount-providers%2F&amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801583820%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=jeezEb6FpQnpx7uz2v3NAf2FYuSOps13d8VvR9kiRS8%3D&amp;reserved=0>) - Account Servicing Payment Service Provider do modelo britânico.

No contexto do Open Banking as instituições detentoras de conta deverão observar critérios de segurança e conformidade previamente definidos.

Consulte neste [link](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Faspsp-user-guide.html&amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=LYglRitKRsQgc2LUIlgmHnfs%2BuBWPuw6TEdM7ZanORE%3D&amp;reserved=0<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Faspsp-user-guide.html&amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=LYglRitKRsQgc2LUIlgmHnfs%2BuBWPuw6TEdM7ZanORE%3D&amp;reserved=0>) as especificações de segurança aplicáveis.

#### Instituição iniciadora de transação de pagamento

É a instituição participante que presta serviço de iniciação de transação de pagamento sem deter em momento algum os fundos transferidos na prestação do serviço.

De forma análoga ao caso das detentoras de conta, as iniciadoras mantém certo grau de similaridade com o conceito de [TPP](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Fthird-party-providers%2F&amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=AwM0i68xyxbQVEgYe9gIzWXUdUJuHX22GsGBARFP0r8%3D&amp;reserved=0<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Fthird-party-providers%2F&amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=AwM0i68xyxbQVEgYe9gIzWXUdUJuHX22GsGBARFP0r8%3D&amp;reserved=0>) - Third Party Provider do modelo britânico, devendo também observar critérios específicos de segurança, conforme detalhado neste [link](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Ftpp-user-guide.html&amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=jM1KEOJPgixn6XE98%2BHERACS3ZOjXcYzMbazr3KiCMs%3D&amp;reserved=0<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Ftpp-user-guide.html&amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=jM1KEOJPgixn6XE98%2BHERACS3ZOjXcYzMbazr3KiCMs%3D&amp;reserved=0>).

#### Serviço de iniciação de transação de pagamento

É o serviço que possibilita a iniciação da instrução de uma transação de pagamento, ordenado pelo cliente, relativamente a uma conta de depósitos à vista (conta-corrente),  conta-salário, conta de poupança ou conta de pagamento pré-paga.

Inicialmente o Open Banking estará disponibilizando a iniciação de Pix com execução na data corrente.

Futuramente com a evolução do ecossistema novas modalidades de operações serão agregadas, assim como a possibilidade de agendamentos.

#### Iniciação pelo Recebedor
Iniciação pelo recebedor ocorre quando a prestação de serviço pela iniciadora é para, e somente para,  o recebedor. Nestes casos somente será permitido como beneficiário do pagamento o próprio recebedor. Algumas Instituições Detentoras de conta precisarão ajustar seus sistemas de forma a apropriar o campo em sua estrutura ao invés de gerá-lo nos casos pertinentes.

#### Informações gerais
O QR Code estático deve ser validado nos dados que o compõe. Em particular, não existindo valor financeiro, a transação assume o valor do consentimento, que será objeto de autorização posterior pelo cliente.

### Idempotência

Segundo a W3C, "um método HTTP idempotente é um método HTTP que pode ser chamado muitas vezes sem resultados diferentes ou efeitos colaterais. Não importa se o método é chamado apenas uma vez ou dez vezes. O resultado deve ser o mesmo. Essencialmente, significa que o resultado de uma solicitação executada com sucesso é independente do número de vezes que ela é executada. Por exemplo, na aritmética, adicionar zero a um número é uma operação idempotente."

Os conhecidos métodos GET, PUT e DELETE são naturalmente idempotentes, assim como HEAD, OPTIONS e TRACE também são.

Porém, o método POST requer um tratamento especial para que se torne idempotente e, por estarmos tratando aqui de meios de pagamentos, fazer esse tratamento é algo desejável para que não ocorram acidentes.

#### Por que é necessário tratarmos a Idempotência do POST?

Imagine que seja realizado um POST de pagamento e, depois de alguns segundos, é retornada uma mensagem de Timeout. Nesse caso, não é possível saber se o POST foi efetivo e enviar o POST novamente, sem tratar a idempotência, poderá ocasionar em duplicidade de pagamento.

#### Como mitigarmos esse risco?

Do lado da iniciadora do pagamento: É necessário que seja enviado o POST com um GUID de Idempotência. Caso o mesmo POST seja reenviado por acidente ou precise ser reenviado, por qualquer motivo que seja, basta reenviar o POST com o mesmo GUID de Idempotência.

Do lado da detentora da conta: É necessário validar o GUID de Idempotência recebido. Caso tenha recebido o mesmo GUID de Idempotência, a nova mensagem de POST deverá ser descartada.

Importante reforçar que cada nova transação com POST deverá ter um novo GUID de Idempotência.

A iniciadora não deve usar comportamento idempotente do POST para pesquisar o status dos recursos.

#### Conjunto inicial de regras propostas na aplicação da idempotencia:

- A iniciadora/TPP não deve alterar o corpo da solicitação ao usar a mesma chave de idempotência. Se a iniciadora alterar o corpo da solicitação, a detentora/ASPSP não deve modificar o recurso final. A detentora pode tratar este caso como uma ação fraudulenta;
- A detentora não deve criar um novo recurso para uma solicitação POST se estiver determinada como uma solicitação idempotente;
- Na criação a detentora deve responder à solicitação com o status atual do recurso (ou um status que seja pelo menos tão atual quanto o que estiver disponível nos canais eletrônicos existentes) e um código de status HTTP 201 (CREATED);
- A iniciadora não deve usar comportamento idempotente para pesquisar o status dos recursos;
- A detentora pode usar a assinatura da mensagem, junto com a chave de idempotência, para garantir que o corpo da solicitação não seja alterado;
- Para a API de Iniciação de Pagamento, a chave de idempotência deverá ser armazenada para controle quando a requisição for processada com sucesso (HTTP Status 201) ou quando ocorrer um erro de negócio (HTTP Status 422);
- Para a API Consentimento de Pagamento, a chave de idempotência deverá ser armazenada para controle quando a requisição for processada com sucesso (HTTP Status 201);
- O comportamento idempotente deve ser mantido por 24 horas para uma mesma chave de idempotencia;
- Toda nova requisição exige que a assinatura da mensagem seja refeita, contendo um novo jti e iat.

#### Cenários de uso de idempotência
1. Ao receber uma requisição com o mesmo x-idempotency-key e com a claim data do JWT com conteúdo idêntico ao da requisição original, a requisição deverá ser processada entregando o mesmo resultado obtido anteriormente. Isso significa que, caso a requisição inicial tenha criado um recurso, este mesmo recurso deverá ser retornado, com seu status atualizado.
2. Ao receber uma requisição com o mesmo x-idempotency-key e com a claim data do JWT com conteúdo diferente do original a requisição deverá ser recusada com o HTTP Status 422 com código NAO_INFORMADO.
3. Ao receber uma requisição com o mesmo x-idempotency-key e com a claim iss não pertencente a organização que possui o software cliente (clientId) a requisição deve ser recusada com o HTTP Status 403.

### Diagrama de Sequência
![Iniciacao_de_Pagamento](images/sequence-diagrams/iniciacao_de_pagamento.png)
<a href="images/sequence-diagrams/iniciacao_de_pagamento.png" target="_blank">Download do Diagrama de Sequência</a>

#### Descrição do Diagrama de Sequência – APIs Fase 3

#### Detalhamento da iniciação de pagamento:

1. Debtor (Usuário) inicia o processo de pagamento na iniciadora.
2. Na iniciadora, o debtor seleciona a detentora e os dados de pagamentos:
<b>Observação</b>: não serão ofertados, no primeiro momento, <b>Pix Saque e Pix troco</b>. Também não será possível agendamentos para <b>Pix QR Codes Dinâmico com vencimento</b>.
  <a href="https://www.bcb.gov.br/estabilidadefinanceira/pix?modalAberto=regulamentacao_pix" target="_blank">Aqui referências a regulamentação relacionada ao Pix</a>.

    <ol type="a">
      <li>Se transação por Chave Pix ou QR Code Estático:
        <ol type="i">
          <li>É realizada consulta ao DICT (diretório de contas).<br>
          <b>Observação</b>: se a Iniciadora for um participante direto, detentora ou não de conta, no ecossistema do Pix, ele fará a consulta de forma direta ao DICT. Se a iniciadora for um participante indireto, será necessário consulta por meio de uma instituição com acesso direto com a qual a iniciadora possua relacionamento.
          </li>
          <li>A iniciadora recebe as informações consultadas:
            <ol>
              <li>Dados de chave</li>
              <li>Nome do creditor</li>
              <li>Instituição detentora da conta do creditor</li>
              <li>CPF / CPNJ do creditor</li>
            </ol>
           </li>
        </ol>
      </li>
      <li>Se transação por QR Code Dinâmico:
         <ol type="i">
           <li>É realizada consulta dos dados do QR code do creditor:
             <ol>
               <li>CNPJ / CPF</li>
               <li>Data de vencimento</li>
               <li>Nome Instituição</li>
               <li>Endereço (logradouro, cidade, UF e CEP)</li>
               <li>Identificador</li>
               <li>Chave Pix</li>
               <li>Valor Original</li>
               <li>Valor Final</li>
               <li>Vencimento</li>
               <li>Expiração</li>
              </ol>
          </li>
        </ol>
      </li>
      <li>Se transação por dados manuais (agência e conta):
        <ol type="i">
           <li>Insere-se dados:
             <ol>
               <li>Instituição financeira</li>
               <li>Agência</li>
               <li>Conta</li>
               <li>Nome</li>
               <li>CPF / CNPJ</li>
             </ol>
          </li>
          <li><b>Observação</b>: não é realizada consulta no creditor ou no DICT.
          </li>
        </ol>
      </li>
    </ol>

3. Após consultas, a iniciadora segue para o fluxo de autorização e consentimento.

#### Estabelece TLS
Toda comunicação máquina-a-máquina (m2m) usará mTLS, conforme RFC rfc8705 e detalhado na especificação de segurança:
  <a href="https://openbanking-brasil.github.io/specs-seguranca/open-banking-brasil-financial-api-1_ID3.html" target="_blank">Open Banking Brasil Financial-grade API Security Profile 1.0 Implementers Draft 3</a>.

#### POST /tokens - Pedido de access_token e scope: payments, openid
Antes de começar o fluxo de iniciação de pagamento, a Instituição Iniciadora deverá ter se cadastrado como *client* na Instituição Detentora da Conta, em acordo com o especificado para o Registro Dinâmico de Clientes (Dynamic Client Registration). Os detalhes dessa etapa podem ser encontrados na especificação de segurança: 
<a href="https://openbanking-brasil.github.io/specs-seguranca/open-banking-brasil-dynamic-client-registration-1_ID2.html" target="_blank">Open Banking Brasil Financial-grade API Dynamic Client Registration 1.0 Implementers Draft 2</a>.
Uma vez cadastrada, a Instituição Iniciadora deverá obter o token de acesso (*access_token*) pelo fluxo de *client credentials*, conforme especificado pela RFC 6749 (rfc6749), com os escopos *payments* e *openid*.

#### Valida certificado SSL e scopes
Ao receber a requisição da Iniciadora, o Servidor de Autorização da Instituição Detentora da Conta deverá validar o certificado SSL e os escopos, se esses estão de acordo com a especificação: *payments* e *openid*.

#### Gera access_token
Em caso de sucesso da validação, o Servidor de Autorização da Instituição Detentora da Conta deverá gerar o *access_token*, que será utilizado para a criação de consentimento.

#### Access_token (scope: payments, openid)
O Servidor de Autorização da Instituição Detentora da Conta deverá responder à requisição com o *access_token* conforme padrões a serem definidos pelo GT de Segurança.

#### POST /payments/v1/consents
Para a criação de consentimento, considerando o requerido para FAPI - Loding Intent (<a href="https://bitbucket.org/openid/fapi/src/master/Financial_API_Lodging_Intent.md" target="_blank">Financial_API_Lodging_Intent.md</a>), após a obtenção do token de acesso, a Instituição Iniciadora deverá usar esse token de acesso para fazer a requisição POST de consentimento.
A criação do consentimento encontra-se detalhada na seção das APIs para Pagamentos (<a href="#em-revisao-criar-consentimento-para-iniciacao-de-pagamento">Open Banking Brasil</a>).

#### 201 Created
A API de Consentimento deverá responder o Http Status 201 e Payload contendo ***consentId***, e status inicial do consentimento em **AWAITING_AUTHORISATION** conforme especificado na documentação <a href="#em-revisao-criar-consentimento-para-iniciacao-de-pagamento">Open Banking Brasil</a>.

#### Redirecionamento
No caso do consentimento ter sido criado com sucesso, a Instituição Iniciadora deverá fazer o redirecionamento para a Instituição Detentora da Conta. Esse fluxo de redirecionamento deve considerar todos os requisitos definidos para o objeto de requisição OpenID Connect (Seção 4.3 da especificação de segurança - <a href="https://openbanking-brasil.github.io/specs-seguranca/tpp-user-guide.html" target="_blank">Third Party Provider End To End User Guide</a>).
Esse redirecionamento é o passo que permitirá o início da autenticação do usuário na Instituição Detentora da Conta.

#### Validações de negócios (Detentora)
Ao receber o POST /payments/v1/pix/payments é importante observar que a Detentora deverá validar as informações passadas pela Iniciadora nos campos do payload de envio do consentimento e do pagamento (como, por exemplo, valores e dados do creditado), além de ser necessário decodificar o código para os casos de pagamentos iniciados a partir de um Pix QRCode, a fim de que a Detentora carregue as informações complementares (como, por exemplo, o TxID) na mensageria do Pix (atenção para a PACS008 e as <a href="https://www.bcb.gov.br/estabilidadefinanceira/pix?modalAberto=regulamentacao_pix" target="_blank">regulamentações do Pix</a>).
A Detentora deve validar as informações de detalhes do payload com os dados de detalhes do consentimento, de acordo com a forma de pagamento. Caso os dados do detalhe informados no consentimento sejam diferente dos dados enviados na iniciação de pagamento, a Detentora de retornar erro HTTP 422 Unprocessable Entity, com o code BENEFICIARIO_INCOMPATIVEL.

#### Efetivação do pagamento&lt;&lt;Assync&gt;&gt;
A Detentora de Conta efetua a transação de pagamento entre o Debtor e Creditor através da forma de pagamento escolhida pelo Debtor. A efetivação da transação acontece de maneira assíncrona ao fluxo do Open Banking, seguindo as regras e interfaces do arranjo utilizado (apenas PIX disponível nesse momento).

#### Loop (Polling)
A Iniciadora deverá consultar periodicamente a Instituição Detentora de Conta para verificar o status da transação de iniciação pagamento.
Os possíveis status de uma transação de iniciação de pagamento estão detalhados na documentação (<a href="#tocS_EnumPaymentStatusType">Open Banking Brasil</a>).
Como sugestão, é indicado que a Instituição Iniciadora do pagamento implemente um retry exponencial e respeite o “rate limit” descriminado na documentação.
A recomendação para uso do polling encontra-se detalhada na seção de “Recomendação uso de polling” (<a href="#recomendacao-uso-de-polling">Open Banking Brasil</a>)).

#### GET pix/payments/{paymentId}
Durante o período de polling a Iniciadora deverá consultar o status da transação através da rota “Get pix/payments/{paymentId}” informado o respectivo paymentId da transação.
A consulta encontra-se detalhada na seção das APIs para Pagamentos (<a href="#em-revisao-pix-consultar-iniciacao-de-pagamento">Open Banking Brasil</a>).

#### Exibe comprovante de iniciação de pagamento
Caso a Iniciadora identifique que a transação de pagamento foi aprovada pela Detentora de Conta (status “ACCC”), poderá ser exibido o comprovante da **efetivação** da Transação de Pagamento. Caso o status do pagamento seja diferente de “ACCC” e/ou “RJCT”, deverá ser apresentada a efetivação da **solicitação** de Iniciação de Pagamento, apresentando as informações (<a href="#guia-do-usuario-instituicao-receptora-ou-iniciadora-de-pagamentos">segundo Guia de Usuário</a> – “Etapa 6: Efetivação da Solicitação):

  - Forma de pagamento (de acordo com os arranjos de pagamento vigentes e Circular 4.015);
  - Valor da transação de pagamento (opcional para transações sucessivas);
  - Informações referentes ao Recebedor da Transação de Pagamento;

Os possíveis status de uma transação de iniciação de pagamento estão detalhados na documentação (<a href="#tocS_EnumPaymentStatusType">Open Banking Brasil</a>).

### Máquina de Estados
#### Os possíveis status do consentimento são:

AWAITING_AUTHORISATION - Aguardando autorização
AUTHORISED - Autorizado
REJECTED - Rejeitado
CONSUMED - Consumido

![Maquina de Estados](images/sequence-diagrams/state-machine_phase3.png)
<a href="images/sequence-diagrams/state-machine_phase3.png" target="_blank">Download da Máquina de Estados</a>

Algumas definições são importantes para tratar a transição dos estados do consentimento em diferentes momentos do fluxo:

#### AWAITING_AUTHORISATION
- O consentimento é sempre criado com o status AWAITING_AUTHORISATION. Ele pode ser aprovado antes do tempo de expiração de 5 minutos, assumindo o status AUTHORISED. Se não, deve assumir o status REJECTED caso expire ou seja cancelado pelo usuário.

#### AUTHORISED
- Para o cenário em que o status assumiu AUTHORISED, o tempo máximo do expirationDateTime do consentimento deve assumir "now + 60 minutos". Este é o tempo para consumir o consentimento autorizado, mudando seu status para CONSUMED. Não é possível prorrogar este tempo e a criação de um novo consentimento será necessária para os cenários de insucesso. O tempo do expirationDateTime é garantido com os 15 minutos do access token, sendo possível utilizar mais três refresh tokens até totalizar 60 minutos.

##### REJECTED
- Em caso de consentimento expirado a Detentora deverá retornar o status REJECTED.
- Em caso de consentimento rejeitado pelo usuário ou por regra de negócio da Detentora, o status deverá ser retornado como REJECTED.

#### CONSUMED
- O consentimento assume o status CONSUMED após ocorrer o processamento da iniciação do pagamento, seja ele com sucesso (HTTP 201) ou ainda em casos de insucesso (HTTP 422) retornados pela Detentora. Para os demais códigos HTTP não há mudança de status do consentimento, o mesmo permanecerá AUTHORISED, respeitando o tempo máximo de expiração do consentimento (60 minutos).

### Recomendação uso de polling
#### A consulta via GET, para verificar o processamento da transação, pode ser efetuada a qualquer momento desde que se respeite o rate limit de:
- 300 TPS global, 50 TPS por instituição e 8 TPS por endereço IP (Internet Protocol).
Como sugestão, é indicado que a instituição iniciadora do pagamento implemente um retry exponencial.

### Controle de acesso

O endpoint de consulta de pagamento GET /pix/payments/{​​​paymentId}​​​ deve suportar acesso a partir de access_token emitido por meio de um _grant_type_ do tipo `client credentials`, como opção do uso do token vinculado ao consentimento (hybrid flow).
Para evitar vazamento de informação, a detentora deve validar que o pagamento consultado pertence ao `client_id` que o criou e, caso haja divergências, retorne um erro HTTP 400.

### Como assinar o payload

No contexto da API Payment Initiation, os payloads de mensagem de consentimento e de pagamento que trafegam tanto por parte da instituição iniciadora de transação de pagamento quanto por parte da instituição detentora de conta devem estar assinados. Abaixo temos as orientações para assinatura das mensagens JWS.

Informações complementares de segurança podem ser consultadas em <a href="https://github.com/OpenBanking-Brasil/specs-seguranca/blob/main/open-banking-brasil-financial-api-1_ID3-ptbr.md"> https://github.com/OpenBanking-Brasil/specs-seguranca/blob/main/open-banking-brasil-financial-api-1_ID3-ptbr.md</a>.

- **Passo 1** - Identifique a chave privada e o certificado de assinatura correspondente a serem usados para assinatura:

As assinaturas devem ser realizadas com uso do certificado digital de assinatura especificado no <a href="https://github.com/OpenBanking-Brasil/specs-seguranca/blob/main/open-banking-brasil-certificate-standards-1_ID1-ptbr.md#certificado-de-assinatura-certificadoassinatura" target="_blank">Padrão de Certificados Open Banking Brasil</a>.

O certificado de assinatura deve ser válido no momento da criação do JWS.

- **Passo 2** - Geração do JOSE Header

O JOSE Header deve conter os seguintes campos:

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|alg|string|true|O algoritmo que será usado para assinar o JWS. Deve ser preenchido com o valor `PS256`.|
|kid|string|true|Deve ser obrigatoriamente preenchido com o valor do identificador da chave utilizado para a assinatura.|
|typ|string|true|É o tipo de conteúdo usado para trafegar mensagens na API. Deve ser preenchido com o valor `JWT`.|

- **Passo 3** - Montando a mensagem JWS

Para garantir a integridade e o não-repúdio das informações tramitadas em *API´s sensíveis e que indicam essa necessidade na sua documentação*, deve ser adotado a estrutura no padrão JWS definida na [<a href="https://datatracker.ietf.org/doc/html/rfc7515" target="_blank">RFC7515</a>] e que inclui:

**Cabeçalho** (_JSON Object Signing and Encryption – JOSE Header_), onde se define o algoritmo utilizado e inclui informações sobre a chave pública ou certificado que podem ser utilizadas para validar a assinatura;

**Payload** (_JWS Payload_): conteúdo propriamente dito e detalhado na especificação da API além de informações sobre `claims` JWT ;

**Assinatura digital** (_JWS Signature_): assinatura digital, realizada conforme parâmetros do cabeçalho.

O payload das mensagens (requisição e resposta _JWT_) assinadas devem incluir as seguintes `claims` presentes na [<a href="https://datatracker.ietf.org/doc/html/rfc7519#section-4.1" target="_blank">RFC7519</a>] (JWT):

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|aud|string|true|(***requisição JWT***): o Provedor do Recurso (p. ex. a instituição Detentora da Conta) deverá validar se o valor do campo **aud** coincide com o endpoint sendo acionado.<br>(***resposta JWT***): o cliente da API (p. ex. instituição Iniciadora) deverá validar se o valor do campo **aud** coincide com o seu próprio `organisationId` listado no diretório.|
|iss|string|true|(***requisição JWT*** e ***resposta JWT***): o receptor da mensagem deverá validar se o valor do campo **iss** coincide com o `organisationId` da outra parte listado no diretório.|
|jti|string|true|(***requisição JWT*** e ***resposta JWT***): o valor do campo **jti** deverá ser preenchido com o UUID definido pela instituição de acordo com a <a href="https://datatracker.ietf.org/doc/html/rfc4122" target="_blank">RFC 4122</a> usando o versão 4.|
|iat|string|true|(***requisição JWT*** e ***resposta JWT***): o valor do campo **iat** deverá ser preenchido com o horário da geração da mensagem e de acordo com o padrão estabelecido na <a href="https://datatracker.ietf.org/doc/html/rfc7519#section-2" target="_blank">RFC7519</a> para o formato _NumericDate_. A claim iat deverá ser gerada no Unix Time GMT +0 e sua verificação deverá possuir uma tolerância de +/- 60 segundos para cobrir pequenas diferenças nos relógios dos servidores dos participantes.|

- **A claim do “jti” deve ser única para um clientId dentro de um intervalo de tempo de 86.400 segundos, não podendo ser reutilizada neste período. Em caso de reutilização, deverá ser retornado o código de erro HTTP 403.**

- **As validações referentes as claims do JWT devem preceder a validação de idempotência (e.g. “jti”, “iat” e “iss”)**

Cada elemento acima deve ser codificado utilizando o padrão Base64url [<a href="https://datatracker.ietf.org/doc/html/rfc4648#section-5" target="_blank">RFC4648</a>] e, feito isso, os elementos devem ser concatenados com “.” (método JWS Compact Serialization, conforme definido na [<a href="https://datatracker.ietf.org/doc/html/rfc7515#section-3.1" target="_blank">RFC7515</a>]).

Formato da mensagem JWS:

<span style="background: #e9e8e8; padding: 3px;">**payload** = Base64url(**JOSEHeader**)  +  "." + Base64url(**payload JWT**)  +  "."  +  Base64url(**digital signature**)</span>

Veja ao lado exemplo de mensagem JWS assinada e codificada e um exemplo de mensagem JWS decodificada.

> Exemplo de requisição - JWS assinada e codificada

```json
  eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlBXQWk1cnVRY0hmelB6cTJKRmRwWTduQVVoNkx6VFRRdERCVXBPTTM3SlEifQ.eyJhdWQiOiIzNDQ5YmYyMS0wYjA3LTQ4ZTYtYjZmYy0xM2ViMTYxYTk5MDEiLCJpc3MiOiJjYTFiOThlMS05N2EyLTQzZGItOTQ3Zi04YTA4MDU0YzM0MmUiLCJqdGkiOiJhMmZkMzkzYy0xMDdhLTRhZDQtYmUyMi0zY2ZlZWVhOTBlZmUiLCJpYXQiOiIxNjI4MjU3NzM3IiwiZGF0YSI6eyJjb25zZW50SWQiOiJ1cm46YmFuY29leDpDMUREMzMxMjMiLCJjcmVhdGlvbkRhdGVUaW1lIjoiMjAyMS0wNS0yMVQwODozMDowMFoiLCJleHBpcmF0aW9uRGF0ZVRpbWUiOiIyMDIxLTA1LTIxVDA4OjMwOjAwWiIsInN0YXR1c1VwZGF0ZURhdGVUaW1lIjoiMjAyMS0wNS0yMVQwODozMDowMFoiLCJzdGF0dXMiOiJBV0FJVElOR19BVVRIT1JJU0FUSU9OIiwibG9nZ2VkVXNlciI6eyJkb2N1bWVudCI6eyJpZGVudGlmaWNhdGlvbiI6IjExMTExMTExMTExIiwicmVsIjoiQ1BGIn19fSwiYnVzaW5lc3NFbnRpdHkiOnsiZG9jdW1lbnQiOnsiaWRlbnRpZmljYXRpb24iOiIxMTExMTExMTExMTExMSIsInJlbCI6IkNOUEoifX0sImNyZWRpdG9yIjp7InBlcnNvblR5cGUiOiJQRVNTT0FfTkFUVVJBTCIsImNwZkNucGoiOiI1ODc2NDc4OTAwMDEzNyIsIm5hbWUiOiJNYXJjbyBBbnRvbmlvIGRlIEJyaXRvIn0sInBheW1lbnQiOnsidHlwZSI6IlBJWCIsImRhdGUiOiIyMDIxLTAxLTAxIiwiY3VycmVuY3kiOiJCUkwiLCJhbW91bnQiOiIxMDAwMDAuMTIiLCJpYmdlVG93bkNvZGUiOiI1MzAwMTA4IiwiZGV0YWlscyI6eyJsb2NhbEluc3RydW1lbnQiOiJESUNUIiwicXJDb2RlIjoiMDAwMjAxMDQxNDEyMzQ1Njc4OTAxMjM0MjY2NjAwMTRCUi5HT1YuQkNCLlBJWDAxNDQ2Njc1NkM2MTZFNkYzMjMwMzEzOTQwNjU3ODYxNkQ3MDZDNjUyRTYzNkY2RDI3MzAwMDEyXG5CUi5DT00uT1VUUk8wMTEwMDEyMzQ1Njc4OTUyMDQwMDAwNTMwMzk4NjU0MDYxMjMuNDU1ODAyQlI1OTE1Tk9NRURPUkVDRUJFRE9SNjAwOEJSQVNJTElBNjEwODcwMDc0OTAwNjJcbjUzMDUxNVJQMTIzNDU2NzgtMjAxOTUwMzAwMDE3QlIuR09WLkJDQi5CUkNPREUwMTA1MS4wLjA4MDQ1MDAxNEJSLkdPVi5CQ0IuUElYMDEyM1BBRFJBTy5VUkwuUElYLzAxMjNBQlxuQ0Q4MTM5MDAxMkJSLkNPTS5PVVRSTzAxMTkwMTIzLkFCQ0QuMzQ1Ni5XWFlaNjMwNEVCNzZcbiIsInByb3h5IjoiMTIzNDU2Nzg5MDEiLCJjcmVkaXRvckFjY291bnQiOnsiaXNwYiI6IjEyMzQ1Njc4IiwiaXNzdWVyIjoiMTc3NCIsIm51bWJlciI6IjEyMzQ1Njc4OTAiLCJhY2NvdW50VHlwZSI6IkNBQ0MifX19LCJkZWJ0b3JBY2NvdW50Ijp7ImlzcGIiOiIxMjM0NTY3OCIsImlzc3VlciI6IjE3NzQiLCJudW1iZXIiOiIxMjM0NTY3ODkwIiwiYWNjb3VudFR5cGUiOiJDQUNDIn0sImxpbmtzIjp7InNlbGYiOiJodHRwczovL2FwaS5iYW5jby5jb20uYnIvb3Blbi1iYW5raW5nL3BheW1lbnRzL3YxL2NvbnNlbnRzIn0sIm1ldGEiOnsidG90YWxSZWNvcmRzIjoxLCJ0b3RhbFBhZ2VzIjoxLCJyZXF1ZXN0RGF0ZVRpbWUiOiIyMDIxLTA1LTIxVDA4OjMwOjAwWiJ9fQ.FH8722_85hWbYQS7g9C_b0_vjYvzaByq7ovFIVXWUsreEyb1KvhXFm1-GttBXIQORv9DpSsimmqo1MsLQE8Qc_J3fMkb-vNfMAd5D4JJUSJq33X8ydAvrXdOyCfjeEcUC-6g_O3nexT6clK6RkH0Umf6X3hev3JNaObk2IvjKeMdygQ3UXpGl2CTCCWvmcfcGeRA-sNdLheLQsVIPoopZ-FHBmr5MboLRod06SCO-BKkLdKg8eVAf6LrkiZrFLVlDMwNTFolUK7JlNnPZjPdSBmR7pPjPzT1blgd9fTWl7pbOh93mejgVFB0B3aKHz-2Y83KBCTH8C32rnnxK4YYmA
```

> Exemplo de requisição - JWS decodificada

```json
{
  "alg": "PS256",
  "typ": "JWT",
  "kid": "PWAi5ruQcHfzPzq2JFdpY7nAUh6LzTTQtDBUpOM37JQ"
}
{
  "aud": "https://api.banco.com.br/openbanking/payments/v1/consents",
  "iss": "5647fe90-f6bc-11eb-9a03-0242ac130003",
  "jti": "7960577c-662c-456e-8cf5-e630828af635",
  "iat": "1628257484",
  "data": {
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12",
      "ibgeTownCode": "5300108",
      "details": {
        "localInstrument": "DICT",
        "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
        "proxy": "12345678901",
        "creditorAccount": {
          "ispb": "12345678",
          "issuer": "1774",
          "number": "1234567890",
          "accountType": "CACC"
        }
      }
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  }
}

* "Assinatura omitida por questões de brevidade"

```

 > Exemplo de resposta - JWS assinada e codificada

```json
  eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlBXQWk1cnVRY0hmelB6cTJKRmRwWTduQVVoNkx6VFRRdERCVXBPTTM3SlEifQ.eyJhdWQiOiIzNDQ5YmYyMS0wYjA3LTQ4ZTYtYjZmYy0xM2ViMTYxYTk5MDEiLCJpc3MiOiJjYTFiOThlMS05N2EyLTQzZGItOTQ3Zi04YTA4MDU0YzM0MmUiLCJqdGkiOiJhMmZkMzkzYy0xMDdhLTRhZDQtYmUyMi0zY2ZlZWVhOTBlZmUiLCJpYXQiOiIxNjI4MjU3NzM3IiwiZGF0YSI6eyJjb25zZW50SWQiOiJ1cm46YmFuY29leDpDMUREMzMxMjMiLCJjcmVhdGlvbkRhdGVUaW1lIjoiMjAyMS0wNS0yMVQwODozMDowMFoiLCJleHBpcmF0aW9uRGF0ZVRpbWUiOiIyMDIxLTA1LTIxVDA4OjMwOjAwWiIsInN0YXR1c1VwZGF0ZURhdGVUaW1lIjoiMjAyMS0wNS0yMVQwODozMDowMFoiLCJzdGF0dXMiOiJBV0FJVElOR19BVVRIT1JJU0FUSU9OIiwibG9nZ2VkVXNlciI6eyJkb2N1bWVudCI6eyJpZGVudGlmaWNhdGlvbiI6IjExMTExMTExMTExIiwicmVsIjoiQ1BGIn19fSwiYnVzaW5lc3NFbnRpdHkiOnsiZG9jdW1lbnQiOnsiaWRlbnRpZmljYXRpb24iOiIxMTExMTExMTExMTExMSIsInJlbCI6IkNOUEoifX0sImNyZWRpdG9yIjp7InBlcnNvblR5cGUiOiJQRVNTT0FfTkFUVVJBTCIsImNwZkNucGoiOiI1ODc2NDc4OTAwMDEzNyIsIm5hbWUiOiJNYXJjbyBBbnRvbmlvIGRlIEJyaXRvIn0sInBheW1lbnQiOnsidHlwZSI6IlBJWCIsImRhdGUiOiIyMDIxLTAxLTAxIiwiY3VycmVuY3kiOiJCUkwiLCJhbW91bnQiOiIxMDAwMDAuMTIiLCJpYmdlVG93bkNvZGUiOiI1MzAwMTA4IiwiZGV0YWlscyI6eyJsb2NhbEluc3RydW1lbnQiOiJESUNUIiwicXJDb2RlIjoiMDAwMjAxMDQxNDEyMzQ1Njc4OTAxMjM0MjY2NjAwMTRCUi5HT1YuQkNCLlBJWDAxNDQ2Njc1NkM2MTZFNkYzMjMwMzEzOTQwNjU3ODYxNkQ3MDZDNjUyRTYzNkY2RDI3MzAwMDEyXG5CUi5DT00uT1VUUk8wMTEwMDEyMzQ1Njc4OTUyMDQwMDAwNTMwMzk4NjU0MDYxMjMuNDU1ODAyQlI1OTE1Tk9NRURPUkVDRUJFRE9SNjAwOEJSQVNJTElBNjEwODcwMDc0OTAwNjJcbjUzMDUxNVJQMTIzNDU2NzgtMjAxOTUwMzAwMDE3QlIuR09WLkJDQi5CUkNPREUwMTA1MS4wLjA4MDQ1MDAxNEJSLkdPVi5CQ0IuUElYMDEyM1BBRFJBTy5VUkwuUElYLzAxMjNBQlxuQ0Q4MTM5MDAxMkJSLkNPTS5PVVRSTzAxMTkwMTIzLkFCQ0QuMzQ1Ni5XWFlaNjMwNEVCNzZcbiIsInByb3h5IjoiMTIzNDU2Nzg5MDEiLCJjcmVkaXRvckFjY291bnQiOnsiaXNwYiI6IjEyMzQ1Njc4IiwiaXNzdWVyIjoiMTc3NCIsIm51bWJlciI6IjEyMzQ1Njc4OTAiLCJhY2NvdW50VHlwZSI6IkNBQ0MifX19LCJkZWJ0b3JBY2NvdW50Ijp7ImlzcGIiOiIxMjM0NTY3OCIsImlzc3VlciI6IjE3NzQiLCJudW1iZXIiOiIxMjM0NTY3ODkwIiwiYWNjb3VudFR5cGUiOiJDQUNDIn0sImxpbmtzIjp7InNlbGYiOiJodHRwczovL2FwaS5iYW5jby5jb20uYnIvb3Blbi1iYW5raW5nL3BheW1lbnRzL3YxL2NvbnNlbnRzIn0sIm1ldGEiOnsidG90YWxSZWNvcmRzIjoxLCJ0b3RhbFBhZ2VzIjoxLCJyZXF1ZXN0RGF0ZVRpbWUiOiIyMDIxLTA1LTIxVDA4OjMwOjAwWiJ9fQ.FH8722_85hWbYQS7g9C_b0_vjYvzaByq7ovFIVXWUsreEyb1KvhXFm1-GttBXIQORv9DpSsimmqo1MsLQE8Qc_J3fMkb-vNfMAd5D4JJUSJq33X8ydAvrXdOyCfjeEcUC-6g_O3nexT6clK6RkH0Umf6X3hev3JNaObk2IvjKeMdygQ3UXpGl2CTCCWvmcfcGeRA-sNdLheLQsVIPoopZ-FHBmr5MboLRod06SCO-BKkLdKg8eVAf6LrkiZrFLVlDMwNTFolUK7JlNnPZjPdSBmR7pPjPzT1blgd9fTWl7pbOh93mejgVFB0B3aKHz-2Y83KBCTH8C32rnnxK4YYmA
```

> Exemplo de resposta - JWS decodificada

```json
{
  "alg": "PS256",
  "typ": "JWT",
  "kid": "PWAi5ruQcHfzPzq2JFdpY7nAUh6LzTTQtDBUpOM37JQ"
}
{
  "aud": "3449bf21-0b07-48e6-b6fc-13eb161a9901",
  "iss": "ca1b98e1-97a2-43db-947f-8a08054c342e",
  "jti": "a2fd393c-107a-4ad4-be22-3cfeeea90efe",
  "iat": "1628257737",
  "data": {
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2021-05-21T08:30:00Z",
    "expirationDateTime": "2021-05-21T08:30:00Z",
    "statusUpdateDateTime": "2021-05-21T08:30:00Z",
    "status": "AWAITING_AUTHORISATION",
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12",
      "ibgeTownCode": "5300108",
      "details": {
        "localInstrument": "DICT",
        "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
        "proxy": "12345678901",
        "creditorAccount": {
          "ispb": "12345678",
          "issuer": "1774",
          "number": "1234567890",
          "accountType": "CACC"
        }
      }
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/payments/v1/consents"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

* "Assinatura omitida por questões de brevidade"
```

**Em caso de erro**

* Na validação da assinatura pelo Provedor do Recurso a API deve retornar mensagem de erro `HTTP` com status code `400` e a resposta deve incluir na propriedade code do objeto de resposta de erro especificado na API (*ResponseError*) a indicação da falha com o conteúdo `BAD_SIGNATURE`.

* Erros na validação da mensagem recebida pela aplicação cliente (p. ex. iniciador de pagamento) devem ser registrados e o `Provedor do Recurso` (p. ex. instituição detentora de conta) deve ser notificado.

### Assinatura de Mensagem vs Idempotência

O claim jti inserido dentro do JWT da assinatura da mensagem tem como objetivo evitar ataques de repetição e não é utilizado para o controle da idempotência. Desta forma ele deverá ser gerado a cada nova requisição realizada às APIs, independentemente desta ser a requisição para a criação de uma nova operação ou ser a requisição para confirmação de execução de uma operação anterior (idempotente).

As validações referentes a assinatura de mensagens devem preceder as validações de idempotência.

<h1 id="fase-3-apis-do-open-banking-brasil-api-pagamentos">API - Pagamentos</h1>

|Versão|
|:-----|
|1.0.1|

#### Visão Geral

A API tem como objetivo coletar o consentimento e realizar a iniciação de pagamento entre bancos e instituições financeiras e acessível também à estabelecimentos comerciais participantes do Open Banking Brasil.

Os recursos estão disponíveis para pagadores que possuem vínculo com uma instituição detentora de conta participante do Open Banking, independentemente de serem pessoa física ou jurídica.

#### Especificação em OAS 3.0

<a href="swagger/swagger_payments_apis.yaml" target="_blank">Download da Especificação (OAS 3.0)</a>

## Criar consentimento para iniciação de pagamento.

<a id="opIdpaymentsPostConsents"></a>

> Exemplo de código

```javascript
const data = JSON.stringify({
  "data": {
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12",
      "ibgeTownCode": "5300108",
      "details": {
        "localInstrument": "DICT",
        "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
        "proxy": "12345678901",
        "creditorAccount": {
          "ispb": "12345678",
          "issuer": "1774",
          "number": "1234567890",
          "accountType": "CACC"
        }
      }
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  }
});

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("POST", "https://example.com/payments/v1/consents");
xhr.setRequestHeader("Content-Type", "application/json");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");
xhr.setRequestHeader("x-idempotency-key", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("example.com")

payload = "{\"data\":{\"loggedUser\":{\"document\":{\"identification\":\"11111111111\",\"rel\":\"CPF\"}},\"businessEntity\":{\"document\":{\"identification\":\"11111111111111\",\"rel\":\"CNPJ\"}},\"creditor\":{\"personType\":\"PESSOA_NATURAL\",\"cpfCnpj\":\"58764789000137\",\"name\":\"Marco Antonio de Brito\"},\"payment\":{\"type\":\"PIX\",\"date\":\"2021-01-01\",\"currency\":\"BRL\",\"amount\":\"100000.12\",\"ibgeTownCode\":\"5300108\",\"details\":{\"localInstrument\":\"DICT\",\"qrCode\":\"00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\\n\",\"proxy\":\"12345678901\",\"creditorAccount\":{\"ispb\":\"12345678\",\"issuer\":\"1774\",\"number\":\"1234567890\",\"accountType\":\"CACC\"}}},\"debtorAccount\":{\"ispb\":\"12345678\",\"issuer\":\"1774\",\"number\":\"1234567890\",\"accountType\":\"CACC\"}}}"

headers = {
    'Content-Type': "application/json",
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string",
    'x-idempotency-key': "string"
    }

conn.request("POST", "/payments/v1/consents", payload, headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.post("https://example.com/payments/v1/consents")
  .header("Content-Type", "application/json")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .header("x-idempotency-key", "string")
  .body("{\"data\":{\"loggedUser\":{\"document\":{\"identification\":\"11111111111\",\"rel\":\"CPF\"}},\"businessEntity\":{\"document\":{\"identification\":\"11111111111111\",\"rel\":\"CNPJ\"}},\"creditor\":{\"personType\":\"PESSOA_NATURAL\",\"cpfCnpj\":\"58764789000137\",\"name\":\"Marco Antonio de Brito\"},\"payment\":{\"type\":\"PIX\",\"date\":\"2021-01-01\",\"currency\":\"BRL\",\"amount\":\"100000.12\",\"ibgeTownCode\":\"5300108\",\"details\":{\"localInstrument\":\"DICT\",\"qrCode\":\"00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\\n\",\"proxy\":\"12345678901\",\"creditorAccount\":{\"ispb\":\"12345678\",\"issuer\":\"1774\",\"number\":\"1234567890\",\"accountType\":\"CACC\"}}},\"debtorAccount\":{\"ispb\":\"12345678\",\"issuer\":\"1774\",\"number\":\"1234567890\",\"accountType\":\"CACC\"}}}")
  .asString();
```

`POST /payments/v1/consents`

Método para a criação do consentimento para iniciação de pagamento.

### Dicionário de dados

Campos de resposta do endpoint de `/consents`

<a href='dictionary/paymentsPostConsents_v1.csv' target="_blank">Fazer download do dicionário de dados</a>

Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).

> Body parameter

```json
{
  "data": {
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12",
      "ibgeTownCode": "5300108",
      "details": {
        "localInstrument": "DICT",
        "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
        "proxy": "12345678901",
        "creditorAccount": {
          "ispb": "12345678",
          "issuer": "1774",
          "number": "1234567890",
          "accountType": "CACC"
        }
      }
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  }
}
```

<h3 id="criar-consentimento-para-iniciação-de-pagamento.-parameters">Parâmetros</h3>

|Nome|Origem|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|x-idempotency-key|header|string|true|Cabeçalho HTTP personalizado. Identificador de solicitação exclusivo para suportar a idempotência.|
|body|body|[CreatePaymentConsent](#schemacreatepaymentconsent)|true|Payload para criação do consentimento para iniciação do pagamento Pix.|

> O comando acima retorna uma estrutura json como essa:

> 201 Response

```json
{
  "data": {
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2021-05-21T08:30:00Z",
    "expirationDateTime": "2021-05-21T08:30:00Z",
    "statusUpdateDateTime": "2021-05-21T08:30:00Z",
    "status": "AWAITING_AUTHORISATION",
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12",
      "ibgeTownCode": "5300108",
      "details": {
        "localInstrument": "DICT",
        "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
        "proxy": "12345678901",
        "creditorAccount": {
          "ispb": "12345678",
          "issuer": "1774",
          "number": "1234567890",
          "accountType": "CACC"
        }
      }
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

> A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.

<h3 id="criar-consentimento-para-iniciação-de-pagamento.-responses">Resposta</h3>

|Status|Significado|Descrição|Schema|
|---|---|---|---|
|201|[Created](https://tools.ietf.org/html/rfc7231#section-6.3.2)|Consentimento de pagamento criado com sucesso.|[ResponsePaymentConsent](#schemaresponsepaymentconsent)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|415|[Unsupported Media Type](https://tools.ietf.org/html/rfc7231#section-6.5.13)|O formato do payload não é um formato suportado.|[ResponseError](#schemaresponseerror)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.|[422ResponseErrorCreateConsent](#schema422responseerrorcreateconsent)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type| |
|---|---|---|---|---|
|201|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|400|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|401|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|403|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|404|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|405|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|406|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|415|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|422|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|Retry-After|integer|<a href='#Retry-After'>Consultar Padrões</a>|
|500|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|

<aside class="warning">
Para realizar esta operação, você deve estar autenticado e autorizado com os seguintes escopos: 

openid,consent:consentId,payments
</aside>

## Consultar consentimento para iniciação de pagamento.

<a id="opIdpaymentsGetConsentsConsentId"></a>

> Exemplo de código

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://example.com/payments/v1/consents/string");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("example.com")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/payments/v1/consents/string", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://example.com/payments/v1/consents/string")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /payments/v1/consents/{consentId}`

Método para consultar o consentimento para iniciação de pagamento.

### Dicionário de dados

Campos de resposta do endpoint de `/consents`

<a href='dictionary/paymentsGetConsentsConsentId_v1.csv' target="_blank">Fazer download do dicionário de dados</a>

Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).

<h3 id="consultar-consentimento-para-iniciação-de-pagamento.-parameters">Parâmetros</h3>

|Nome|Origem|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|consentId|path|string|true|O consentId é o identificador único do consentimento a ser revogado e deverá ser um URN - Uniform Resource Name.|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|

#### Detailed descriptions

**consentId**: O consentId é o identificador único do consentimento a ser revogado e deverá ser um URN - Uniform Resource Name.

> O comando acima retorna uma estrutura json como essa:

> 200 Response

```json
{
  "data": {
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2021-05-21T08:30:00Z",
    "expirationDateTime": "2021-05-21T08:30:00Z",
    "statusUpdateDateTime": "2021-05-21T08:30:00Z",
    "status": "AWAITING_AUTHORISATION",
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12",
      "ibgeTownCode": "5300108",
      "details": {
        "localInstrument": "DICT",
        "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
        "proxy": "12345678901",
        "creditorAccount": {
          "ispb": "12345678",
          "issuer": "1774",
          "number": "1234567890",
          "accountType": "CACC"
        }
      }
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

<h3 id="consultar-consentimento-para-iniciação-de-pagamento.-responses">Resposta</h3>

|Status|Significado|Descrição|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados do consentimento de pagamento obtidos com sucesso.|[ResponsePaymentConsent](#schemaresponsepaymentconsent)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|415|[Unsupported Media Type](https://tools.ietf.org/html/rfc7231#section-6.5.13)|O formato do payload não é um formato suportado.|[ResponseError](#schemaresponseerror)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type| |
|---|---|---|---|---|
|200|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|400|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|401|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|403|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|404|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|405|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|406|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|415|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|Retry-After|integer|<a href='#Retry-After'>Consultar Padrões</a>|
|500|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|

<aside class="warning">
Para realizar esta operação, você deve estar autenticado e autorizado com os seguintes escopos: 

openid,consent:consentId,payments
</aside>

## Pix - Criar iniciação de pagamento.

<a id="opIdpaymentsPostPixPayments"></a>

> Exemplo de código

```javascript
const data = JSON.stringify({
  "data": {
    "localInstrument": "DICT",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    },
    "remittanceInformation": "Pagamento da nota XPTO035-002.",
    "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
    "proxy": "12345678901",
    "cnpjInitiator": "50685362000135",
    "transactionIdentification": "E00038166201907261559y6j6",
    "ibgeTownCode": "5300108"
  }
});

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("POST", "https://example.com/payments/v1/pix/payments");
xhr.setRequestHeader("Content-Type", "application/json");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");
xhr.setRequestHeader("x-idempotency-key", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("example.com")

payload = "{\"data\":{\"localInstrument\":\"DICT\",\"payment\":{\"amount\":\"100000.12\",\"currency\":\"BRL\"},\"creditorAccount\":{\"ispb\":\"12345678\",\"issuer\":\"1774\",\"number\":\"1234567890\",\"accountType\":\"CACC\"},\"remittanceInformation\":\"Pagamento da nota XPTO035-002.\",\"qrCode\":\"00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\\n\",\"proxy\":\"12345678901\",\"cnpjInitiator\":\"50685362000135\",\"transactionIdentification\":\"E00038166201907261559y6j6\",\"ibgeTownCode\":\"5300108\"}}"

headers = {
    'Content-Type': "application/json",
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string",
    'x-idempotency-key': "string"
    }

conn.request("POST", "/payments/v1/pix/payments", payload, headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.post("https://example.com/payments/v1/pix/payments")
  .header("Content-Type", "application/json")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .header("x-idempotency-key", "string")
  .body("{\"data\":{\"localInstrument\":\"DICT\",\"payment\":{\"amount\":\"100000.12\",\"currency\":\"BRL\"},\"creditorAccount\":{\"ispb\":\"12345678\",\"issuer\":\"1774\",\"number\":\"1234567890\",\"accountType\":\"CACC\"},\"remittanceInformation\":\"Pagamento da nota XPTO035-002.\",\"qrCode\":\"00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\\n\",\"proxy\":\"12345678901\",\"cnpjInitiator\":\"50685362000135\",\"transactionIdentification\":\"E00038166201907261559y6j6\",\"ibgeTownCode\":\"5300108\"}}")
  .asString();
```

`POST /payments/v1/pix/payments`

Método para a criação de uma iniciação de pagamento.

### Dicionário de dados

Campos de resposta do endpoint de `/pix/payments`

<a href='dictionary/paymentsPostPixPayments_v1.csv' target="_blank">Fazer download do dicionário de dados</a>

Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).

> Body parameter

```json
{
  "data": {
    "localInstrument": "DICT",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    },
    "remittanceInformation": "Pagamento da nota XPTO035-002.",
    "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
    "proxy": "12345678901",
    "cnpjInitiator": "50685362000135",
    "transactionIdentification": "E00038166201907261559y6j6",
    "ibgeTownCode": "5300108"
  }
}
```

<h3 id="pix---criar-iniciação-de-pagamento.-parameters">Parâmetros</h3>

|Nome|Origem|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|x-idempotency-key|header|string|true|Cabeçalho HTTP personalizado. Identificador de solicitação exclusivo para suportar a idempotência.|
|body|body|[CreatePixPayment](#schemacreatepixpayment)|true|Payload para criação da iniciação do pagamento Pix.|

> O comando acima retorna uma estrutura json como essa:

> 201 Response

```json
{
  "data": {
    "paymentId": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
    "endToEndId": "E9040088820210128000800123873170",
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2020-07-21T08:30:00Z",
    "statusUpdateDateTime": "2020-07-21T08:30:00Z",
    "proxy": "12345678901",
    "ibgeTownCode": "5300108",
    "status": "PDNG",
    "rejectionReason": "USER_NOT_YET_ACTIVATED",
    "localInstrument": "DICT",
    "cnpjInitiator": "50685362000135",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "transactionIdentification": "E00038166201907261559y6j6",
    "remittanceInformation": "Pagamento da nota RSTO035-002.",
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

> A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.

<h3 id="pix---criar-iniciação-de-pagamento.-responses">Resposta</h3>

|Status|Significado|Descrição|Schema|
|---|---|---|---|
|201|[Created](https://tools.ietf.org/html/rfc7231#section-6.3.2)|Iniciação de pagamento Pix criada com sucesso.|[ResponsePixPayment](#schemaresponsepixpayment)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|415|[Unsupported Media Type](https://tools.ietf.org/html/rfc7231#section-6.5.13)|O formato do payload não é um formato suportado.|[ResponseError](#schemaresponseerror)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.|[422ResponseErrorCreatePixPayment](#schema422responseerrorcreatepixpayment)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type| |
|---|---|---|---|---|
|201|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|400|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|401|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|403|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|404|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|405|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|406|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|415|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|422|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|Retry-After|integer|<a href='#Retry-After'>Consultar Padrões</a>|
|500|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|

<aside class="warning">
Para realizar esta operação, você deve estar autenticado e autorizado com os seguintes escopos: 

openid,consent:consentId,payments
</aside>

## Pix - Consultar iniciação de pagamento.

<a id="opIdpaymentsGetPixPaymentsPaymentId"></a>

> Exemplo de código

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://example.com/payments/v1/pix/payments/string");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("example.com")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/payments/v1/pix/payments/string", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://example.com/payments/v1/pix/payments/string")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /payments/v1/pix/payments/{paymentId}`

Método para consultar uma iniciação de pagamento.

### Dicionário de dados

Campos de resposta do endpoint de `/pix/payments`.

<a href='dictionary/paymentsGetPixPaymentsPaymentId_v1.csv' target="_blank">Fazer download do dicionário de dados</a>

Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).

<h3 id="pix---consultar-iniciação-de-pagamento.-parameters">Parâmetros</h3>

|Nome|Origem|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|paymentId|path|string|true|Identificador da operação de pagamento.|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|

> O comando acima retorna uma estrutura json como essa:

> 200 Response

```json
{
  "data": {
    "paymentId": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
    "endToEndId": "E9040088820210128000800123873170",
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2020-07-21T08:30:00Z",
    "statusUpdateDateTime": "2020-07-21T08:30:00Z",
    "proxy": "12345678901",
    "ibgeTownCode": "5300108",
    "status": "PDNG",
    "rejectionReason": "USER_NOT_YET_ACTIVATED",
    "localInstrument": "DICT",
    "cnpjInitiator": "50685362000135",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "transactionIdentification": "E00038166201907261559y6j6",
    "remittanceInformation": "Pagamento da nota RSTO035-002.",
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

<h3 id="pix---consultar-iniciação-de-pagamento.-responses">Resposta</h3>

|Status|Significado|Descrição|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de iniciação de pagamento Pix obtidos com sucesso.|[ResponsePixPayment](#schemaresponsepixpayment)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|415|[Unsupported Media Type](https://tools.ietf.org/html/rfc7231#section-6.5.13)|O formato do payload não é um formato suportado.|[ResponseError](#schemaresponseerror)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type| |
|---|---|---|---|---|
|200|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|400|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|401|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|403|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|404|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|405|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|406|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|415|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|
|429|Retry-After|integer|<a href='#Retry-After'>Consultar Padrões</a>|
|500|x-fapi-interaction-id|string|<a href='#x-fapi-interaction-id'>Consultar Padrões</a>|

<aside class="warning">
Para realizar esta operação, você deve estar autenticado e autorizado com os seguintes escopos: 

openid,consent:consentId,payments
</aside>

<h1 id="fase-3-apis-do-open-banking-brasil-schemas">Schemas</h1>

<h2 id="tocS_422ResponseErrorCreateConsent">422ResponseErrorCreateConsent</h2>

<a id="schema422responseerrorcreateconsent"></a>
<a id="schema_422ResponseErrorCreateConsent"></a>
<a id="tocS422responseerrorcreateconsent"></a>
<a id="tocs422responseerrorcreateconsent"></a>

```json
{
  "errors": [
    {
      "code": "FORMA_PGTO_INVALIDA",
      "title": "Forma de pagamento inválida.",
      "detail": "Meio de pagamento inválido."
    }
  ],
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|errors|[object]|true||
|» code|string|true|Códigos de erros previstos na criação de consentimento para a iniciação de pagamentos:  <br>• FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  <br>• DATA_PGTO_INVALIDA: Data de pagamento inválida.  <br>• DETALHE_PGTO_INVALIDO: Detalhe do pagamento inválido.  <br>• NAO_INFORMADO: Não informado.|
|» title|string|true|Título específico do erro reportado, de acordo com o código enviado:  <br>• FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  <br>• DATA_PGTO_INVALIDA: Data de pagamento inválida. <br>• DETALHE_PGTO_INVALIDO: Detalhe do pagamento inválido.<br>• NAO_INFORMADO: Não informado.|
|» detail|string|true|Descrição específica do erro de acordo com o código reportado:  <br>• FORMA_PGTO_INVALIDA – Meio de pagamento inválido.  <br>• DATA_PGTO_INVALIDA – Data de pagamento inválida no contexto, por exemplo, data no passado. Para pagamentos únicos deve ser informada a data atual, do dia corrente.  <br>• DETALHE_PGTO_INVALIDO: O campo [nome_campo] não atende os requisitos de preenchimento.  <br>• NAO_INFORMADO – Não reportado/identificado pela instituição detentora de conta.|
|meta|[Meta](#schemameta)|false|Meta informações referente à API requisitada.|

#### Enumerated Values

|Nome|Código|
|---|---|
|code|FORMA_PGTO_INVALIDA|
|code|DATA_PGTO_INVALIDA|
|code|DETALHE_PGTO_INVALIDO|
|code|NAO_INFORMADO|

<h2 id="tocS_422ResponseErrorCreatePixPayment">422ResponseErrorCreatePixPayment</h2>

<a id="schema422responseerrorcreatepixpayment"></a>
<a id="schema_422ResponseErrorCreatePixPayment"></a>
<a id="tocS422responseerrorcreatepixpayment"></a>
<a id="tocs422responseerrorcreatepixpayment"></a>

```json
{
  "errors": [
    {
      "code": "SALDO_INSUFICIENTE",
      "title": "Saldo insuficiente.",
      "detail": "A conta selecionada não possui saldo suficiente para realizar o pagamento."
    }
  ],
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|errors|[object]|true||
|» code|[EnumErrorsCreatePayment](#schemaenumerrorscreatepayment)|true|Códigos de erros previstos na criação da iniciação de pagamento:<br>• SALDO_INSUFICIENTE – Esta conta não possui saldo suficiente para realizar o pagamento.<br>• BENEFICIARIO_INCOMPATIVEL – O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.<br>• VALOR_INCOMPATIVEL – O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.<br>• VALOR_ACIMA_LIMITE – O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.<br>• VALOR_INVALIDO – O valor enviado não é válido para o QR Code informado.<br>• COBRANCA_INVALIDA – Validação de expiração, validação de vencimento, Status Válido.<br>• CONSENTIMENTO_INVALIDO – Consentimento inválido (status não é "authorised" ou está expirado).<br>• JANELA_OPER_INVALIDA – Requisição está fora da janela de funcionamento.<br>• NAO_INFORMADO – Não informada pela detentora de conta.<br>• PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO: Dados do pagamento divergentes dos dados do consentimento.|
|» title|string|true|Título específico do erro reportado, de acordo com o código enviado:<br>• SALDO_INSUFICIENTE: Saldo insuficiente.<br>• BENEFICIARIO_INCOMPATIVEL: Beneficiário incompatível.<br>• VALOR_INCOMPATIVEL: Valor da transação incompatível.<br>• VALOR_ACIMA_LIMITE: Acima do limite estabelecido.<br>• VALOR_INVALIDO: Valor inválido.<br>• COBRANCA_INVALIDA: Cobrança inválida.<br>• CONSENTIMENTO_INVALIDO: Consentimento inválido.<br>• JANELA_OPER_INVALIDA: Janela de operação inválida.<br>• NAO_INFORMADO: Não informado.<br>• PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO: divergência entre pagamento e consentimento.|
|» detail|string|true|Descrição específica do erro de acordo com o código reportado:<br>• SALDO_INSUFICIENTE: A conta selecionada não possui saldo suficiente para realizar o pagamento.<br>• BENEFICIARIO_INCOMPATIVEL: O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.<br>• VALOR_INCOMPATIVEL: O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.<br>• VALOR_ACIMA_LIMITE: O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.<br>• VALOR_INVALIDO: O valor enviado não é válido para o QR Code informado.<br>• COBRANCA_INVALIDA: Validação de expiração, validação de vencimento ou Status Válido.<br>• CONSENTIMENTO_INVALIDO: Consentimento inválido (status diferente de "AUTHORISED" ou está expirado).<br>• JANELA_OPER_INVALIDA: Requisição está fora da janela de funcionamento.<br>• NAO_INFORMADO: Não reportado/identificado pela instituição detentora de conta.<br>• PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO: Dados do pagamento divergentes dos dados do consentimento.|
|meta|[Meta](#schemameta)|false|Meta informações referente à API requisitada.|

<h2 id="tocS_Account">Account</h2>

<a id="schemaaccount"></a>
<a id="schema_Account"></a>
<a id="tocSaccount"></a>
<a id="tocsaccount"></a>

```json
{
  "ispb": "12345678",
  "issuer": "1774",
  "number": "1234567890",
  "checkDigit": "4",
  "accountType": "CACC"
}

```

Objeto que contém a identificação de uma conta. 

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|ispb|string|true|Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.|
|issuer|string|false|Código da Agência emissora da conta sem dígito.  <br>(Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  <br>no exercício de atividades da instituição, não podendo ser móvel ou transitória).  <br>[Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).|
|number|string|true|Número da conta sem o dígito.|
|checkDigit|string|true|Dígito da conta.|
|accountType|[EnumAccountPaymentsType](#schemaenumaccountpaymentstype)|true|Tipos de contas usadas para pagamento via Pix.  <br>Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  <br>conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  <br>Segue descrição de cada valor do ENUM para o escopo do Pix.  <br>CACC - Current - Conta Corrente.  <br>SLRY - Salary - Conta-Salário.  <br>SVGS - Savings - Conta de Poupança.  <br>TRAN - TransactingAccount - Conta de Pagamento pré-paga.|

<h2 id="tocS_BusinessEntity">BusinessEntity</h2>

<a id="schemabusinessentity"></a>
<a id="schema_BusinessEntity"></a>
<a id="tocSbusinessentity"></a>
<a id="tocsbusinessentity"></a>

```json
{
  "document": {
    "identification": "11111111111111",
    "rel": "CNPJ"
  }
}

```

Usuário (pessoa jurídica) que encontra-se logado na instituição Iniciadora de Pagamento. [Restrição] Preenchimento obrigatório se usuário logado na instituição Iniciadora de Pagamento for um CNPJ (pessoa jurídica).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|document|object|true||
|» identification|string|true|Número do documento de identificação oficial do titular pessoa jurídica.|
|» rel|string|true|Tipo do documento de identificação oficial do titular pessoa jurídica.|

<h2 id="tocS_CreatePaymentConsent">CreatePaymentConsent</h2>

<a id="schemacreatepaymentconsent"></a>
<a id="schema_CreatePaymentConsent"></a>
<a id="tocScreatepaymentconsent"></a>
<a id="tocscreatepaymentconsent"></a>

```json
{
  "data": {
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12",
      "ibgeTownCode": "5300108",
      "details": {
        "localInstrument": "DICT",
        "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
        "proxy": "12345678901",
        "creditorAccount": {
          "ispb": "12345678",
          "issuer": "1774",
          "number": "1234567890",
          "accountType": "CACC"
        }
      }
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|data|object|true|Objeto contendo as informações de consentimento para a iniciação de pagamento individual.|
|» loggedUser|[LoggedUser](#schemaloggeduser)|true|Usuário (pessoa natural) que encontra-se logado na instituição Iniciadora de Pagamento.|
|» businessEntity|[BusinessEntity](#schemabusinessentity)|false|Usuário (pessoa jurídica) que encontra-se logado na instituição Iniciadora de Pagamento. [Restrição] Preenchimento obrigatório se usuário logado na instituição Iniciadora de Pagamento for um CNPJ (pessoa jurídica).|
|» creditor|[Identification](#schemaidentification)|true|Objeto contendo os dados do recebedor (creditor).|
|» payment|[PaymentConsent](#schemapaymentconsent)|true|Objeto contendo dados de pagamento para consentimento.|
|» debtorAccount|[DebtorAccount](#schemadebtoraccount)|false|Objeto que contém a identificação da conta de origem do pagador.  <br>As informações quanto à conta de origem do pagador poderão ser trazidas no consentimento para a detentora, caso a iniciadora tenha coletado essas informações do cliente. Do contrário, será coletada na detentora e trazida para a iniciadora como resposta à criação do pagamento.|

<h2 id="tocS_CreatePixPayment">CreatePixPayment</h2>

<a id="schemacreatepixpayment"></a>
<a id="schema_CreatePixPayment"></a>
<a id="tocScreatepixpayment"></a>
<a id="tocscreatepixpayment"></a>

```json
{
  "data": {
    "localInstrument": "DICT",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    },
    "remittanceInformation": "Pagamento da nota XPTO035-002.",
    "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
    "proxy": "12345678901",
    "cnpjInitiator": "50685362000135",
    "transactionIdentification": "E00038166201907261559y6j6",
    "ibgeTownCode": "5300108"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|data|[CreatePixPaymentData](#schemacreatepixpaymentdata)|true|Objeto contendo dados do pagamento e do recebedor (creditor).|

<h2 id="tocS_CreatePixPaymentData">CreatePixPaymentData</h2>

<a id="schemacreatepixpaymentdata"></a>
<a id="schema_CreatePixPaymentData"></a>
<a id="tocScreatepixpaymentdata"></a>
<a id="tocscreatepixpaymentdata"></a>

```json
{
  "localInstrument": "DICT",
  "payment": {
    "amount": "100000.12",
    "currency": "BRL"
  },
  "creditorAccount": {
    "ispb": "12345678",
    "issuer": "1774",
    "number": "1234567890",
    "accountType": "CACC"
  },
  "remittanceInformation": "Pagamento da nota XPTO035-002.",
  "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
  "proxy": "12345678901",
  "cnpjInitiator": "50685362000135",
  "transactionIdentification": "E00038166201907261559y6j6",
  "ibgeTownCode": "5300108"
}

```

Objeto contendo dados do pagamento e do recebedor (creditor).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|localInstrument|string|true|Especifica a forma de iniciação do pagamento:<br>- MANU - Inserção manual de dados da conta transacional<br>- DICT - Inserção manual de chave Pix<br>- QRDN - QR code dinâmico<br>- QRES - QR code estático<br>- INIC - Indica que o recebedor (creditor) contratou o Iniciador de Pagamentos especificamente para realizar iniciações de pagamento em que o beneficiário é previamente conhecido.|
|payment|[PaymentPix](#schemapaymentpix)|true|Objeto contendo dados do pagameto como moeda e valor.|
|creditorAccount|[CreditorAccount](#schemacreditoraccount)|true|Objeto que contém a identificação da conta de destino do beneficiário/recebedor.|
|remittanceInformation|string|false|Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.|
|qrCode|string|false|Sequência de caracteres que corresponde ao QR Code disponibilizado para o pagador.<br>É a sequência de caracteres que seria lida pelo leitor de QR Code, e deve propiciar o retorno dos dados do pagador após consulta na DICT.<br>Essa funcionalidade é possível tanto para QR Code estático quanto para QR Code dinâmico.<br>No arranjo do Pix esta é a mesma sequência gerada e/ou lida pela funcionalidade Pix Copia e Cola.<br>Este campo deverá ser no formato UTF-8.<br>[Restrição] Preenchimento obrigatório para pagamentos por QR Code, observado o tamanho máximo de 512 bytes.|
|proxy|string|false|Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.<br>No caso de telefone celular deve ser informado no padrão E.1641.<br>Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.<br>No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.<br>Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.<br>No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.<br>Se informado, a detentora da conta deve validar o proxy no DICT quando localInstrument for igual a DICT, QRDN ou QRES e validar o campo creditorAccount.<br>Esta validação é opcional caso o localInstrument for igual a INIC.<br>[Restrição] Se localInstrument for igual a MANU, o campo proxy não deve ser preenchido. Se localInstrument for igual INIC, DICT, QRDN ou QRES, o campo proxy deve ser sempre preenchido com a chave Pix.|
|cnpjInitiator|string|true|CNPJ do Iniciador de Pagamento devidamente habilitado para a prestação de Serviço de Iniciação no Pix.|
|transactionIdentification|string|false|Trata-se de um identificador de transação que deve ser retransmitido intacto pelo PSP do pagador ao gerar a ordem de pagamento. Essa informação permitirá ao recebedor identificar e correlacionar a transferência, quando recebida, com a apresentação das instruções ao pagador.<br>Os caracteres permitidos no contexto do Pix para o campo txid (EMV 62-05) são:<br>- Letras minúsculas, de ‘a’ a ‘z’<br>- Letras maiúsculas, de ‘A’ a ‘z’<br>- Dígitos decimais, de ‘0’ a ‘9’<br><br>[Restrição] Se localInstrument for igual a INIC, o campo transactionIdentification deve ser preenchido obrigatoriamente.<br>Se localInstrument for igual a MANU ou DICT, o campo transactionIdentification não deve ser preenchido.<br>A detentora de conta deve validar se a condicionalidade do campo foi atendida pela iniciadora de pagamento.|
|ibgeTownCode|string|false|Traz o código da cidade segundo o IBGE (Instituto Brasileiro de Geografia e Estatística).<br>Para o preenchimento deste campo, o Iniciador de Pagamentos deve seguir a orientação do arranjo da forma de pagamento.<br>O preenchimento do campo tanto em pix/payments quanto /consents deve ser igual. Caso haja divergência dos valores, a instituição deve retornar HTTP 422 com o código de erro PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO.<br>Este campo faz referência ao campo CodMun do arranjo Pix.|

#### Enumerated Values

|Nome|Código|
|---|---|
|localInstrument|MANU|
|localInstrument|DICT|
|localInstrument|QRDN|
|localInstrument|QRES|
|localInstrument|INIC|

<h2 id="tocS_CreditorAccount">CreditorAccount</h2>

<a id="schemacreditoraccount"></a>
<a id="schema_CreditorAccount"></a>
<a id="tocScreditoraccount"></a>
<a id="tocscreditoraccount"></a>

```json
{
  "ispb": "12345678",
  "issuer": "1774",
  "number": "1234567890",
  "accountType": "CACC"
}

```

Objeto que contém a identificação da conta de destino do beneficiário/recebedor.  

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|ispb|string|true|Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.|
|issuer|string|false|Código da Agência emissora da conta sem dígito.  <br>(Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  <br>no exercício de atividades da instituição, não podendo ser móvel ou transitória).  <br>[Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).|
|number|string|true|Deve ser preenchido com o número da conta do usuário recebedor, com dígito verificador (se este existir),  <br>se houver valor alfanumérico, este deve ser convertido para 0.|
|accountType|[EnumAccountPaymentsType](#schemaenumaccountpaymentstype)|true|Tipos de contas usadas para pagamento via Pix.  <br>Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  <br>conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  <br>Segue descrição de cada valor do ENUM para o escopo do Pix.  <br>CACC - Current - Conta Corrente.  <br>SLRY - Salary - Conta-Salário.  <br>SVGS - Savings - Conta de Poupança.  <br>TRAN - TransactingAccount - Conta de Pagamento pré-paga.|

<h2 id="tocS_DebtorAccount">DebtorAccount</h2>

<a id="schemadebtoraccount"></a>
<a id="schema_DebtorAccount"></a>
<a id="tocSdebtoraccount"></a>
<a id="tocsdebtoraccount"></a>

```json
{
  "ispb": "12345678",
  "issuer": "1774",
  "number": "1234567890",
  "accountType": "CACC"
}

```

Objeto que contém a identificação da conta de origem do pagador.  
As informações quanto à conta de origem do pagador poderão ser trazidas no consentimento para a detentora, caso a iniciadora tenha coletado essas informações do cliente. Do contrário, será coletada na detentora e trazida para a iniciadora como resposta à criação do pagamento.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|ispb|string|true|Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.|
|issuer|string|false|Código da Agência emissora da conta sem dígito.  <br>(Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  <br>no exercício de atividades da instituição, não podendo ser móvel ou transitória).  <br>[Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).|
|number|string|true|Deve ser preenchido com o número da conta transacional do usuário pagador, com dígito verificador (se este existir),  <br>se houver valor alfanumérico, este deve ser convertido para 0.|
|accountType|[EnumAccountPaymentsType](#schemaenumaccountpaymentstype)|true|Tipos de contas usadas para pagamento via Pix.  <br>Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  <br>conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  <br>Segue descrição de cada valor do ENUM para o escopo do Pix.  <br>CACC - Current - Conta Corrente.  <br>SLRY - Salary - Conta-Salário.  <br>SVGS - Savings - Conta de Poupança.  <br>TRAN - TransactingAccount - Conta de Pagamento pré-paga.|

<h2 id="tocS_Details">Details</h2>

<a id="schemadetails"></a>
<a id="schema_Details"></a>
<a id="tocSdetails"></a>
<a id="tocsdetails"></a>

```json
{
  "localInstrument": "DICT",
  "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
  "proxy": "12345678901",
  "creditorAccount": {
    "ispb": "12345678",
    "issuer": "1774",
    "number": "1234567890",
    "accountType": "CACC"
  }
}

```

Objeto contendo os detalhes do pagamento.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|localInstrument|[EnumLocalInstrument](#schemaenumlocalinstrument)|true|Especifica a forma de iniciação do pagamento:<br>- MANU - Inserção manual de dados da conta transacional<br>- DICT - Inserção manual de chave Pix<br>- QRDN - QR code dinâmico<br>- QRES - QR code estático<br>- INIC - Indica que o recebedor (creditor) contratou o Iniciador de Pagamentos especificamente para realizar iniciações de pagamento em que o beneficiário é previamente conhecido.|
|qrCode|string|false|Sequência de caracteres que corresponde ao QR Code disponibilizado para o pagador.<br>É a sequência de caracteres que seria lida pelo leitor de QR Code, e deve propiciar o retorno dos dados do pagador após consulta na DICT.<br>Essa funcionalidade é possível tanto para QR Code estático quanto para QR Code dinâmico.<br>No arranjo do Pix esta é a mesma sequência gerada e/ou lida pela funcionalidade Pix Copia e Cola.<br>Este campo deverá ser no formato UTF-8.<br>[Restrição] Preenchimento obrigatório para pagamentos por QR Code, observado o tamanho máximo de 512 bytes.|
|proxy|string|false|Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.<br>No caso de telefone celular deve ser informado no padrão E.1641.<br>Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.<br>No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.<br>Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.<br>No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.<br>Se informado, a detentora da conta deve validar o proxy no DICT quando localInstrument for igual a DICT, QRDN ou QRES e validar o campo creditorAccount.<br>Esta validação é opcional caso o localInstrument for igual a INIC.<br>[Restrição]<br>Se localInstrument for igual a MANU, o campo proxy não deve ser preenchido.<br>Se localInstrument for igual INIC, DICT, QRDN ou QRES, o campo proxy deve ser sempre preenchido com a chave Pix.|
|creditorAccount|[CreditorAccount](#schemacreditoraccount)|true|Objeto que contém a identificação da conta de destino do beneficiário/recebedor.|

<h2 id="tocS_EndToEndId">EndToEndId</h2>

<a id="schemaendtoendid"></a>
<a id="schema_EndToEndId"></a>
<a id="tocSendtoendid"></a>
<a id="tocsendtoendid"></a>

```json
"E9040088820210128000800123873170"

```

Deve ser preenchido no formato padrão ExxxxxxxxyyyyMMddHHmmkkkkkkkkkkk (32 caracteres; “case sensitive”, isso é, diferencia letras maiúsculas e minúsculas), sendo:
• “E” – fixo (1 caractere);  
• xxxxxxxx – identificação do agente que gerou o ´EndToEndId´, podendo ser: o ISPB do participante direto ou o ISPB do participante indireto (8 caracteres numéricos [0-9]);  
• yyyyMMddHHmm – data, hora e minuto (12 caracteres), seguindo o horário UTC, da submissão da ordem de pagamento, caso a liquidação seja prioritária, ou prevista para o envio da ordem ao sistema de liquidação, caso seja realizado um agendamento. Para ordens prioritárias e não prioritárias, aceita-se o preenchimento, pelo agente que gerou o ´EndToEndId´, com uma tolerância máxima de 12 horas, para o futuro e para o passado, em relação ao horário efetivo de processamento da ordem pelo SPI;  
• kkkkkkkkkkk – sequencial criado pelo agente que gerou o ´EndToEndId´ (11 caracteres alfanuméricos [a-z/A-Z/0-9]). Deve ser único dentro de cada “yyyyMMddHHmm”.  
Admite-se que o ´EndToEndId´ seja gerado pelo participante direto, pelo participante indireto ou pelo iniciador de pagamento.  
Ele deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.  
[Restrição] O ´EndToEndId´ deve ser informado obrigatoriamente caso o status do pagamento seja ACCEPTED_SETTLEMENT_COMPLETED.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Deve ser preenchido no formato padrão ExxxxxxxxyyyyMMddHHmmkkkkkkkkkkk (32 caracteres; “case sensitive”, isso é, diferencia letras maiúsculas e minúsculas), sendo:<br>• “E” – fixo (1 caractere);  <br>• xxxxxxxx – identificação do agente que gerou o ´EndToEndId´, podendo ser: o ISPB do participante direto ou o ISPB do participante indireto (8 caracteres numéricos [0-9]);  <br>• yyyyMMddHHmm – data, hora e minuto (12 caracteres), seguindo o horário UTC, da submissão da ordem de pagamento, caso a liquidação seja prioritária, ou prevista para o envio da ordem ao sistema de liquidação, caso seja realizado um agendamento. Para ordens prioritárias e não prioritárias, aceita-se o preenchimento, pelo agente que gerou o ´EndToEndId´, com uma tolerância máxima de 12 horas, para o futuro e para o passado, em relação ao horário efetivo de processamento da ordem pelo SPI;  <br>• kkkkkkkkkkk – sequencial criado pelo agente que gerou o ´EndToEndId´ (11 caracteres alfanuméricos [a-z/A-Z/0-9]). Deve ser único dentro de cada “yyyyMMddHHmm”.  <br>Admite-se que o ´EndToEndId´ seja gerado pelo participante direto, pelo participante indireto ou pelo iniciador de pagamento.  <br>Ele deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.  <br>[Restrição] O ´EndToEndId´ deve ser informado obrigatoriamente caso o status do pagamento seja ACCEPTED_SETTLEMENT_COMPLETED.|

<h2 id="tocS_EnumAccountPaymentsType">EnumAccountPaymentsType</h2>

<a id="schemaenumaccountpaymentstype"></a>
<a id="schema_EnumAccountPaymentsType"></a>
<a id="tocSenumaccountpaymentstype"></a>
<a id="tocsenumaccountpaymentstype"></a>

```json
"CACC"

```

Tipos de contas usadas para pagamento via Pix.  
Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  
conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  
Segue descrição de cada valor do ENUM para o escopo do Pix.  
CACC - Current - Conta Corrente.  
SLRY - Salary - Conta-Salário.  
SVGS - Savings - Conta de Poupança.  
TRAN - TransactingAccount - Conta de Pagamento pré-paga.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Tipos de contas usadas para pagamento via Pix.  <br>Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  <br>conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  <br>Segue descrição de cada valor do ENUM para o escopo do Pix.  <br>CACC - Current - Conta Corrente.  <br>SLRY - Salary - Conta-Salário.  <br>SVGS - Savings - Conta de Poupança.  <br>TRAN - TransactingAccount - Conta de Pagamento pré-paga.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|CACC|
|**|SLRY|
|**|SVGS|
|**|TRAN|

<h2 id="tocS_EnumAuthorisationStatusType">EnumAuthorisationStatusType</h2>

<a id="schemaenumauthorisationstatustype"></a>
<a id="schema_EnumAuthorisationStatusType"></a>
<a id="tocSenumauthorisationstatustype"></a>
<a id="tocsenumauthorisationstatustype"></a>

```json
"AWAITING_AUTHORISATION"

```

Retorna o estado do consentimento, o qual no momento de sua criação será AWAITING_AUTHORISATION.
Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) para AUTHORISED, REJECTED ou REVOKED. 
O consentimento fica no estado CONSUMED após ocorrer a iniciação do pagamento referente ao consentimento.  
Em caso de consentimento expirado a detentora deverá retornar o status REJECTED.  
Em caso de revogação do consentimento a detentora deverá retornar o status REVOKED.  
Estados possíveis:  
AWAITING_AUTHORISATION - Aguardando autorização  
AUTHORISED - Autorizado   
REJECTED - Rejeitado  
CONSUMED - Consumido   
REVOKED - Revogado

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Retorna o estado do consentimento, o qual no momento de sua criação será AWAITING_AUTHORISATION.<br>Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) para AUTHORISED, REJECTED ou REVOKED. <br>O consentimento fica no estado CONSUMED após ocorrer a iniciação do pagamento referente ao consentimento.  <br>Em caso de consentimento expirado a detentora deverá retornar o status REJECTED.  <br>Em caso de revogação do consentimento a detentora deverá retornar o status REVOKED.  <br>Estados possíveis:  <br>AWAITING_AUTHORISATION - Aguardando autorização  <br>AUTHORISED - Autorizado   <br>REJECTED - Rejeitado  <br>CONSUMED - Consumido   <br>REVOKED - Revogado|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|AWAITING_AUTHORISATION|
|**|AUTHORISED|
|**|REJECTED|
|**|CONSUMED|
|**|REVOKED|

<h2 id="tocS_EnumErrorsCreateConsent">EnumErrorsCreateConsent</h2>

<a id="schemaenumerrorscreateconsent"></a>
<a id="schema_EnumErrorsCreateConsent"></a>
<a id="tocSenumerrorscreateconsent"></a>
<a id="tocsenumerrorscreateconsent"></a>

```json
"FORMA_PGTO_INVALIDA"

```

Códigos de erros previstos na criação de consentimento para a iniciação de pagamentos:  
• FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  
• DATA_PGTO_INVALIDA: Data de pagamento inválida.  
• DETALHE_PGTO_INVALIDO: Detalhe do pagamento inválido.  
• NAO_INFORMADO: Não informado.   

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Códigos de erros previstos na criação de consentimento para a iniciação de pagamentos:  <br>• FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  <br>• DATA_PGTO_INVALIDA: Data de pagamento inválida.  <br>• DETALHE_PGTO_INVALIDO: Detalhe do pagamento inválido.  <br>• NAO_INFORMADO: Não informado.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|FORMA_PGTO_INVALIDA|
|**|DATA_PGTO_INVALIDA|
|**|DETALHE_PGTO_INVALIDO|
|**|NAO_INFORMADO|

<h2 id="tocS_EnumErrorsCreatePayment">EnumErrorsCreatePayment</h2>

<a id="schemaenumerrorscreatepayment"></a>
<a id="schema_EnumErrorsCreatePayment"></a>
<a id="tocSenumerrorscreatepayment"></a>
<a id="tocsenumerrorscreatepayment"></a>

```json
"SALDO_INSUFICIENTE"

```

Códigos de erros previstos na criação da iniciação de pagamento:
• SALDO_INSUFICIENTE – Esta conta não possui saldo suficiente para realizar o pagamento.
• BENEFICIARIO_INCOMPATIVEL – O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.
• VALOR_INCOMPATIVEL – O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.
• VALOR_ACIMA_LIMITE – O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.
• VALOR_INVALIDO – O valor enviado não é válido para o QR Code informado.
• COBRANCA_INVALIDA – Validação de expiração, validação de vencimento, Status Válido.
• CONSENTIMENTO_INVALIDO – Consentimento inválido (status não é "authorised" ou está expirado).
• JANELA_OPER_INVALIDA – Requisição está fora da janela de funcionamento.
• NAO_INFORMADO – Não informada pela detentora de conta.
• PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO: Dados do pagamento divergentes dos dados do consentimento.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Códigos de erros previstos na criação da iniciação de pagamento:<br>• SALDO_INSUFICIENTE – Esta conta não possui saldo suficiente para realizar o pagamento.<br>• BENEFICIARIO_INCOMPATIVEL – O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.<br>• VALOR_INCOMPATIVEL – O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.<br>• VALOR_ACIMA_LIMITE – O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.<br>• VALOR_INVALIDO – O valor enviado não é válido para o QR Code informado.<br>• COBRANCA_INVALIDA – Validação de expiração, validação de vencimento, Status Válido.<br>• CONSENTIMENTO_INVALIDO – Consentimento inválido (status não é "authorised" ou está expirado).<br>• JANELA_OPER_INVALIDA – Requisição está fora da janela de funcionamento.<br>• NAO_INFORMADO – Não informada pela detentora de conta.<br>• PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO: Dados do pagamento divergentes dos dados do consentimento.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|SALDO_INSUFICIENTE|
|**|BENEFICIARIO_INCOMPATIVEL|
|**|VALOR_INCOMPATIVEL|
|**|VALOR_ACIMA_LIMITE|
|**|VALOR_INVALIDO|
|**|COBRANCA_INVALIDA|
|**|CONSENTIMENTO_INVALIDO|
|**|JANELA_OPER_INVALIDA|
|**|NAO_INFORMADO|
|**|PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO|

<h2 id="tocS_EnumLocalInstrument">EnumLocalInstrument</h2>

<a id="schemaenumlocalinstrument"></a>
<a id="schema_EnumLocalInstrument"></a>
<a id="tocSenumlocalinstrument"></a>
<a id="tocsenumlocalinstrument"></a>

```json
"DICT"

```

Especifica a forma de iniciação do pagamento:
- MANU - Inserção manual de dados da conta transacional
- DICT - Inserção manual de chave Pix
- QRDN - QR code dinâmico
- QRES - QR code estático
- INIC - Indica que o recebedor (creditor) contratou o Iniciador de Pagamentos especificamente para realizar iniciações de pagamento em que o beneficiário é previamente conhecido.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Especifica a forma de iniciação do pagamento:<br>- MANU - Inserção manual de dados da conta transacional<br>- DICT - Inserção manual de chave Pix<br>- QRDN - QR code dinâmico<br>- QRES - QR code estático<br>- INIC - Indica que o recebedor (creditor) contratou o Iniciador de Pagamentos especificamente para realizar iniciações de pagamento em que o beneficiário é previamente conhecido.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|MANU|
|**|DICT|
|**|QRDN|
|**|QRES|
|**|INIC|

<h2 id="tocS_EnumPaymentPersonType">EnumPaymentPersonType</h2>

<a id="schemaenumpaymentpersontype"></a>
<a id="schema_EnumPaymentPersonType"></a>
<a id="tocSenumpaymentpersontype"></a>
<a id="tocsenumpaymentpersontype"></a>

```json
"PESSOA_NATURAL"

```

Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|PESSOA_NATURAL|
|**|PESSOA_JURIDICA|

<h2 id="tocS_EnumPaymentStatusType">EnumPaymentStatusType</h2>

<a id="schemaenumpaymentstatustype"></a>
<a id="schema_EnumPaymentStatusType"></a>
<a id="tocSenumpaymentstatustype"></a>
<a id="tocsenumpaymentstatustype"></a>

```json
"PDNG"

```

Estado atual da iniciação de pagamento. O estado evolui na seguinte ordem:  
1. PDNG (PENDING) - Iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.  
2. SASP (SCHEDULE_ACCEPTED_SETTLEMENT_IN_PROCESS) - Indica que o processo de agendamento está em processamento.  
3. SASC (SCHEDULE_ACCEPTED_SETTLEMENT_COMPLETED) - Indica que o processo de agendamento foi realizado.  
4. PART (PARTIALLY ACCEPTED) - Aguardando autorização múltipla alçada.  
5. ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Iniciação de pagamento aceita e processamento do pagamento foi iniciado.  
6. ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Débito realizado na conta do pagador.  
7. ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Crédito realizado na instituição de destino.  

Em caso insucesso:  
RJCT (REJECTED) - Instrução de pagamento rejeitada.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Estado atual da iniciação de pagamento. O estado evolui na seguinte ordem:  <br>1. PDNG (PENDING) - Iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.  <br>2. SASP (SCHEDULE_ACCEPTED_SETTLEMENT_IN_PROCESS) - Indica que o processo de agendamento está em processamento.  <br>3. SASC (SCHEDULE_ACCEPTED_SETTLEMENT_COMPLETED) - Indica que o processo de agendamento foi realizado.  <br>4. PART (PARTIALLY ACCEPTED) - Aguardando autorização múltipla alçada.  <br>5. ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Iniciação de pagamento aceita e processamento do pagamento foi iniciado.  <br>6. ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Débito realizado na conta do pagador.  <br>7. ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Crédito realizado na instituição de destino.  <br><br>Em caso insucesso:  <br>RJCT (REJECTED) - Instrução de pagamento rejeitada.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|PDNG|
|**|SASP|
|**|SASC|
|**|PART|
|**|ACSP|
|**|ACSC|
|**|ACCC|
|**|RJCT|

<h2 id="tocS_EnumPaymentType">EnumPaymentType</h2>

<a id="schemaenumpaymenttype"></a>
<a id="schema_EnumPaymentType"></a>
<a id="tocSenumpaymenttype"></a>
<a id="tocsenumpaymenttype"></a>

```json
"PIX"

```

Este campo define o tipo de pagamento que será iniciado após a autorização do consentimento.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Este campo define o tipo de pagamento que será iniciado após a autorização do consentimento.|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|PIX|

<h2 id="tocS_EnumRejectionReasonType">EnumRejectionReasonType</h2>

<a id="schemaenumrejectionreasontype"></a>
<a id="schema_EnumRejectionReasonType"></a>
<a id="tocSenumrejectionreasontype"></a>
<a id="tocsenumrejectionreasontype"></a>

```json
"USER_NOT_YET_ACTIVATED"

```

Motivo da rejeição do pagamento. Informações complementares sobre o motivo do status.  
ABORTED_SETTLEMENT_TIMEOUT - Liquidação da transação interrompida devido a timeout no SPI (AB03).  
ERROR_CREDITOR_AGENT - Transação interrompida devido a erro no participante do usuário recebedor (AB09).  
TIMEOUT_DEBTOR_AGENT - Timeout do participante emissor da ordem de pagamento (AB11).  
INVALID_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor inexistente ou inválido (AC03).  
BLOCKED_ACCOUNT - Conta transacional do usuário recebedor encontra-se bloqueada (AC06).  
CLOSED_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor encerrada (AC07).  
INVALID_CREDITOR_ACCOUNTTYPE - Tipo incorreto para a conta transacional do usuário recebedor (AC14).  
TRANSACTION_NOT_SUPPORTED - Tipo de transação não é suportado/autorizado na conta transacional do usuário recebedor (AG03). Exemplo: transferência para conta salário.  
NOT_ALLOWED_BOOK_TRANSFER - Não é permitida ordem de pagamento/devolução no SPI cujos recursos sejam transferidos de uma conta transacional para outra em uma mesma instituição participante ou entre participantes que utilizem o serviço de liquidação de um mesmo participante liquidante no SPI (booktransfer) (AG12).  
FORBIDDEN_RETURN_PAYMENT - Não é permitido devolver a devolução de um pagamento instantâneo (AG13).  
INCORRECT_AGENT - Participante direto não é liquidante do participante do usuário pagador / participante do usuário recebedor (AGNT).  
ZERO_AMOUNT - Ordem de pagamento instantâneo com valor zero (AM01).  
NOT_ALLOWED_AMOUNT - Ordem de pagamento/devolução em valor que faz superar o limite permitido para o tipo de conta transacional creditada (AM02).  
INSUFFICIENT_FUNDS - Saldo insuficiente na conta PI do participante do usuário pagador (AM04).  
WRONG_AMOUNT - Devolução de pagamento em valor que faz superar o valor da ordem de pagamento instantâneo correspondente (AM09).  
INVALID_AMOUNT - Divergência entre a somatória dos valores do bloco ‘valorDoDinheiroOuCompra’ e o campo ‘valor’ (AM12).  
INVALID_NUMBER_OF_TRANSACTIONS - Quantidade de transações inválida (AM18).  
INCONSISTENT_WITH_END_CUSTOMER - CPF/CNPJ do usuário recebedor não é consistente com o titular da conta transacional especificada (BE01).  
INVALID_IDENTIFICATION_CODE - Código de situação de pagamento ou de erro inválido (BE15).  
INVALID_CREDITOR_IDENTIFICATION_CODE - QR Code rejeitado pelo participante do usuário recebedor (BE17).  
CREDITOR_IDENTIFIER_INCORRECT - CPF/CNPJ do usuário recebedor incorreto (CH11).  
ELEMENT_CONTENT_FORMALLY_INCORRECT - Elemento da mensagem incorreto (CH16).  
ORDER_REJECTED - Ordem rejeitada pelo participante do usuário recebedor (DS04).  
NOT_ALLOWED_PAYMENT - Participante que assinou a mensagem não é autorizado a realizar a operação na conta PI debitada. No caso em que o participante que assinou a mensagem não é o titular da conta PI debitada nem é o liquidante no SPI do participante do usuário pagador (DS0G).  
NOT_ALLOWED_ACCOUNT - ISPB do participante que submeteu a resposta à ordem de pagamento/devolução diferente do ISPB do participante creditado pela ordem (DS0H).  
USER_NOT_YET_ACTIVATED - Participante não se encontra cadastrado ou ainda não iniciou a operação no SPI (DS27).  
INVALID_CREATION_DATE - Data e Hora do envio da mensagem inválida (DT02).  
INVALID_CUT_OFF_DATE - Transação extrapola o prazo máximo para devolução de pagamento instantâneo regulamentado pelo Arranjo PIX (DT05).  
SETTLEMENT_FAILED - Erro no processamento do pagamento instantâneo (ED05).  
INVALID_PURPOSE - Inconsistência entre a finalidade da transação e o preenchimento do bloco elementos Structured (FF07).  
INVALID_END_TO_END_ID - Identificador da operação mal formatado (FF08).  
INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário pagador inválido ou inexistente (RC09).  
INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário recebedor inválido ou inexistente (RC10).  
REGULATORY_REASON - Ordem de pagamento em que o usuário pagador é sancionado por resolução do Conselho de Segurança das Nações Unidas (CSNU). Nos casos em que o usuário recebedor for o sancionado, a ordem de pagamento não deve ser rejeitada (RR4).  
SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT - A transação original não está relacionada ao serviço de Saque Pix (SL02).  
INVALID_BILL - Validação de expiração, validação de vencimento, Status Válido (INDT).  
OPERATION_WINDOW - Requisição está fora da janela de funcionamento (IDEA).  
INCOMPATIBLE_DATE - Data do pagamento divergente da data consentida ou divergente da data atual do QR Code (TERM).  
MISMATCH_AMOUNT - O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento (OB01).  
OVER_LIMIT - O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente (OB02).   
INVALID_CONSENT - Consentimento inválido (status não é "authorised" ou está expirado) (OB03).  
DENIED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora recusaram a operação (OB04).  
EXPIRED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora não tomaram ação para aprovar a operação (OB05).  
EXPIRED_BILL - O QR Code não é mais válido (OB06).   
[Restrição] Esse motivo deverá ser enviado quando o campo /data/status for igual a RJCT (REJECTED).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|**|string|false|Motivo da rejeição do pagamento. Informações complementares sobre o motivo do status.  <br>ABORTED_SETTLEMENT_TIMEOUT - Liquidação da transação interrompida devido a timeout no SPI (AB03).  <br>ERROR_CREDITOR_AGENT - Transação interrompida devido a erro no participante do usuário recebedor (AB09).  <br>TIMEOUT_DEBTOR_AGENT - Timeout do participante emissor da ordem de pagamento (AB11).  <br>INVALID_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor inexistente ou inválido (AC03).  <br>BLOCKED_ACCOUNT - Conta transacional do usuário recebedor encontra-se bloqueada (AC06).  <br>CLOSED_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor encerrada (AC07).  <br>INVALID_CREDITOR_ACCOUNTTYPE - Tipo incorreto para a conta transacional do usuário recebedor (AC14).  <br>TRANSACTION_NOT_SUPPORTED - Tipo de transação não é suportado/autorizado na conta transacional do usuário recebedor (AG03). Exemplo: transferência para conta salário.  <br>NOT_ALLOWED_BOOK_TRANSFER - Não é permitida ordem de pagamento/devolução no SPI cujos recursos sejam transferidos de uma conta transacional para outra em uma mesma instituição participante ou entre participantes que utilizem o serviço de liquidação de um mesmo participante liquidante no SPI (booktransfer) (AG12).  <br>FORBIDDEN_RETURN_PAYMENT - Não é permitido devolver a devolução de um pagamento instantâneo (AG13).  <br>INCORRECT_AGENT - Participante direto não é liquidante do participante do usuário pagador / participante do usuário recebedor (AGNT).  <br>ZERO_AMOUNT - Ordem de pagamento instantâneo com valor zero (AM01).  <br>NOT_ALLOWED_AMOUNT - Ordem de pagamento/devolução em valor que faz superar o limite permitido para o tipo de conta transacional creditada (AM02).  <br>INSUFFICIENT_FUNDS - Saldo insuficiente na conta PI do participante do usuário pagador (AM04).  <br>WRONG_AMOUNT - Devolução de pagamento em valor que faz superar o valor da ordem de pagamento instantâneo correspondente (AM09).  <br>INVALID_AMOUNT - Divergência entre a somatória dos valores do bloco ‘valorDoDinheiroOuCompra’ e o campo ‘valor’ (AM12).  <br>INVALID_NUMBER_OF_TRANSACTIONS - Quantidade de transações inválida (AM18).  <br>INCONSISTENT_WITH_END_CUSTOMER - CPF/CNPJ do usuário recebedor não é consistente com o titular da conta transacional especificada (BE01).  <br>INVALID_IDENTIFICATION_CODE - Código de situação de pagamento ou de erro inválido (BE15).  <br>INVALID_CREDITOR_IDENTIFICATION_CODE - QR Code rejeitado pelo participante do usuário recebedor (BE17).  <br>CREDITOR_IDENTIFIER_INCORRECT - CPF/CNPJ do usuário recebedor incorreto (CH11).  <br>ELEMENT_CONTENT_FORMALLY_INCORRECT - Elemento da mensagem incorreto (CH16).  <br>ORDER_REJECTED - Ordem rejeitada pelo participante do usuário recebedor (DS04).  <br>NOT_ALLOWED_PAYMENT - Participante que assinou a mensagem não é autorizado a realizar a operação na conta PI debitada. No caso em que o participante que assinou a mensagem não é o titular da conta PI debitada nem é o liquidante no SPI do participante do usuário pagador (DS0G).  <br>NOT_ALLOWED_ACCOUNT - ISPB do participante que submeteu a resposta à ordem de pagamento/devolução diferente do ISPB do participante creditado pela ordem (DS0H).  <br>USER_NOT_YET_ACTIVATED - Participante não se encontra cadastrado ou ainda não iniciou a operação no SPI (DS27).  <br>INVALID_CREATION_DATE - Data e Hora do envio da mensagem inválida (DT02).  <br>INVALID_CUT_OFF_DATE - Transação extrapola o prazo máximo para devolução de pagamento instantâneo regulamentado pelo Arranjo PIX (DT05).  <br>SETTLEMENT_FAILED - Erro no processamento do pagamento instantâneo (ED05).  <br>INVALID_PURPOSE - Inconsistência entre a finalidade da transação e o preenchimento do bloco elementos Structured (FF07).  <br>INVALID_END_TO_END_ID - Identificador da operação mal formatado (FF08).  <br>INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário pagador inválido ou inexistente (RC09).  <br>INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário recebedor inválido ou inexistente (RC10).  <br>REGULATORY_REASON - Ordem de pagamento em que o usuário pagador é sancionado por resolução do Conselho de Segurança das Nações Unidas (CSNU). Nos casos em que o usuário recebedor for o sancionado, a ordem de pagamento não deve ser rejeitada (RR4).  <br>SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT - A transação original não está relacionada ao serviço de Saque Pix (SL02).  <br>INVALID_BILL - Validação de expiração, validação de vencimento, Status Válido (INDT).  <br>OPERATION_WINDOW - Requisição está fora da janela de funcionamento (IDEA).  <br>INCOMPATIBLE_DATE - Data do pagamento divergente da data consentida ou divergente da data atual do QR Code (TERM).  <br>MISMATCH_AMOUNT - O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento (OB01).  <br>OVER_LIMIT - O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente (OB02).   <br>INVALID_CONSENT - Consentimento inválido (status não é "authorised" ou está expirado) (OB03).  <br>DENIED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora recusaram a operação (OB04).  <br>EXPIRED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora não tomaram ação para aprovar a operação (OB05).  <br>EXPIRED_BILL - O QR Code não é mais válido (OB06).   <br>[Restrição] Esse motivo deverá ser enviado quando o campo /data/status for igual a RJCT (REJECTED).|

#### Enumerated Values

|Nome|Código|
|---|---|
|**|ABORTED_SETTLEMENT_TIMEOUT|
|**|ERROR_CREDITOR_AGENT|
|**|TIMEOUT_DEBTOR_AGENT|
|**|INVALID_CREDITOR_ACCOUNT_NUMBER|
|**|BLOCKED_ACCOUNT|
|**|CLOSED_CREDITOR_ACCOUNT_NUMBER|
|**|INVALID_CREDITOR_ACCOUNTTYPE|
|**|TRANSACTION_NOT_SUPPORTED|
|**|NOT_ALLOWED_BOOK_TRANSFER|
|**|FORBIDDEN_RETURN_PAYMENT|
|**|INCORRECT_AGENT|
|**|ZERO_AMOUNT|
|**|NOT_ALLOWED_AMOUNT|
|**|INSUFFICIENT_FUNDS|
|**|WRONG_AMOUNT|
|**|INVALID_AMOUNT|
|**|INVALID_NUMBER_OF_TRANSACTIONS|
|**|INCONSISTENT_WITH_END_CUSTOMER|
|**|INVALID_IDENTIFICATION_CODE|
|**|INVALID_CREDITOR_IDENTIFICATION_CODE|
|**|CREDITOR_IDENTIFIER_INCORRECT|
|**|ELEMENT_CONTENT_FORMALLY_INCORRECT|
|**|ORDER_REJECTED|
|**|NOT_ALLOWED_PAYMENT|
|**|NOT_ALLOWED_ACCOUNT|
|**|USER_NOT_YET_ACTIVATED|
|**|INVALID_CREATION_DATE|
|**|INVALID_CUT_OFF_DATE|
|**|SETTLEMENT_FAILED|
|**|INVALID_PURPOSE|
|**|INVALID_END_TO_END_ID|
|**|INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER|
|**|INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER|
|**|REGULATORY_REASON|
|**|SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT|
|**|INVALID_BILL|
|**|OPERATION_WINDOW|
|**|INCOMPATIBLE_DATE|
|**|MISMATCH_AMOUNT|
|**|OVER_LIMIT|
|**|INVALID_CONSENT|
|**|DENIED_MULTIPLE_AUTHORISATIONS|
|**|EXPIRED_MULTIPLE_AUTHORISATIONS|
|**|EXPIRED_BILL|

<h2 id="tocS_Identification">Identification</h2>

<a id="schemaidentification"></a>
<a id="schema_Identification"></a>
<a id="tocSidentification"></a>
<a id="tocsidentification"></a>

```json
{
  "personType": "PESSOA_NATURAL",
  "cpfCnpj": "58764789000137",
  "name": "Marco Antonio de Brito"
}

```

Objeto contendo os dados do recebedor (creditor).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|personType|[EnumPaymentPersonType](#schemaenumpaymentpersontype)|true|Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).|
|cpfCnpj|string|true|Identificação da pessoa envolvida na transação.  <br>Preencher com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.  <br>O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços.  <br>O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.|
|name|string|true|Em caso de pessoa natural deve ser informado o nome completo do titular da conta do recebedor.  <br>Em caso de pessoa jurídica deve ser informada a razão social ou o nome fantasia da conta do recebedor.|

<h2 id="tocS_Links">Links</h2>

<a id="schemalinks"></a>
<a id="schema_Links"></a>
<a id="tocSlinks"></a>
<a id="tocslinks"></a>

```json
{
  "self": "https://api.banco.com.br/open-banking/api/v1/resource",
  "first": "https://api.banco.com.br/open-banking/api/v1/resource",
  "prev": "https://api.banco.com.br/open-banking/api/v1/resource",
  "next": "https://api.banco.com.br/open-banking/api/v1/resource",
  "last": "https://api.banco.com.br/open-banking/api/v1/resource"
}

```

Referências para outros recusos da API requisitada.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|self|string(uri)|true|URI completo que gerou a resposta atual.|
|first|string(uri)|false|URI da primeira página que originou essa lista de resultados. Restrição - Obrigatório quando não for a primeira página da resposta|
|prev|string(uri)|false|URI da página anterior dessa lista de resultados. Restrição - 	Obrigatório quando não for a primeira página da resposta|
|next|string(uri)|false|URI da próxima página dessa lista de resultados. Restrição - Obrigatório quando não for a última página da resposta|
|last|string(uri)|false|URI da última página dessa lista de resultados. Restrição - Obrigatório quando não for a última página da resposta|

<h2 id="tocS_LoggedUser">LoggedUser</h2>

<a id="schemaloggeduser"></a>
<a id="schema_LoggedUser"></a>
<a id="tocSloggeduser"></a>
<a id="tocsloggeduser"></a>

```json
{
  "document": {
    "identification": "11111111111",
    "rel": "CPF"
  }
}

```

Usuário (pessoa natural) que encontra-se logado na instituição Iniciadora de Pagamento.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|document|object|true|Objeto que contém os dados de identificação do usuário.|
|» identification|string|true|Número do documento de identificação oficial do usuário.|
|» rel|string|true|Tipo do documento de identificação oficial do usuário.|

<h2 id="tocS_Meta">Meta</h2>

<a id="schemameta"></a>
<a id="schema_Meta"></a>
<a id="tocSmeta"></a>
<a id="tocsmeta"></a>

```json
{
  "totalRecords": 1,
  "totalPages": 1,
  "requestDateTime": "2021-05-21T08:30:00Z"
}

```

Meta informações referente à API requisitada.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|totalRecords|integer(int32)|true|Número total de registros no resultado|
|totalPages|integer(int32)|true|Número total de páginas no resultado|
|requestDateTime|string(date-time)|true|Data e hora da consulta, conforme especificação RFC-3339, formato UTC.|

<h2 id="tocS_PaymentConsent">PaymentConsent</h2>

<a id="schemapaymentconsent"></a>
<a id="schema_PaymentConsent"></a>
<a id="tocSpaymentconsent"></a>
<a id="tocspaymentconsent"></a>

```json
{
  "type": "PIX",
  "date": "2021-01-01",
  "currency": "BRL",
  "amount": "100000.12",
  "ibgeTownCode": "5300108",
  "details": {
    "localInstrument": "DICT",
    "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
    "proxy": "12345678901",
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  }
}

```

Objeto contendo dados de pagamento para consentimento.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|type|[EnumPaymentType](#schemaenumpaymenttype)|true|Este campo define o tipo de pagamento que será iniciado após a autorização do consentimento.|
|date|string(date)|true|Data do pagamento, conforme especificação RFC-3339.|
|currency|string|true|Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'.<br>Todos os valores monetários informados estão representados com a moeda vigente do Brasil.|
|amount|string|true|Valor da transação com 2 casas decimais.|
|ibgeTownCode|string|false|Traz o código da cidade segundo o IBGE (Instituto Brasileiro de Geografia e Estatística).<br>Para o preenchimento deste campo, o Iniciador de Pagamentos deve seguir a orientação do arranjo da forma de pagamento.<br>O preenchimento do campo tanto em pix/payments quanto /consents deve ser igual. Caso haja divergência dos valores, a instituição deve retornar HTTP 422 com o código de erro PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO.<br>Este campo faz referência ao campo CodMun do arranjo Pix.|
|details|[Details](#schemadetails)|true|Objeto contendo os detalhes do pagamento.|

<h2 id="tocS_PaymentPix">PaymentPix</h2>

<a id="schemapaymentpix"></a>
<a id="schema_PaymentPix"></a>
<a id="tocSpaymentpix"></a>
<a id="tocspaymentpix"></a>

```json
{
  "amount": "100000.12",
  "currency": "BRL"
}

```

Objeto contendo dados do pagameto como moeda e valor.

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|amount|string|true|Valor da transação com 2 casas decimais.|
|currency|string|true|Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'.  <br>Todos os valores monetários informados estão representados com a moeda vigente do Brasil.|

<h2 id="tocS_ResponseError">ResponseError</h2>

<a id="schemaresponseerror"></a>
<a id="schema_ResponseError"></a>
<a id="tocSresponseerror"></a>
<a id="tocsresponseerror"></a>

```json
{
  "errors": [
    {
      "code": "string",
      "title": "string",
      "detail": "string"
    }
  ],
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|errors|[object]|true||
|» code|string|true|Código de erro específico do endpoint|
|» title|string|true|Título legível por humanos deste erro específico|
|» detail|string|true|Descrição legível por humanos deste erro específico|
|meta|[Meta](#schemameta)|false|Meta informações referente à API requisitada.|

<h2 id="tocS_ResponsePaymentConsent">ResponsePaymentConsent</h2>

<a id="schemaresponsepaymentconsent"></a>
<a id="schema_ResponsePaymentConsent"></a>
<a id="tocSresponsepaymentconsent"></a>
<a id="tocsresponsepaymentconsent"></a>

```json
{
  "data": {
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2021-05-21T08:30:00Z",
    "expirationDateTime": "2021-05-21T08:30:00Z",
    "statusUpdateDateTime": "2021-05-21T08:30:00Z",
    "status": "AWAITING_AUTHORISATION",
    "loggedUser": {
      "document": {
        "identification": "11111111111",
        "rel": "CPF"
      }
    },
    "businessEntity": {
      "document": {
        "identification": "11111111111111",
        "rel": "CNPJ"
      }
    },
    "creditor": {
      "personType": "PESSOA_NATURAL",
      "cpfCnpj": "58764789000137",
      "name": "Marco Antonio de Brito"
    },
    "payment": {
      "type": "PIX",
      "date": "2021-01-01",
      "currency": "BRL",
      "amount": "100000.12",
      "ibgeTownCode": "5300108",
      "details": {
        "localInstrument": "DICT",
        "qrCode": "00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n",
        "proxy": "12345678901",
        "creditorAccount": {
          "ispb": "12345678",
          "issuer": "1774",
          "number": "1234567890",
          "accountType": "CACC"
        }
      }
    },
    "debtorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|data|object|true|Objeto contendo as informações de resposta do consentimento para a iniciação de pagamento individual.|
|» consentId|string|true|Identificador único do consentimento criado para a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.<br>Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource<br>Identifier - URI - que é atribuído sob o URI scheme "urn" e um namespace URN específico, com a intenção de que o URN<br>seja um identificador de recurso persistente e independente da localização.<br>Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:<br>- o namespace(urn)<br>- o identificador associado ao namespace da instituição transnmissora (bancoex)<br>- o identificador específico dentro do namespace (C1DD33123).<br>Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).|
|» creationDateTime|string(date-time)|true|Data e hora em que o consentimento foi criado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).|
|» expirationDateTime|string(date-time)|true|Data e hora em que o consentimento da iniciação de pagamento expira, devendo ser sempre o creationDateTime mais 5 minutos. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC (UTC time format).<br>O consentimento é criado com o status AWAITING_AUTHORISATION, e deve assumir o status AUTHORIZED ou REJECTED antes do tempo de expiração - 5 minutos. Caso o tempo seja expirado, o status deve assumir REJECTED.<br>Para o cenário em que o status assumiu AUTHORISED, o tempo máximo do expirationDateTime do consentimento deve assumir "now + 60 minutos". Este é o tempo para consumir o consentimento autorizado, mudando seu status para CONSUMED. Não é possível prorrogar este tempo e a criação de um novo consentimento será necessária para os cenários de insucesso.<br>O tempo do expirationDateTime é garantido com os 15 minutos do access token, sendo possível utilizar mais três refresh tokens até totalizar 60 minutos.|
|» statusUpdateDateTime|string(date-time)|true|Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).|
|» status|[EnumAuthorisationStatusType](#schemaenumauthorisationstatustype)|true|Retorna o estado do consentimento, o qual no momento de sua criação será AWAITING_AUTHORISATION.<br>Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) para AUTHORISED, REJECTED ou REVOKED. <br>O consentimento fica no estado CONSUMED após ocorrer a iniciação do pagamento referente ao consentimento.  <br>Em caso de consentimento expirado a detentora deverá retornar o status REJECTED.  <br>Em caso de revogação do consentimento a detentora deverá retornar o status REVOKED.  <br>Estados possíveis:  <br>AWAITING_AUTHORISATION - Aguardando autorização  <br>AUTHORISED - Autorizado   <br>REJECTED - Rejeitado  <br>CONSUMED - Consumido   <br>REVOKED - Revogado|
|» loggedUser|[LoggedUser](#schemaloggeduser)|true|Usuário (pessoa natural) que encontra-se logado na instituição Iniciadora de Pagamento.|
|» businessEntity|[BusinessEntity](#schemabusinessentity)|false|Usuário (pessoa jurídica) que encontra-se logado na instituição Iniciadora de Pagamento. [Restrição] Preenchimento obrigatório se usuário logado na instituição Iniciadora de Pagamento for um CNPJ (pessoa jurídica).|
|» creditor|[Identification](#schemaidentification)|true|Objeto contendo os dados do recebedor (creditor).|
|» payment|[PaymentConsent](#schemapaymentconsent)|true|Objeto contendo dados de pagamento para consentimento.|
|» debtorAccount|[DebtorAccount](#schemadebtoraccount)|false|Objeto que contém a identificação da conta de origem do pagador.  <br>As informações quanto à conta de origem do pagador poderão ser trazidas no consentimento para a detentora, caso a iniciadora tenha coletado essas informações do cliente. Do contrário, será coletada na detentora e trazida para a iniciadora como resposta à criação do pagamento.|
|links|[ResponsePixPayment/properties/links](#schemaresponsepixpayment/properties/links)|true|Referências para outros recusos da API requisitada.|
|meta|[Meta](#schemameta)|true|Meta informações referente à API requisitada.|

<h2 id="tocS_ResponsePixPayment">ResponsePixPayment</h2>

<a id="schemaresponsepixpayment"></a>
<a id="schema_ResponsePixPayment"></a>
<a id="tocSresponsepixpayment"></a>
<a id="tocsresponsepixpayment"></a>

```json
{
  "data": {
    "paymentId": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
    "endToEndId": "E9040088820210128000800123873170",
    "consentId": "urn:bancoex:C1DD33123",
    "creationDateTime": "2020-07-21T08:30:00Z",
    "statusUpdateDateTime": "2020-07-21T08:30:00Z",
    "proxy": "12345678901",
    "ibgeTownCode": "5300108",
    "status": "PDNG",
    "rejectionReason": "USER_NOT_YET_ACTIVATED",
    "localInstrument": "DICT",
    "cnpjInitiator": "50685362000135",
    "payment": {
      "amount": "100000.12",
      "currency": "BRL"
    },
    "transactionIdentification": "E00038166201907261559y6j6",
    "remittanceInformation": "Pagamento da nota RSTO035-002.",
    "creditorAccount": {
      "ispb": "12345678",
      "issuer": "1774",
      "number": "1234567890",
      "accountType": "CACC"
    }
  },
  "links": {
    "self": "https://api.banco.com.br/open-banking/api/v1/resource"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}

```

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|data|[ResponsePixPaymentData](#schemaresponsepixpaymentdata)|true|Objeto contendo dados do pagamento e da conta do recebedor (creditor).|
|links|object|true|Referências para outros recusos da API requisitada.|
|» self|string(uri)|true|URI completo que gerou a resposta atual.|
|meta|[Meta](#schemameta)|true|Meta informações referente à API requisitada.|

<h2 id="tocS_ResponsePixPaymentData">ResponsePixPaymentData</h2>

<a id="schemaresponsepixpaymentdata"></a>
<a id="schema_ResponsePixPaymentData"></a>
<a id="tocSresponsepixpaymentdata"></a>
<a id="tocsresponsepixpaymentdata"></a>

```json
{
  "paymentId": "TXpRMU9UQTROMWhZV2xSU1FUazJSMDl",
  "endToEndId": "E9040088820210128000800123873170",
  "consentId": "urn:bancoex:C1DD33123",
  "creationDateTime": "2020-07-21T08:30:00Z",
  "statusUpdateDateTime": "2020-07-21T08:30:00Z",
  "proxy": "12345678901",
  "ibgeTownCode": "5300108",
  "status": "PDNG",
  "rejectionReason": "USER_NOT_YET_ACTIVATED",
  "localInstrument": "DICT",
  "cnpjInitiator": "50685362000135",
  "payment": {
    "amount": "100000.12",
    "currency": "BRL"
  },
  "transactionIdentification": "E00038166201907261559y6j6",
  "remittanceInformation": "Pagamento da nota RSTO035-002.",
  "creditorAccount": {
    "ispb": "12345678",
    "issuer": "1774",
    "number": "1234567890",
    "accountType": "CACC"
  }
}

```

Objeto contendo dados do pagamento e da conta do recebedor (creditor).

### Propriedades

|Nome|Tipo|Obrigatório|Descrição|
|---|---|---|---|---|
|paymentId|string|true|Código ou identificador único informado pela instituição detentora da conta para representar<br>a iniciação de pagamento individual. O `paymentId` deve ser diferente do `endToEndId`.<br>Este é o identificador que deverá ser utilizado na consulta ao status da iniciação de pagamento efetuada.|
|endToEndId|[EndToEndId](#schemaendtoendid)|false|Deve ser preenchido no formato padrão ExxxxxxxxyyyyMMddHHmmkkkkkkkkkkk (32 caracteres; “case sensitive”, isso é, diferencia letras maiúsculas e minúsculas), sendo:<br>• “E” – fixo (1 caractere);  <br>• xxxxxxxx – identificação do agente que gerou o ´EndToEndId´, podendo ser: o ISPB do participante direto ou o ISPB do participante indireto (8 caracteres numéricos [0-9]);  <br>• yyyyMMddHHmm – data, hora e minuto (12 caracteres), seguindo o horário UTC, da submissão da ordem de pagamento, caso a liquidação seja prioritária, ou prevista para o envio da ordem ao sistema de liquidação, caso seja realizado um agendamento. Para ordens prioritárias e não prioritárias, aceita-se o preenchimento, pelo agente que gerou o ´EndToEndId´, com uma tolerância máxima de 12 horas, para o futuro e para o passado, em relação ao horário efetivo de processamento da ordem pelo SPI;  <br>• kkkkkkkkkkk – sequencial criado pelo agente que gerou o ´EndToEndId´ (11 caracteres alfanuméricos [a-z/A-Z/0-9]). Deve ser único dentro de cada “yyyyMMddHHmm”.  <br>Admite-se que o ´EndToEndId´ seja gerado pelo participante direto, pelo participante indireto ou pelo iniciador de pagamento.  <br>Ele deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.  <br>[Restrição] O ´EndToEndId´ deve ser informado obrigatoriamente caso o status do pagamento seja ACCEPTED_SETTLEMENT_COMPLETED.|
|consentId|string|true|Identificador único do consentimento criado para a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.<br>Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource<br>Identifier - URI - que é atribuído sob o URI scheme "urn" e um namespace URN específico, com a intenção de que o URN<br>seja um identificador de recurso persistente e independente da localização.<br>Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:<br>- o namespace(urn)<br>- o identificador associado ao namespace da instituição transnmissora (bancoex)<br>- o identificador específico dentro do namespace (C1DD33123).<br>Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).|
|creationDateTime|string(date-time)|true|Data e hora em que o recurso foi criado.<br>Uma string com data e hora conforme especificação RFC-3339,<br>sempre com a utilização de timezone UTC(UTC time format).|
|statusUpdateDateTime|string(date-time)|true|Data e hora da última atualização da iniciação de pagamento.<br>Uma string com data e hora conforme especificação RFC-3339,<br>sempre com a utilização de timezone UTC(UTC time format).|
|proxy|string|false|Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.<br>No caso de telefone celular deve ser informado no padrão E.1641.<br>Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.<br>No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.<br>Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.<br>No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.<br>Se informado, a detentora da conta deve validar o proxy no DICT quando localInstrument for igual a DICT, QRDN ou QRES e validar o campo creditorAccount.<br>Esta validação é opcional caso o localInstrument for igual a INIC.<br>[Restrição] Se localInstrument for igual a MANU, o campo proxy não deve ser preenchido. Se localInstrument for igual INIC, DICT, QRDN ou QRES, o campo proxy deve ser sempre preenchido com a chave Pix.|
|ibgeTownCode|string|false|Traz o código da cidade segundo o IBGE (Instituto Brasileiro de Geografia e Estatística).<br>Para o preenchimento deste campo, o Iniciador de Pagamentos deve seguir a orientação do arranjo da forma de pagamento.<br>O preenchimento do campo tanto em pix/payments quanto /consents deve ser igual. Caso haja divergência dos valores, a instituição deve retornar HTTP 422 com o código de erro PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO.<br>Este campo faz referência ao campo CodMun do arranjo Pix.|
|status|[EnumPaymentStatusType](#schemaenumpaymentstatustype)|true|Estado atual da iniciação de pagamento. O estado evolui na seguinte ordem:  <br>1. PDNG (PENDING) - Iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.  <br>2. SASP (SCHEDULE_ACCEPTED_SETTLEMENT_IN_PROCESS) - Indica que o processo de agendamento está em processamento.  <br>3. SASC (SCHEDULE_ACCEPTED_SETTLEMENT_COMPLETED) - Indica que o processo de agendamento foi realizado.  <br>4. PART (PARTIALLY ACCEPTED) - Aguardando autorização múltipla alçada.  <br>5. ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Iniciação de pagamento aceita e processamento do pagamento foi iniciado.  <br>6. ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Débito realizado na conta do pagador.  <br>7. ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Crédito realizado na instituição de destino.  <br><br>Em caso insucesso:  <br>RJCT (REJECTED) - Instrução de pagamento rejeitada.|
|rejectionReason|[EnumRejectionReasonType](#schemaenumrejectionreasontype)|false|Motivo da rejeição do pagamento. Informações complementares sobre o motivo do status.  <br>ABORTED_SETTLEMENT_TIMEOUT - Liquidação da transação interrompida devido a timeout no SPI (AB03).  <br>ERROR_CREDITOR_AGENT - Transação interrompida devido a erro no participante do usuário recebedor (AB09).  <br>TIMEOUT_DEBTOR_AGENT - Timeout do participante emissor da ordem de pagamento (AB11).  <br>INVALID_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor inexistente ou inválido (AC03).  <br>BLOCKED_ACCOUNT - Conta transacional do usuário recebedor encontra-se bloqueada (AC06).  <br>CLOSED_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor encerrada (AC07).  <br>INVALID_CREDITOR_ACCOUNTTYPE - Tipo incorreto para a conta transacional do usuário recebedor (AC14).  <br>TRANSACTION_NOT_SUPPORTED - Tipo de transação não é suportado/autorizado na conta transacional do usuário recebedor (AG03). Exemplo: transferência para conta salário.  <br>NOT_ALLOWED_BOOK_TRANSFER - Não é permitida ordem de pagamento/devolução no SPI cujos recursos sejam transferidos de uma conta transacional para outra em uma mesma instituição participante ou entre participantes que utilizem o serviço de liquidação de um mesmo participante liquidante no SPI (booktransfer) (AG12).  <br>FORBIDDEN_RETURN_PAYMENT - Não é permitido devolver a devolução de um pagamento instantâneo (AG13).  <br>INCORRECT_AGENT - Participante direto não é liquidante do participante do usuário pagador / participante do usuário recebedor (AGNT).  <br>ZERO_AMOUNT - Ordem de pagamento instantâneo com valor zero (AM01).  <br>NOT_ALLOWED_AMOUNT - Ordem de pagamento/devolução em valor que faz superar o limite permitido para o tipo de conta transacional creditada (AM02).  <br>INSUFFICIENT_FUNDS - Saldo insuficiente na conta PI do participante do usuário pagador (AM04).  <br>WRONG_AMOUNT - Devolução de pagamento em valor que faz superar o valor da ordem de pagamento instantâneo correspondente (AM09).  <br>INVALID_AMOUNT - Divergência entre a somatória dos valores do bloco ‘valorDoDinheiroOuCompra’ e o campo ‘valor’ (AM12).  <br>INVALID_NUMBER_OF_TRANSACTIONS - Quantidade de transações inválida (AM18).  <br>INCONSISTENT_WITH_END_CUSTOMER - CPF/CNPJ do usuário recebedor não é consistente com o titular da conta transacional especificada (BE01).  <br>INVALID_IDENTIFICATION_CODE - Código de situação de pagamento ou de erro inválido (BE15).  <br>INVALID_CREDITOR_IDENTIFICATION_CODE - QR Code rejeitado pelo participante do usuário recebedor (BE17).  <br>CREDITOR_IDENTIFIER_INCORRECT - CPF/CNPJ do usuário recebedor incorreto (CH11).  <br>ELEMENT_CONTENT_FORMALLY_INCORRECT - Elemento da mensagem incorreto (CH16).  <br>ORDER_REJECTED - Ordem rejeitada pelo participante do usuário recebedor (DS04).  <br>NOT_ALLOWED_PAYMENT - Participante que assinou a mensagem não é autorizado a realizar a operação na conta PI debitada. No caso em que o participante que assinou a mensagem não é o titular da conta PI debitada nem é o liquidante no SPI do participante do usuário pagador (DS0G).  <br>NOT_ALLOWED_ACCOUNT - ISPB do participante que submeteu a resposta à ordem de pagamento/devolução diferente do ISPB do participante creditado pela ordem (DS0H).  <br>USER_NOT_YET_ACTIVATED - Participante não se encontra cadastrado ou ainda não iniciou a operação no SPI (DS27).  <br>INVALID_CREATION_DATE - Data e Hora do envio da mensagem inválida (DT02).  <br>INVALID_CUT_OFF_DATE - Transação extrapola o prazo máximo para devolução de pagamento instantâneo regulamentado pelo Arranjo PIX (DT05).  <br>SETTLEMENT_FAILED - Erro no processamento do pagamento instantâneo (ED05).  <br>INVALID_PURPOSE - Inconsistência entre a finalidade da transação e o preenchimento do bloco elementos Structured (FF07).  <br>INVALID_END_TO_END_ID - Identificador da operação mal formatado (FF08).  <br>INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário pagador inválido ou inexistente (RC09).  <br>INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário recebedor inválido ou inexistente (RC10).  <br>REGULATORY_REASON - Ordem de pagamento em que o usuário pagador é sancionado por resolução do Conselho de Segurança das Nações Unidas (CSNU). Nos casos em que o usuário recebedor for o sancionado, a ordem de pagamento não deve ser rejeitada (RR4).  <br>SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT - A transação original não está relacionada ao serviço de Saque Pix (SL02).  <br>INVALID_BILL - Validação de expiração, validação de vencimento, Status Válido (INDT).  <br>OPERATION_WINDOW - Requisição está fora da janela de funcionamento (IDEA).  <br>INCOMPATIBLE_DATE - Data do pagamento divergente da data consentida ou divergente da data atual do QR Code (TERM).  <br>MISMATCH_AMOUNT - O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento (OB01).  <br>OVER_LIMIT - O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente (OB02).   <br>INVALID_CONSENT - Consentimento inválido (status não é "authorised" ou está expirado) (OB03).  <br>DENIED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora recusaram a operação (OB04).  <br>EXPIRED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora não tomaram ação para aprovar a operação (OB05).  <br>EXPIRED_BILL - O QR Code não é mais válido (OB06).   <br>[Restrição] Esse motivo deverá ser enviado quando o campo /data/status for igual a RJCT (REJECTED).|
|localInstrument|[CreatePixPaymentData/properties/localInstrument](#schemacreatepixpaymentdata/properties/localinstrument)|true|Especifica a forma de iniciação do pagamento:<br>- MANU - Inserção manual de dados da conta transacional<br>- DICT - Inserção manual de chave Pix<br>- QRDN - QR code dinâmico<br>- QRES - QR code estático<br>- INIC - Indica que o recebedor (creditor) contratou o Iniciador de Pagamentos especificamente para realizar iniciações de pagamento em que o beneficiário é previamente conhecido.|
|cnpjInitiator|string|true|CNPJ do Iniciador de Pagamento devidamente habilitado para a prestação de Serviço de Iniciação no Pix.|
|payment|[PaymentPix](#schemapaymentpix)|true|Objeto contendo dados do pagameto como moeda e valor.|
|transactionIdentification|string|false|Trata-se de um identificador de transação que deve ser retransmitido intacto pelo PSP do pagador ao gerar a ordem de pagamento. Essa informação permitirá ao recebedor identificar e correlacionar a transferência, quando recebida, com a apresentação das instruções ao pagador.<br>Os caracteres permitidos no contexto do Pix para o campo txid (EMV 62-05) são:<br>- Letras minúsculas, de ‘a’ a ‘z’<br>- Letras maiúsculas, de ‘A’ a ‘z’<br>- Dígitos decimais, de ‘0’ a ‘9’<br><br>[Restrição] Se localInstrument for igual a INIC, o campo transactionIdentification deve ser preenchido obrigatoriamente.<br>Se localInstrument for igual a MANU ou DICT, o campo transactionIdentification não deve ser preenchido.<br>A detentora de conta deve validar se a condicionalidade do campo foi atendida pela iniciadora de pagamento.|
|remittanceInformation|string|false|Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.|
|creditorAccount|[CreditorAccount](#schemacreditoraccount)|true|Objeto que contém a identificação da conta de destino do beneficiário/recebedor.|

