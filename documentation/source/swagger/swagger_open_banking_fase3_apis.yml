openapi: 3.0.0
info:
  title: Fase 3 - APIs do Open Banking Brasil
  description: |
    Clientes poderão solicitar e realizar operações de pagamento PIX em instituições participantes, ou contratantes, da Fase 3 do Open Banking Brasil. 
    A operação de pagamento ocorre apenas se o cliente consentir través da API de Consentimento Fase 3 e na sequência autorizar o pagamento no ambiente do banco detentor da conta, por meio de autenticação com login e senha. Diferentemente da Fase 2, o consentimento é dado para cada transação e não perdura por um prazo, além de ser consumido no momento e sem a possibilidade de revogamento. Uma vez dada a autorização, esta não será possível de cancelamento pelo cliente. 

    ###Idempotência
    Segundo a W3C, "um método HTTP idempotente é um método HTTP que pode ser chamado muitas vezes sem resultados diferentes ou efeitos colaterais. Não importa se o método é chamado apenas uma vez ou dez vezes. O resultado deve ser o mesmo. Essencialmente, significa que o resultado de uma solicitação executada com sucesso é independente do número de vezes que ela é executada. Por exemplo, na aritmética, adicionar zero a um número é uma operação idempotente."

    Os conhecidos métodos GET, PUT e DELETE são naturalmente idempotentes, assim como HEAD, OPTIONS e TRACE também são.

    Porém, o método POST requer um tratamento especial para que se torne idempotente e, por estarmos tratando aqui de meios de pagamentos, fazer esse tratamento é algo desejável para que não ocorram acidentes.

    ####Por que é necessário tratarmos a Idempotência do POST?

    Imagine que seja realizado um POST de pagamento e, depois de alguns segundos, é retornada uma mensagem de Timeout. Nesse caso, não é possível saber se o POST foi efetivo e enviar o POST novamente, sem tratar a idempotência, poderá ocasional em uma duplicidade de pagamento.

    ####Como mitigarmos esse risco?

    Do lado da iniciadora do pagamento: É necessário que seja enviado o POST com um GUID de Idempotência. Caso o mesmo POST seja reenviado por acidente ou precise ser reenviado, por qualquer motivo que seja, basta reenviar o POST com o mesmo GUID de Idempotência.

    Do lado da detentora da conta: É necessário validar o GUID de Idempotência recebido. Caso tenha recebido o mesmo GUID de Idempotência, a nova mensagem de POST deverá ser descartada.

    Importante reforçar que cada nova transação com POST deverá ter um novo GUID de Idempotência.

    A iniciadora não deve usar comportamento idempotente do POST para pesquisar o status dos recursos.
  version: 1.0.0-rc1.0
tags:
  - name: API - Consentimento de Iniciação de Pagamentos
    description: |
      |Versão|
      |:-----|
      |1     |

      #### Visão Geral

      A API tem como objetivo coletar o consentimento para iniciação de pagamento entre bancos e instituições financeiras e acessível também à estabelecimentos comerciais participantes do Open Banking Brasil.

      É possível realizar a coleta do consentimento para iniciação de pagamento (não possuindo restrição de uso entre pessoa física e pessoa jurídica) mediante a integração entre as instituições autorizadas.

      #### Especificação em OAS 3.0

      <a href="swagger/swagger_payments_consents_apis.yaml">Download da Especificação (OAS 3.0)</a>
  - name: API - Iniciação de Pagamentos
    description: |
      |Versão|
      |:-----|
      |1     |

      #### Visão Geral

      A API tem como objetivo realizar a iniciação de pagamento entre bancos e instituições financeiras e acessível também à estabelecimentos comerciais participantes do Open Banking Brasil.

      É possível realizar a iniciação de pagamento (não possuindo restrição de uso entre pessoa física e pessoa jurídica) mediante a integração entre as instituições autorizadas.

      #### Especificação em OAS 3.0

      <a href="swagger/swagger_payments_initiation_apis.yaml">Download da Especificação (OAS 3.0)</a>
paths:
  /payments-consents/v1/consents:
    post:
      tags:
        - API - Consentimento de Iniciação de Pagamentos
      summary: '[Em Revisão] Criar consentimento para iniciação de pagamento.'
      operationId: paymentsConsentsPostConsents
      description: |
        Método para a criação do consentimento para iniciação de pagamento.

        ### Dicionário de dados

        <a href='dictionary/paymentsConsentsPostConsents_v1.csv' target="_blank">Fazer download do dicionário de dados</a>
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/xFapiAuthDate'
        - $ref: '#/components/parameters/xFapiCustomerIpAddress'
        - $ref: '#/components/parameters/xFapiInteractionId'
        - $ref: '#/components/parameters/xCustomerUserAgent'
        - $ref: '#/components/parameters/XIdempotencyKey'
        - $ref: '#/components/parameters/XJwsSignature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentConsent'
        description: Payload para criação do consentimento para iniciação do pagamento PIX.
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201PaymentsConsentsConsentCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
        - OpenId:
            - openId
            - payments-consents
  '/payments-consents/v1/consents/{consentId}':
    get:
      tags:
        - API - Consentimento de Iniciação de Pagamentos
      summary: '[Em Revisão] Consultar consentimento para iniciação de pagamento.'
      operationId: paymentsConsentsGetConsentsConsentId
      description: |
        Método para consultar o consentimento para iniciação de pagamento.

        ### Dicionário de dados

        <a href='dictionary/paymentsConsentsGetConsentsConsentId_v1.csv' target="_blank">Fazer download do dicionário de dados</a>
      parameters:
        - $ref: '#/components/parameters/consentId'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/xFapiAuthDate'
        - $ref: '#/components/parameters/xFapiCustomerIpAddress'
        - $ref: '#/components/parameters/xFapiInteractionId'
        - $ref: '#/components/parameters/xCustomerUserAgent'
        - $ref: '#/components/parameters/XJwsSignature'
      responses:
        '200':
          $ref: '#/components/responses/200PaymentsConsentsConsentIdRead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
        - OpenId:
            - openId
            - payments-consents
  /payments/v1/pix/payments:
    post:
      tags:
        - API - Iniciação de Pagamentos
      summary: '[Em Revisão] PIX - Criar iniciação de pagamento.'
      operationId: paymentsInitiationPostPixPayments
      description: |
        Método para a criação de uma iniciação de pagamento.

        ### Dicionário de dados

        <a href='dictionary/paymentsInitiationPostPixPayments_v1.csv' target="_blank">Fazer download do dicionário de dados</a>
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/xFapiAuthDate'
        - $ref: '#/components/parameters/xFapiCustomerIpAddress'
        - $ref: '#/components/parameters/xFapiInteractionId'
        - $ref: '#/components/parameters/xCustomerUserAgent'
        - $ref: '#/components/parameters/XIdempotencyKey'
        - $ref: '#/components/parameters/XJwsSignature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePixPayment'
        description: Payload para criação da iniciação do pagamento PIX.
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201PaymentsInitiationPixPaymentCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
        - OpenId:
            - openId
            - payments-initiation
  '/payments/v1/pix/payments/{paymentId}':
    get:
      tags:
        - API - Iniciação de Pagamentos
      summary: '[Em Revisão] PIX - Consultar iniciação de pagamento.'
      operationId: paymentsInitiationGetPixPayments
      description: |
        Método para consultar uma iniciação de pagamento.

        ### Dicionário de dados

        <a href='dictionary/paymentsInitiationGetPixPayments_v1.csv' target="_blank">Fazer download do dicionário de dados</a>
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/xFapiAuthDate'
        - $ref: '#/components/parameters/xFapiCustomerIpAddress'
        - $ref: '#/components/parameters/xFapiInteractionId'
        - $ref: '#/components/parameters/xCustomerUserAgent'
        - $ref: '#/components/parameters/XJwsSignature'
      responses:
        '200':
          $ref: '#/components/responses/200PaymentsInitiationPixPaymentIdRead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
        - OpenId:
            - openId
            - payments-initiation
components:
  schemas:
    Account:
      type: object
      description: Objeto que contém os dados da conta utilizada para a iniciação de pagamento.
      required:
        - ispb
        - number
        - checkDigit
        - accountType
      properties:
        ispb:
          type: number
          maxLength: 8
          pattern: '^[0-9]{1,8}$'
          example: 12345678
          description: |
            Identificador do Sistema de Pagamentos Brasileiros.
            Código que define instituições participantes do Sistema de Transferência de Reservas (STR).
        branchCode:
          type: string
          maxLength: 4
          pattern: '^(\w{4}){1}$'
          example: '1774'
          description: |
            Código da Agência detentora da conta sem digito.
            Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito, 
            no exercício de atividades da instituição, não podendo ser móvel ou transitória.
            [Restrição] Obrigatório quando tipo de conta for CACC (CONTA_DEPOSITO_A_VISTA) ou SVGS (CONTA_POUPANCA).
        number:
          type: string
          maxLength: 20
          pattern: '^\d{8,20}$'
          example: '1234567890'
          description: Número da conta.
        checkDigit:
          type: string
          maxLength: 4
          pattern: '^(\w{4}){1}$'
          example: '1234'
          description: Dígito da conta.
        accountType:
          $ref: '#/components/schemas/EnumAccountPaymentsType'
      additionalProperties: false
    CreatePaymentConsent:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          description: Objeto contendo as informações de consentimento para a iniciação de pagamento individual.
          required:
            - creditor
            - payment
          properties:
            creditor:
              $ref: '#/components/schemas/Identification'
            payment:
              $ref: '#/components/schemas/PaymentConsent'
            debtorAccount:
              $ref: '#/components/schemas/Account'
          additionalProperties: false
      additionalProperties: false
    CreatePixPayment:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CreatePixPaymentData'
      additionalProperties: false
    CreatePixPaymentData:
      type: object
      description: Objeto contendo dados do pagamento e do recebedor (creditor).
      required:
        - payment
        - creditor
      properties:
        payment:
          $ref: '#/components/schemas/PaymentPix'
        creditorAccount:
          $ref: '#/components/schemas/Account'
        additionalInfo:
          type: string
          maxLength: 140
          pattern: \w*\W*
          example: Descrição da Transação
          description: |
            Determina um texto a ser apresentado ao pagador para que ele possa digitar uma informação correlata, 
            em formato livre, a ser enviada ao recebedor.
        qrCode:
          type: string
          maxLength: 512
          pattern: \w*\W*
          example: 00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012BR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123ABCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76
          description: |
            QR Code contendo os dados de pagamento no momento da leitura. O usuário recebedor deve poder oferecer ao pagador
            uma maneira de copiar a sequência de caracteres que representa o BR Code. É a sequência de caracteres que seria 
            lida pelo leitor de QR Code. 
            Essa funcionalidade é possível tanto para o QR Code Estático quanto para o QR Code Dinâmico. 
        pixKey:
          type: string
          maxLength: 77
          pattern: \w*\W*
          example: '12345678901'
          description: |
            Chave DICT do recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória. 
            O telefone celular é no padrão E.1641. 
            O E-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres. 
            O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços. 
            O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços. 
            A chave aleatória deve ser UUID gerado pelo DICT, conforme formato especificado na RFC41223.
            [Restrição] Obrigatório para pagamentos via Chave.
      additionalProperties: false
    EnumAccountPaymentsType:
      type: string
      maxLength: 4
      enum:
        - CACC
        - SLRY
        - SVGS
        - TRAN
      description: |
        Tipos de contas usadas para pagamento via Pix.
        Segue descrição de cada valor do ENUM para o escopo do Open Banking Brasil.
        CACC - Current - Conta Corrente.
        SLRY - Salary - Conta-Salário.
        SVGS - Savings - Conta de Poupança.
        TRAN - TransactingAccount - Conta de Pagamento
      example: CACC
    Identification:
      type: object
      description: Objeto contendo os dados do recebedor (creditor).
      required:
        - personType
        - cpfCnpj
        - name
      properties:
        personType:
          type: string
          description: |
            Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).
          enum:
            - PESSOA_NATURAL
            - PESSOA_JURIDICA
        cpfCnpj:
          type: string
          maxLength: 14
          pattern: '^\d{11,14}$'
          example: '58764789000137'
          description: |
            Identificação da pessoa envolvida na transação. 
            Preencher com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.
            O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços. 
            O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.
        name:
          type: string
          maxLength: 80
          pattern: \w*\W*
          example: Marco Antonio de Brito
          description: Nome relacionado à Pessoa Natural ou Pessoa jurídica.
      additionalProperties: false
    PaymentConsent:
      type: object
      description: Objeto contendo dados de pagamento para consentimento.
      required:
        - type
        - dateTime
        - currency
        - amount
      properties:
        type:
          type: string
          maxLength: 3
          description: |
            Tipos de pagamentos permitidos pelo Open Banking Brasil.
          enum:
            - PIX
          example: PIX
        dateTime:
          type: string
          format: date-time
          maxLength: 20
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
          example: '2021-01-01T00:00:00Z'
          description: |
            Data e hora do consentimento. 
            Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).
        currency:
          type: string
          maxLength: 3
          pattern: '^(\w{3}){1}$'
          example: BRL
          description: |
            Moeda referente ao valor monetário informado, segundo modelo ISO-4217. p.ex. 'BRL' 
            Todos os valores monetários informados estão representados com a moeda vigente do Brasil.
        amount:
          type: number
          format: double
          maxLength: 19
          pattern: '^((\d{1,16}\.\d{2}))$'
          example: 100000.12
          description: |
            Valor da transação efetuada e convertida em moeda nacional com 2 casas decimais.
      additionalProperties: false
    PaymentPix:
      type: object
      description: Objeto contendo dados do pagameto como moeda e valor.
      required:
        - amount
        - currency
      properties:
        amount:
          type: number
          format: double
          maxLength: 19
          pattern: '^((\d{1,16}\.\d{2}))$'
          example: 100000.12
          description: Valor da transação efetuada e convertida em moeda nacional com 2 casas decimais.
        currency:
          type: string
          maxLength: 3
          pattern: '^(\w{3}){1}$'
          example: BRL
          description: |
            Moeda referente ao valor monetário informado, segundo modelo ISO-4217. p.ex. 'BRL' 
            Todos os valores monetários informados estão representados com a moeda vigente do Brasil
      additionalProperties: false
    ResponseError:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Código de erro específico do endpoint
                type: string
                pattern: \w*\W*
                maxLength: 255
              title:
                description: Título legível por humanos deste erro específico
                type: string
                pattern: \w*\W*
                maxLength: 255
              detail:
                description: Descrição legível por humanos deste erro específico
                type: string
                pattern: \w*\W*
                maxLength: 2048
            additionalProperties: false
        meta:
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    ResponsePaymentConsent:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          description: Objeto contendo as informações de resposta do consentimento para a iniciação de pagamento individual.
          required:
            - consentId
            - status
            - creditor
            - payment
            - debtor
          properties:
            consentId:
              type: string
              maxLength: 36
              pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
              example: 8d886d81-3a1f-48d2-bc15-a19f1f777867
              description: |
                Identificador único do consentimento.
            status:
              type: string
              maxLength: 22
              enum:
                - AUTHORISED
                - AWAITING_AUTHORISATION
                - REJECTED
                - REVOKED
              example: AUTHORISED
              description: |
                Retorna o stado do consentimento que no momento de sua criação será AWAITING_AUTHORISATION. 
                Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) e pode assumir os seguintes estados:
                1. AWAITING_AUTHORISATION - Aguardando autorização
                2. AUTHORISED - Autorizado
                3. REJECTED - Rejeitado
                4. REVOKED - Revogado
            creditor:
              $ref: '#/components/schemas/Identification'
            payment:
              $ref: '#/components/schemas/PaymentConsent'
            debtorAccount:
              $ref: '#/components/schemas/Account'
          additionalProperties: false
      additionalProperties: false
    ResponsePixPayment:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ResponsePixPaymentData'
      additionalProperties: false
    ResponsePixPaymentData:
      type: object
      description: Objeto contendo as informações da resposta da iniciação de pagamento individual.
      required:
        - paymentId
        - consentId
        - creationDateTime
        - updatedDateTime
        - status
        - payment
        - creditor
      properties:
        paymentId:
          type: string
          maxLength: 36
          pattern: '^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$'
          example: 8f800dc8-bc8a-4c0e-b5e6-3c6801cfe135
          description: |
            Código ou identificador único informado pela instituição que mantém a conta para representar a iniciação de pagamento individual. 
            Esse identificador deve ser usado para consultar o status da iniciação de pagamento.
        endToEndId:
          type: string
          maxLength: 36
          pattern: '^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$'
          example: a9ae654d-e531-4a8b-a926-952d664de203
          description: |
            Identificador fim a fim da transação. O termo "E2E" que identifica a transação de forma única dentro do arranjo.
            Esse identificador deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.
            [Restrição] É obrigatório o retorno após o status "ACCEPTED_SETTLEMENT_IN_PROCESS".
        consentId:
          type: string
          maxLength: 36
          pattern: '^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$'
          example: 3a782761-9573-4e1f-b4d1-4c798955c0b8
          description: |
            Identificador único do consentimento.
        creationDateTime:
          type: string
          format: date-time
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$|^NA$'
          example: '2020-07-21T08:30:00Z'
          description: |
            Data e hora em que o recurso foi criado. 
            Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).
        updatedDateTime:
          type: string
          format: date-time
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$|^NA$'
          example: '2020-07-21T08:30:00Z'
          description: |
            Data e hora da ultima atualização da iniciação de pagamento. 
            Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).
        pixKey:
          type: string
          maxLength: 77
          pattern: \w*\W*
          example: '12345678901'
          description: |
            Chave DICT do recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória. 
            O telefone celular usará o padrão E.1641. 
            O E-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres. 
            O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços. 
            O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços. 
            A chave aleatória deve ser UUID gerado pelo DICT, conforme formato especificado na RFC41223.
            [Restrição] Obrigatório para pagamentos via Chave.
        qrCode:
          type: string
          maxLength: 512
          pattern: \w*\W*
          example: 00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012BR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123ABCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76
          description: |
            QR Code contendo os dados de pagamento no momento da leitura. O usuário recebedor deve poder oferecer ao pagador
            uma maneira de copiar a sequência de caracteres que representa o BR Code. É a sequência de caracteres que seria 
            lida pelo leitor de QR Code. 
            Essa funcionalidade é possível tanto para o QR Code Estático quanto para o QR Code Dinâmico.
        status:
          type: string
          maxLength: 45
          description: |
            Estado atual da iniciação de pagamento criada.
            Segue descrição de cada valor do ENUM para o escopo do Open Banking Brasil.
            ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Notificação do SPI sobre a conclusão da transação à Instituição do usuário recebedor (creditor).
            ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Notificação do SPI sobre conclusão da transação à Instituição do usuário pagador (debitor).
            ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Prosseguimento de instrução de pagamento após as validações realizadas pela Instituição do usuário recebedor (creditor).
            RJCT (REJECTED) - Instrução de pagamento rejeitada pelo SPI ou Instituição do usuário recebedor (creditor) por erro de negócio.
          enum:
            - ACCC
            - ACSC
            - ACSP
            - RJCT
          example: RJCT
        rejectionReason:
          type: string
          maxLength: 4
          description: "Motivo da rejeição do pagamento. Informações complementares sobre o motivo do status.\nAB03 (ABORTED_SETTLEMENT_TIMEOUT) - Liquidação da transação interrompida devido a timeout no SPI.\t\t\t\t\t\t\t\t\t\t\t\nAB09 (ERROR_CREDITOR_AGENT) - Transação interrompida devido a erro no participante do usuário recebedor.\nAB11 (TIMEOUT_DEBTOR_AGENT) - Timeout do participante emissor da ordem de pagamento.\nAC03 (INVALID_CREDITOR_ACCOUNT_NUMBER) - Número da conta transacional do usuário recebedor inexistente ou inválido.\nAC06 (BLOCKED_ACCOUNT) - Conta transacional do usuário recebedor encontra-se bloqueada.\nAC07 (CLOSED_CREDITOR_ACCOUNT_NUMBER) - Número da conta transacional do usuário recebedor encerrada.\nAC14 (INVALID_CREDITOR_ACCOUNTTYPE) - Tipo incorreto para a conta transacional do usuário recebedor.\nAG03 (TRANSACTION_NOT_SUPPORTED) - Tipo de transação não é suportado/autorizado na conta transacional do usuário recebedor. Exemplo: transferência para conta salário.\nAG12 (NOT_ALLOWED_BOOK_TRANSFER) - Não é permitida ordem de pagamento/devolução no SPI cujos recursos sejam transferidos de uma conta transacional para outra em uma mesma instituição participante ou entre participantes que utilizem o serviço de liquidação de um mesmo participante liquidante no SPI (booktransfer).\nAG13 (FORBIDDEN_RETURN_PAYMENT) - Não é permitido devolver a devolução de um pagamento instantâneo.\nAGNT (INCORRECT_AGENT) - Participante direto não é liquidante do participante do usuário pagador / participante do usuário recebedor.\nAM01 (ZERO_AMOUNT) - Ordem de pagamento instantâneo com valor zero.\nAM02 (NOT_ALLOWED_AMOUNT) - Ordem de pagamento/devolução em valor que faz superar o limite permitido para o tipo de conta transacional creditada.\nAM04 (INSUFFICIENT_FUNDS) - Saldo insuficiente na conta PI do participante do usuário pagador.\nAM09 (WRONG_AMOUNT) - Devolução de pagamento em valor que faz superar o valor da ordem de pagamento instantâneo correspondente.\nAM12 (INVALID_AMOUNT) - Divergência entre a somatória dos valores do bloco ‘valorDoDinheiroOuCompra’ e o campo ‘valor’.\nAM18 (INVALID_NUMBER_OF_TRANSACTIONS) - Quantidade de transações inválida.\nBE01 (INCONSISTENT_WITH_END_CUSTOMER) - CPF/CNPJ do usuário recebedor não é consistente com o titular da conta transacional especificada.\nBE15 (INVALID_IDENTIFICATION_CODE) - Código de situação de pagamento ou de erro inválido.\nBE17 (INVALID_CREDITOR_IDENTIFICATION_CODE) - QR Code rejeitado pelo participante do usuário recebedor.\nCH11 (CREDITOR_IDENTIFIER_INCORRECT) - CPF/CNPJ do usuário recebedor incorreto.\nCH16 (ELEMENT_CONTENT_FORMALLY_INCORRECT) - Elemento da mensagem incorreto.\nDS04 (ORDER_REJECTED) - Ordem rejeitada pelo participante do usuário recebedor.\nDS0G (NOT_ALLOWED_PAYMENT) - Participante que assinou a mensagem não é autorizado a realizar a operação na conta PI debitada. No caso em que o participante que assinou a mensagem não é o titular da conta PI debitada nem é o liquidante no SPI do participante do usuário pagador.\nDS0H (NOT_ALLOWED_ACCOUNT) - ISPB do participante que submeteu a resposta à ordem de pagamento/devolução diferente do ISPB do participante creditado pela ordem.\nDS27 (USER_NOT_YET_ACTIVATED) - Participante não se encontra cadastrado ou ainda não iniciou a operação no SPI.\nDT02 (INVALID_CREATION_DATE) - Data e Hora do envio da mensagem inválida.\nDT05 (INVALID_CUT_OFF_DATE) - Transação extrapola o prazo máximo para devolução de pagamento instantâneo regulamentado pelo Arranjo Pix.\nED05 (SETTLEMENT_FAILED) - Erro no processamento do pagamento instantâneo.\nFF07 (INVALID_PURPOSE) - Inconsistência entre a finalidade da transação e o preenchimento do bloco elementos Structured.\nFF08 (INVALID_END_TO_END_ID) - Identificador da operação mal formatado.\nRC09 (INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER) - ISPB do participante do usuário pagador inválido ou inexistente.\nRC10 (INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER) - ISPB do participante do usuário recebedor inválido ou inexistente.\nRR4  (REGULATORY_REASON) - Ordem de pagamento em que o usuário pagador é sancionado por resolução do Conselho de Segurança das Nações Unidas (CSNU). Nos casos em que o usuário recebedor for o sancionado, a ordem de pagamento não deve ser rejeitada.\nSL02 (SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT) - A transação original não está relacionada ao serviço de Saque Pix.\n[Restrição] Deve ser enviado quando o status é RJCT (REJECTED).\n"
          enum:
            - AB03
            - AB09
            - AB11
            - AC03
            - AC06
            - AC07
            - AC14
            - AG03
            - AG12
            - AG13
            - AGNT
            - AM01
            - AM02
            - AM04
            - AM09
            - AM12
            - AM18
            - BE01
            - BE15
            - BE17
            - CH11
            - CH16
            - DS04
            - DS0G
            - DS0H
            - DS27
            - DT02
            - DT05
            - ED05
            - FF07
            - FF08
            - RC09
            - RC10
            - RR4
            - SL02
          example: DS27
        payment:
          $ref: '#/components/schemas/PaymentPix'
        additionalInfo:
          type: string
          maxLength: 140
          pattern: \w*\W*
          example: Descrição da Transação
          description: |
            Determina um texto a ser apresentado ao pagador para que ele possa digitar uma informação correlata, 
            em formato livre, a ser enviada ao recebedor.
        creditorAccount:
          $ref: '#/components/schemas/Account'
      additionalProperties: false
    Links:
      type: object
      description: Referências para outros recusos da API requisitada.
      required:
        - self
      properties:
        self:
          type: string
          format: uri
          maxLength: 2000
          description: URI completo que gerou a resposta atual.
          example: 'https://api.banco.com.br/open-banking/api/v1/resource'
          pattern: '^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
        first:
          type: string
          format: uri
          maxLength: 2000
          description: URI da primeira página que originou essa lista de resultados. Restrição - Obrigatório quando não for a primeira página da resposta
          example: 'https://api.banco.com.br/open-banking/api/v1/resource'
          pattern: '^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
        prev:
          type: string
          format: uri
          maxLength: 2000
          description: "URI da página anterior dessa lista de resultados. Restrição - \tObrigatório quando não for a primeira página da resposta"
          example: 'https://api.banco.com.br/open-banking/api/v1/resource'
          pattern: '^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
        next:
          type: string
          format: uri
          maxLength: 2000
          description: URI da próxima página dessa lista de resultados. Restrição - Obrigatório quando não for a última página da resposta
          example: 'https://api.banco.com.br/open-banking/api/v1/resource'
          pattern: '^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
        last:
          type: string
          format: uri
          maxLength: 2000
          description: URI da última página dessa lista de resultados. Restrição - Obrigatório quando não for a última página da resposta
          example: 'https://api.banco.com.br/open-banking/api/v1/resource'
          pattern: '^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
      additionalProperties: false
    Meta:
      type: object
      description: Meta informações referente a API requisitada.
      required:
        - totalRecords
        - totalPages
        - requestDateTime
      properties:
        totalRecords:
          type: integer
          format: int32
          description: Número total de registros no resultado
          example: 1
        totalPages:
          type: integer
          format: int32
          description: Número total de páginas no resultado
          example: 1
        requestDateTime:
          description: 'Data e hora da consulta, conforme especificação RFC-3339, formato UTC.'
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
      additionalProperties: false
  parameters:
    consentId:
      name: consentId
      in: path
      description: Identificador do consentimento.
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
        minLength: 1
        maxLength: 100
    paymentId:
      name: paymentId
      in: path
      description: Identificador da operação de pagamento.
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
        maxLength: 100
    Authorization:
      name: Authorization
      in: header
      description: Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado
      required: true
      schema:
        type: string
        pattern: \w*\W*
        maxLength: 2048
    xCustomerUserAgent:
      name: x-customer-user-agent
      in: header
      description: Indica o user-agent que o usuário utiliza.
      required: false
      schema:
        type: string
        pattern: \w*\W*
        minLength: 1
        maxLength: 100
    xFapiAuthDate:
      name: x-fapi-auth-date
      in: header
      description: 'Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC'
      required: false
      schema:
        type: string
        pattern: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$'
        minLength: 29
        maxLength: 29
    xFapiCustomerIpAddress:
      name: x-fapi-customer-ip-address
      in: header
      description: O endereço IP do usuário se estiver atualmente logado com o receptor.
      required: false
      schema:
        type: string
        pattern: \w*\W*
        minLength: 1
        maxLength: 100
    xFapiInteractionId:
      name: x-fapi-interaction-id
      in: header
      description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.'
      required: false
      schema:
        type: string
        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
        minLength: 1
        maxLength: 100
    XIdempotencyKey:
      name: x-idempotency-key
      in: header
      description: Cabeçalho HTTP personalizado. Identificador de solicitação exclusivo para suportar a idempotência.
      required: true
      schema:
        type: string
        maxLength: 40
        pattern: ^(?!\s)(.*)(\S)$
    XJwsSignature:
      name: x-jws-signature
      in: header
      description: Cabeçalho contendo uma assinatura JWS separada do corpo do payload.
      required: true
      schema:
        type: string
        pattern: \w*\W*
        maxLength: 2048
  responses:
    BadRequest:
      description: 'A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    Forbidden:
      description: O token tem escopo incorreto ou uma política de segurança foi violada
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    InternalServerError:
      description: Ocorreu um erro no gateway da API ou no microsserviço
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    MethodNotAllowed:
      description: O consumidor tentou acessar o recurso com um método não suportado
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    NotAcceptable:
      description: A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    NotFound:
      description: O recurso solicitado não existe ou não foi implementado
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    TooManyRequests:
      description: 'A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    UnprocessableEntity:
      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    Unauthorized:
      description: Cabeçalho de autenticação ausente/inválido ou token inválido
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    UnsupportedMediaType:
      description: O formato do payload não é um formato suportado.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    201PaymentsConsentsConsentCreated:
      description: Consentimento de pagamento criado com sucesso.
      headers:
        x-fapi-interaction-id:
          schema:
            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePaymentConsent'
    200PaymentsConsentsConsentIdRead:
      description: Dados do consentimento de pagamento obtidos com sucesso.
      headers:
        x-fapi-interaction-id:
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
            maxLength: 100
            description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePaymentConsent'
    201PaymentsInitiationPixPaymentCreated:
      description: Iniciação de pagamento PIX criada com sucesso.
      headers:
        x-fapi-interaction-id:
          schema:
            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePixPayment'
    200PaymentsInitiationPixPaymentIdRead:
      description: Dados de iniciação de pagamento PIX obtidos com sucesso.
      headers:
        x-fapi-interaction-id:
          schema:
            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePixPayment'
