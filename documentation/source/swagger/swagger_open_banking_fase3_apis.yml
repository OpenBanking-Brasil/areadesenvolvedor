openapi: 3.0.0
info:
  title: Fase 3 - APIs do Open Banking Brasil
  description: |
    Na fase 3 do Open Banking Brasil, a iniciação de pagamento permitirá que o cliente solicite um pagamento Pix fora dos canais da detentora de conta através de uma iniciadora de transação de pagamento.  

    A solicitação de pagamento será processada apenas se o cliente consentir na iniciadora, através da API de consentimento fase 3, e autorizar na detentora de conta, por meio de autenticação com credenciais de acesso e confirmação dos dados do pagamento.  

    Diferente da fase 2, o consentimento é dado para cada transação e não pode ser revogado, pois é consumido no momento que a transação é confirmada e processada.  

    O processamento da transação é feito de forma instantânea, não sendo possível agendamentos.

    ###Idempotência
    Segundo a W3C, "um método HTTP idempotente é um método HTTP que pode ser chamado muitas vezes sem resultados diferentes ou efeitos colaterais. Não importa se o método é chamado apenas uma vez ou dez vezes. O resultado deve ser o mesmo. Essencialmente, significa que o resultado de uma solicitação executada com sucesso é independente do número de vezes que ela é executada. Por exemplo, na aritmética, adicionar zero a um número é uma operação idempotente."

    Os conhecidos métodos GET, PUT e DELETE são naturalmente idempotentes, assim como HEAD, OPTIONS e TRACE também são.

    Porém, o método POST requer um tratamento especial para que se torne idempotente e, por estarmos tratando aqui de meios de pagamentos, fazer esse tratamento é algo desejável para que não ocorram acidentes.

    ####Por que é necessário tratarmos a Idempotência do POST?

    Imagine que seja realizado um POST de pagamento e, depois de alguns segundos, é retornada uma mensagem de Timeout. Nesse caso, não é possível saber se o POST foi efetivo e enviar o POST novamente, sem tratar a idempotência, poderá ocasionar em duplicidade de pagamento.

    ####Como mitigarmos esse risco?

    Do lado da iniciadora do pagamento: É necessário que seja enviado o POST com um GUID de Idempotência. Caso o mesmo POST seja reenviado por acidente ou precise ser reenviado, por qualquer motivo que seja, basta reenviar o POST com o mesmo GUID de Idempotência.

    Do lado da detentora da conta: É necessário validar o GUID de Idempotência recebido. Caso tenha recebido o mesmo GUID de Idempotência, a nova mensagem de POST deverá ser descartada.

    Importante reforçar que cada nova transação com POST deverá ter um novo GUID de Idempotência.

    A iniciadora não deve usar comportamento idempotente do POST para pesquisar o status dos recursos.

    ####Conjunto inicial de regras propostas na aplicação da idempotencia:
    - A iniciadora/TPP não deve alterar o corpo da solicitação ao usar a mesma chave de idempotência. Se a iniciadora alterar o corpo da solicitação, a detentora/ASPSP não deve modificar o recurso final. A detentora pode tratar este caso como uma ação fraudulenta.  
    - A detentora não deve criar um novo recurso para uma solicitação POST se estiver determinada como uma solicitação idempotente.  
    - Na criação a detentora deve responder à solicitação com o status atual do recurso (ou um status que seja pelo menos tão atual quanto o que estiver disponível nos canais eletrônicos existentes) e um código de status HTTP 201 (CREATED).  
    - A iniciadora não deve usar comportamento idempotente para pesquisar o status dos recursos.  
    - A detentora pode usar a assinatura da mensagem, junto com a chave de idempotência, para garantir que o corpo da solicitação não seja alterado.  

    ###Diagrama de Sequência
    ![Iniciacao_de_Pagamento](images/sequence-diagrams/iniciacao_de_pagamento.png)
    <a href="images/sequence-diagrams/iniciacao_de_pagamento.png" target="_blank">Download do Diagrama de Sequência</a>

    ###[A deliberar CD] Recomendação uso de pooling
    ####A consulta via GET, para verificar o processamento da transação, pode ser dado a qualquer momento desde que se respeite o rate limit de:  
    - 300 TPS global, 50 TPS por instituição e 8 TPS por endereço IP (Internet Protocol).  
    - Como sugestão, é indicado que a instituição iniciadora do pagamento implemente um retry exponencial.  
  version: 1.0.0-rc1.0
tags:
  - name: API - Consentimento de Iniciação de Pagamentos
    description: |
      |Versão|
      |:-----|
      |1     |

      #### Visão Geral

      A API tem como objetivo coletar o consentimento para iniciação de pagamento entre bancos e instituições financeiras e acessível também à estabelecimentos comerciais participantes do Open Banking Brasil.

      É possível realizar a coleta do consentimento para iniciação de pagamento (não possuindo restrição de uso entre pessoa física e pessoa jurídica) mediante a integração entre as instituições autorizadas.

      #### Especificação em OAS 3.0

      <a href="swagger/swagger_payments_consents_apis.yaml" target="_blank">Download da Especificação (OAS 3.0)</a>  
  - name: API - Iniciação de Pagamentos
    description: |
      |Versão|
      |:-----|
      |1     |

      #### Visão Geral

      A API tem como objetivo permitir a relação entre a iniciadora de transação de pagamento e a instituição detentora de conta para a solicitação de um pagamento pelo Open Banking Brasil.        

      O recurso está disponível para pagadores que possuem vínculo com uma instituição detentora de conta participante do Open Banking, independentemente de serem pessoa física ou jurídica.

      #### Especificação em OAS 3.0

      <a href="swagger/swagger_payments_initiation_apis.yaml" target="_blank">Download da Especificação (OAS 3.0)</a>  
paths:
  /payments-consents/v1/consents:
    post:
      tags:
        - API - Consentimento de Iniciação de Pagamentos
      summary: '[Em Revisão] Criar consentimento para iniciação de pagamento.'
      operationId: paymentsConsentsPostConsents
      description: |
        Método para a criação do consentimento para iniciação de pagamento.

        ### Dicionário de dados

        <a href='dictionary/paymentsConsentsPostConsents_v1.csv' target="_blank">Fazer download do dicionário de dados</a>
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/xFapiAuthDate'
        - $ref: '#/components/parameters/xFapiCustomerIpAddress'
        - $ref: '#/components/parameters/xFapiInteractionId'
        - $ref: '#/components/parameters/xCustomerUserAgent'
        - $ref: '#/components/parameters/XIdempotencyKey'
        - $ref: '#/components/parameters/XJwsSignature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentConsent'
        description: Payload para criação do consentimento para iniciação do pagamento Pix.
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201PaymentsConsentsConsentCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
        - OpenId:
            - openId
            - payments-consents
  '/payments-consents/v1/consents/{consentId}':
    get:
      tags:
        - API - Consentimento de Iniciação de Pagamentos
      summary: '[Em Revisão] Consultar consentimento para iniciação de pagamento.'
      operationId: paymentsConsentsGetConsentsConsentId
      description: |
        Método para consultar o consentimento para iniciação de pagamento.

        ### Dicionário de dados

        <a href='dictionary/paymentsConsentsGetConsentsConsentId_v1.csv' target="_blank">Fazer download do dicionário de dados</a>
      parameters:
        - $ref: '#/components/parameters/consentId'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/xFapiAuthDate'
        - $ref: '#/components/parameters/xFapiCustomerIpAddress'
        - $ref: '#/components/parameters/xFapiInteractionId'
        - $ref: '#/components/parameters/xCustomerUserAgent'
        - $ref: '#/components/parameters/XJwsSignature'
      responses:
        '200':
          $ref: '#/components/responses/200PaymentsConsentsConsentIdRead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
        - OpenId:
            - openId
            - payments-consents
  /payments/v1/pix/payments:
    post:
      tags:
        - API - Iniciação de Pagamentos
      summary: '[Em Revisão] Pix - Criar iniciação de pagamento.'
      operationId: paymentsInitiationPostPixPayments
      description: |
        Método para a criação de uma iniciação de pagamento.

        ### Dicionário de dados

        <a href='dictionary/paymentsInitiationPostPixPayments_v1.csv' target="_blank">Fazer download do dicionário de dados</a>

        ### Status 422 - UnprocessableEntity Messages Pix
        | Code | Title                           | Detail                                                                                                                                               |
        |:----:|:--------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------|
        |  1   | Saldo insuficiente              | Esta conta não possui saldo suficiente para realizar o pagamento.                                                                                    |
        |  2   | Beneficiário incompatível       | O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.                                                                       |
        |  3   | Valor da transação incompatível | O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.                                                         |
        |  4   | Acima do limite estabelecido    | O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente. |
        |  5   | Valor inválido                  | O valor enviado não é válido para o QR Code (ou boleto) informado.                                                                                   |
        |  6   | Cobrança inválida               | Validação de expiração, validação de vencimento, Status Válido.                                                                                      |
        |  7   | Consentimento inválido          | Consentimento inválido status não é Authorised ou está expirado.                                                                                     |
        |  8   | Janela de operação inválida     | Requisição está fora da janela de funcionamento.                                                                                                     |
        | 99   | Desconhecido                    | Não informada pela detentora de conta.                                                                                                               |
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/xFapiAuthDate'
        - $ref: '#/components/parameters/xFapiCustomerIpAddress'
        - $ref: '#/components/parameters/xFapiInteractionId'
        - $ref: '#/components/parameters/xCustomerUserAgent'
        - $ref: '#/components/parameters/XIdempotencyKey'
        - $ref: '#/components/parameters/XJwsSignature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePixPayment'
        description: Payload para criação da iniciação do pagamento Pix.
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201PaymentsInitiationPixPaymentCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntityPixPayments'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
        - OpenId:
            - openId
            - payments-initiation
  '/payments/v1/pix/payments/{paymentId}':
    get:
      tags:
        - API - Iniciação de Pagamentos
      summary: '[Em Revisão] Pix - Consultar iniciação de pagamento.'
      operationId: paymentsInitiationGetPixPayments
      description: |
        Método para consultar uma iniciação de pagamento.

        ### Dicionário de dados

        <a href='dictionary/paymentsInitiationGetPixPayments_v1.csv' target="_blank">Fazer download do dicionário de dados</a>
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/xFapiAuthDate'
        - $ref: '#/components/parameters/xFapiCustomerIpAddress'
        - $ref: '#/components/parameters/xFapiInteractionId'
        - $ref: '#/components/parameters/xCustomerUserAgent'
        - $ref: '#/components/parameters/XJwsSignature'
      responses:
        '200':
          $ref: '#/components/responses/200PaymentsInitiationPixPaymentIdRead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
        - OpenId:
            - openId
            - payments-initiation
components:
  schemas:
    Account:
      type: object
      description: Objeto que contém a identificação de uma conta.
      required:
        - ispb
        - number
        - checkDigit
        - accountType
      properties:
        ispb:
          type: string
          maxLength: 8
          pattern: '^[0-9]{1,8}$'
          example: '12345678'
          description: |
            Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI somente com números.
        branchCode:
          type: string
          maxLength: 4
          pattern: '^\d{4}$'
          example: '1774'
          description: |
            Código da Agência detentora da conta sem digito.  
            (Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  
            no exercício de atividades da instituição, não podendo ser móvel ou transitória).  
            [Restrição] Obrigatório quando tipo de conta for CACC (CONTA_DEPOSITO_A_VISTA) ou SVGS (CONTA_POUPANCA).
        number:
          type: string
          maxLength: 20
          pattern: '^\d{8,20}$'
          example: '1234567890'
          description: 'Número da conta da iniciação de pagamento, sem o dígito.'
        checkDigit:
          type: string
          pattern: \w*\W*
          maxLength: 1
          example: '4'
          description: Dígito da conta da iniciação de pagamento.
        accountType:
          $ref: '#/components/schemas/EnumAccountPaymentsType'
      additionalProperties: false
    CreatePaymentConsent:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          description: Objeto contendo as informações de consentimento para a iniciação de pagamento individual.
          required:
            - creditor
            - payment
          properties:
            creditor:
              $ref: '#/components/schemas/Identification'
            payment:
              $ref: '#/components/schemas/PaymentConsent'
            debtorAccount:
              $ref: '#/components/schemas/Account'
          additionalProperties: false
      additionalProperties: false
    CreatePixPayment:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CreatePixPaymentData'
      additionalProperties: false
    CreatePixPaymentData:
      type: object
      description: Objeto contendo dados do pagamento e do recebedor (creditor).
      required:
        - payment
        - creditor
      properties:
        payment:
          $ref: '#/components/schemas/PaymentPix'
        creditorAccount:
          $ref: '#/components/schemas/Account'
        additionalInfo:
          type: string
          maxLength: 140
          pattern: \w*\W*
          example: Descrição da Transação
          description: |
            Determina um texto a ser apresentado ao pagador para que ele possa digitar uma informação correlata,  
            em formato livre, a ser enviada ao recebedor.
        qrCode:
          type: string
          maxLength: 512
          pattern: \w*\W*
          example: |
            00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012  
            BR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062  
            530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB  
            CD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76
          description: |
            Sequência de caracteres que corresponde ao QR Code disponibilizado para o pagador.  
            É a sequência de caracteres que seria lida pelo leitor de QR Code, e deve propiciar o retorno dos dados do pagador após consulta na DICT.  
            Essa funcionalidade é possível tanto para QR Code estático quanto para QR Code dinâmico.  
            No arranjo do Pix esta é a mesma sequência gerada e/ou lida pela funcionalidade Pix Copia e Cola.  
            Este campo deverá ser no formato UTF-8
        pixKey:
          type: string
          maxLength: 77
          pattern: \w*\W*
          example: ''
          description: |
            Chave DICT do recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.  
            O telefone celular é no padrão E.1641.  
            O E-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.  
            O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços.  
            O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.  
            A chave aleatória deve ser UUID gerado pelo DICT, conforme formato especificado na RFC41223.  
            [Restrição] Obrigatório para pagamentos via Chave.
      additionalProperties: false
    EnumAccountPaymentsType:
      type: string
      maxLength: 4
      enum:
        - CACC
        - SLRY
        - SVGS
        - TRAN
      example: CACC
      description: |
        Tipos de contas usadas para pagamento via Pix.  
        Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  
        conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  
        Segue descrição de cada valor do ENUM para o escopo do Pix.  
        CACC - Current - Conta Corrente.  
        SLRY - Salary - Conta-Salário.  
        SVGS - Savings - Conta de Poupança.  
        TRAN - TransactingAccount - Conta de Pagamento
    EnumPersonType:
      type: string
      maxLength: 15
      enum:
        - PESSOA_NATURAL
        - PESSOA_JURIDICA
      description: |
        Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).
    EnumPaymentType:
      type: string
      maxLength: 3
      enum:
        - PIX
      example: PIX
      description: |
        Este campo define o tipo de pagamento que será iniciado após a autorização do consentimento.
    Identification:
      type: object
      description: Objeto contendo os dados do recebedor (creditor).
      required:
        - personType
        - cpfCnpj
        - name
      properties:
        personType:
          $ref: '#/components/schemas/EnumPersonType'
        cpfCnpj:
          type: string
          maxLength: 14
          pattern: '^\d{11,14}$'
          example: '58764789000137'
          description: |
            Identificação da pessoa envolvida na transação.  
            Preencher com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.  
            O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços.  
            O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.
        name:
          type: string
          maxLength: 140
          pattern: \w*\W*
          example: Marco Antonio de Brito
          description: |
            Em caso de pessoa física, nome completo do titular da conta do recebedor.  
            Em caso de pessoa jurídica, razão social da conta do recebedor.
      additionalProperties: false
    PaymentConsent:
      type: object
      description: Objeto contendo dados de pagamento para consentimento.
      required:
        - type
        - dateTime
        - currency
        - amount
      properties:
        type:
          $ref: '#/components/schemas/EnumPaymentType'
        dateTime:
          type: string
          format: date-time
          maxLength: 20
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
          example: '2021-01-01T00:00:00Z'
          description: |
            Data e hora do pagamento. 
            Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).
        currency:
          type: string
          maxLength: 3
          pattern: '^(\w{3}){1}$'
          example: BRL
          description: |
            Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'. 
            Todos os valores monetários informados estão representados com a moeda vigente do Brasil.
        amount:
          type: number
          format: double
          maxLength: 19
          pattern: '^((\d{1,16}\.\d{2}))$'
          example: 100000.12
          description: |
            Valor da transação a ser efetuada com 2 casas decimais.
      additionalProperties: false
    PaymentPix:
      type: object
      description: Objeto contendo dados do pagameto como moeda e valor.
      required:
        - amount
        - currency
      properties:
        amount:
          type: number
          format: double
          maxLength: 19
          pattern: '^((\d{1,16}\.\d{2}))$'
          example: 100000.12
          description: |
            Valor da iniciação de pagamento em moeda nacional com 2 casas decimais.
        currency:
          type: string
          maxLength: 3
          pattern: '^(\w{3}){1}$'
          example: BRL
          description: |
            Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'.  
            Todos os valores monetários informados estão representados com a moeda vigente do Brasil.
      additionalProperties: false
    ResponseError:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Código de erro específico do endpoint
                type: string
                pattern: \w*\W*
                maxLength: 255
              title:
                description: Título legível por humanos deste erro específico
                type: string
                pattern: \w*\W*
                maxLength: 255
              detail:
                description: Descrição legível por humanos deste erro específico
                type: string
                pattern: \w*\W*
                maxLength: 2048
            additionalProperties: false
        meta:
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    ResponsePaymentConsent:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          description: Objeto contendo as informações de resposta do consentimento para a iniciação de pagamento individual.
          required:
            - consentId
            - statusUpdateDateTime
            - creationDateTime
            - status
            - creditor
            - payment
            - debtor
          properties:
            consentId:
              type: string
              pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
              minLength: 1
              maxLength: 100
              example: C1DD33123
              description: |
                Identificador único do consentimento criado para a iniciação de pagamento solicitada.
            creationDateTime:
              description: 'Data e hora em que o consentimento foi criado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).'
              type: string
              format: date-time
              example: '2021-05-21T08:30:00Z'
              pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
              maxLength: 20
            statusUpdateDateTime:
              type: string
              format: date-time
              example: '2021-05-21T08:30:00Z'
              pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
              maxLength: 20
              description: |
                Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).
            status:
              type: string
              maxLength: 22
              enum:
                - AWAITING_AUTHORISATION
                - AUTHORISED
                - REJECTED
                - CONSUMED
              example: AUTHORISED
              description: |
                Retorna o estado do consentimento que no momento de sua criação será AWAITING_AUTHORISATION.
                Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) para AUTHORISED ou REJECTED. 
                O consentimento fica no estado CONSUMED após ocorrer a iniciação do pagamento referente ao consentimento.
                1. AWAITING_AUTHORISATION - Aguardando autorização
                2. AUTHORISED - Autorizado
                3. REJECTED - Rejeitado
                4. CONSUMED - Consumido
            creditor:
              $ref: '#/components/schemas/Identification'
            payment:
              $ref: '#/components/schemas/PaymentConsent'
            debtorAccount:
              $ref: '#/components/schemas/Account'
          additionalProperties: false
      additionalProperties: false
    ResponsePixPayment:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ResponsePixPaymentData'
      additionalProperties: false
    ResponsePixPaymentData:
      type: object
      description: Objeto contendo dados do pagamento e da conta do recebedor (creditor).
      required:
        - paymentId
        - consentId
        - creationDateTime
        - updatedDateTime
        - status
        - payment
        - creditor
      properties:
        paymentId:
          type: string
          maxLength: 36
          pattern: '^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$'
          example: 8f800dc8-bc8a-4c0e-b5e6-3c6801cfe135
          description: |
            Código ou identificador único informado pela instituição que mantém a conta para representar  
            a iniciação de pagamento individual.  
            Esse identificador deve ser usado para consultar o status da iniciação de pagamento.
        endToEndId:
          type: string
          maxLength: 36
          pattern: '^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$'
          example: a9ae654d-e531-4a8b-a926-952d664de203
          description: |
            Identificador fim a fim da transação. O termo "E2E" que identifica a transação de forma única dentro do arranjo.  
            Esse identificador deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.  
            [Restrição] É obrigatório o retorno após o status "ACCEPTED_SETTLEMENT_IN_PROCESS".
        consentId:
          type: string
          maxLength: 36
          pattern: '^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$'
          example: 3a782761-9573-4e1f-b4d1-4c798955c0b8
          description: |
            Identificador único do consentimento criado para a iniciação de pagamento solicitada.
        creationDateTime:
          type: string
          format: date-time
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$|^NA$'
          example: '2020-07-21T08:30:00Z'
          description: |
            Data e hora em que o recurso foi criado.  
            Uma string com data e hora conforme especificação RFC-3339,  
            sempre com a utilização de timezone UTC(UTC time format).
        updatedDateTime:
          type: string
          format: date-time
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$|^NA$'
          example: '2020-07-21T08:30:00Z'
          description: |
            Data e hora da ultima atualização da iniciação de pagamento.  
            Uma string com data e hora conforme especificação RFC-3339,  
            sempre com a utilização de timezone UTC(UTC time format).
        pixKey:
          type: string
          maxLength: 77
          pattern: \w*\W*
          example: '12345678901'
          description: |
            Chave DICT do recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.  
            O telefone celular usará o padrão E.1641.  
            O E-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.  
            O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços.  
            O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.  
            A chave aleatória deve ser UUID gerado pelo DICT, conforme formato especificado na RFC41223.  
            [Restrição] Obrigatório para pagamentos via Chave.
        qrCode:
          type: string
          maxLength: 512
          pattern: \w*\W*
          example: |
            00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012  
            BR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062  
            530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB  
            CD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76
          description: |
            Sequência de caracteres que corresponde ao QR Code disponibilizado para o pagador.  
            É a sequência de caracteres que seria lida pelo leitor de QR Code, e deve propiciar o retorno dos dados do pagador após consulta na DICT.  
            Essa funcionalidade é possível tanto para QR Code estático quanto para QR Code dinâmico.  
            No arranjo do Pix esta é a mesma sequência gerada e/ou lida pela funcionalidade Pix Copia e Cola.  
            Este campo deverá ser no formato UTF-8
        status:
          type: string
          maxLength: 45
          enum:
            - PDNG
            - PART
            - ACSP
            - ACSC
            - ACCC
            - RJCT
          example: PDNG
          description: |
            Estado atual da iniciação de pagamento. O estado evolui na seguinte ordem:  
            1. PDNG (PENDING) - Iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.  
            2. PART (PARTIALLY ACCEPTED) - Aguardando autorização múltipla alçada.  
            3. ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Iniciação de pagamento aceita e processamento do pagamento foi iniciado.  
            4. ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Débito realizado na conta do pagador.  
            5. ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Crédito realizado na instituição de destino.  

            Em caso insucesso:  
            RJCT (REJECTED) - Instrução de pagamento rejeitada.
        rejectionReason:
          type: string
          maxLength: 4
          enum:
            - AB03
            - AB09
            - AB11
            - AC03
            - AC06
            - AC07
            - AC14
            - AG03
            - AG12
            - AG13
            - AGNT
            - AM01
            - AM02
            - AM04
            - AM09
            - AM12
            - AM18
            - BE01
            - BE15
            - BE17
            - CH11
            - CH16
            - DS04
            - DS0G
            - DS0H
            - DS27
            - DT02
            - DT05
            - ED05
            - FF07
            - FF08
            - RC09
            - RC10
            - RR4
            - SL02
          example: DS27
          description: "Motivo\_da\_rejeição\_do\_pagamento.\_Informações\_complementares\_sobre\_o\_motivo\_do\_status.  \nAB03\_(ABORTED_SETTLEMENT_TIMEOUT)\_-\_Liquidação\_da\_transação\_interrompida\_devido\_a\_timeout\_no\_SPI.\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_  \nAB09\_(ERROR_CREDITOR_AGENT)\_-\_Transação\_interrompida\_devido\_a\_erro\_no\_participante\_do\_usuário\_recebedor.  \nAB11\_(TIMEOUT_DEBTOR_AGENT)\_-\_Timeout\_do\_participante\_emissor\_da\_ordem\_de\_pagamento.  \nAC03\_(INVALID_CREDITOR_ACCOUNT_NUMBER)\_-\_Número\_da\_conta\_transacional\_do\_usuário\_recebedor\_inexistente\_ou\_inválido.  \nAC06\_(BLOCKED_ACCOUNT)\_-\_Conta\_transacional\_do\_usuário\_recebedor\_encontra-se\_bloqueada.  \nAC07\_(CLOSED_CREDITOR_ACCOUNT_NUMBER)\_-\_Número\_da\_conta\_transacional\_do\_usuário\_recebedor\_encerrada.  \nAC14\_(INVALID_CREDITOR_ACCOUNTTYPE)\_-\_Tipo\_incorreto\_para\_a\_conta\_transacional\_do\_usuário\_recebedor.    AG03\_(TRANSACTION_NOT_SUPPORTED)\_-\_Tipo\_de\_transação\_não\_é\_suportado/autorizado\_na\_conta\_transacional\_do\_usuário\_recebedor.\_Exemplo:\_transferência\_para\_conta\_salário.  \nAG12\_(NOT_ALLOWED_BOOK_TRANSFER)\_-\_Não\_é\_permitida\_ordem\_de\_pagamento/devolução\_no\_SPI\_cujos\_recursos\_sejam\_transferidos\_de\_uma\_conta\_transacional\_para\_outra\_em\_uma\_mesma\_instituição\_participante\_ou\_entre\_participantes\_que\_utilizem\_o\_serviço\_de\_liquidação\_de\_um\_mesmo\_participante\_liquidante\_no\_SPI\_(booktransfer).  \nAG13\_(FORBIDDEN_RETURN_PAYMENT)\_-\_Não\_é\_permitido\_devolver\_a\_devolução\_de\_um\_pagamento\_instantâneo.  \nAGNT\_(INCORRECT_AGENT)\_-\_Participante\_direto\_não\_é\_liquidante\_do\_participante\_do\_usuário\_pagador\_/\_participante\_do\_usuário\_recebedor.  \nAM01\_(ZERO_AMOUNT)\_-\_Ordem\_de\_pagamento\_instantâneo\_com\_valor\_zero.  \nAM02\_(NOT_ALLOWED_AMOUNT)\_-\_Ordem\_de\_pagamento/devolução\_em\_valor\_que\_faz\_superar\_o\_limite\_permitido\_para\_o\_tipo\_de\_conta\_transacional\_creditada.  \nAM04\_(INSUFFICIENT_FUNDS)\_-\_Saldo\_insuficiente\_na\_conta\_PI\_do\_participante\_do\_usuário\_pagador.  \nAM09\_(WRONG_AMOUNT)\_-\_Devolução\_de\_pagamento\_em\_valor\_que\_faz\_superar\_o\_valor\_da\_ordem\_de\_pagamento\_instantâneo\_correspondente.  \nAM12\_(INVALID_AMOUNT)\_-\_Divergência\_entre\_a\_somatória\_dos\_valores\_do\_bloco\_‘valorDoDinheiroOuCompra’\_e\_o\_campo\_‘valor’.  \nAM18\_(INVALID_NUMBER_OF_TRANSACTIONS)\_-\_Quantidade\_de\_transações\_inválida.  \nBE01\_(INCONSISTENT_WITH_END_CUSTOMER)\_-\_CPF/CNPJ\_do\_usuário\_recebedor\_não\_é\_consistente\_com\_o\_titular\_da\_conta\_transacional\_especificada.  \nBE15\_(INVALID_IDENTIFICATION_CODE)\_-\_Código\_de\_situação\_de\_pagamento\_ou\_de\_erro\_inválido.  \nBE17\_(INVALID_CREDITOR_IDENTIFICATION_CODE)\_-\_QR\_Code\_rejeitado\_pelo\_participante\_do\_usuário\_recebedor.  \nCH11\_(CREDITOR_IDENTIFIER_INCORRECT)\_-\_CPF/CNPJ\_do\_usuário\_recebedor\_incorreto.  \nCH16\_(ELEMENT_CONTENT_FORMALLY_INCORRECT)\_-\_Elemento\_da\_mensagem\_incorreto.  \nDS04\_(ORDER_REJECTED)\_-\_Ordem\_rejeitada\_pelo\_participante\_do\_usuário\_recebedor.  \nDS0G\_(NOT_ALLOWED_PAYMENT)\_-\_Participante\_que\_assinou\_a\_mensagem\_não\_é\_autorizado\_a\_realizar\_a\_operação\_na\_conta\_PI\_debitada.\_No\_caso\_em\_que\_o\_participante\_que\_assinou\_a\_mensagem\_não\_é\_o\_titular\_da\_conta\_PI\_debitada\_nem\_é\_o\_liquidante\_no\_SPI\_do\_participante\_do\_usuário\_pagador.  \nDS0H\_(NOT_ALLOWED_ACCOUNT)\_-\_ISPB\_do\_participante\_que\_submeteu\_a\_resposta\_à\_ordem\_de\_pagamento/devolução\_diferente\_do\_ISPB\_do\_participante\_creditado\_pela\_ordem.  \nDS27\_(USER_NOT_YET_ACTIVATED)\_-\_Participante\_não\_se\_encontra\_cadastrado\_ou\_ainda\_não\_iniciou\_a\_operação\_no\_SPI.  \nDT02\_(INVALID_CREATION_DATE)\_-\_Data\_e\_Hora\_do\_envio\_da\_mensagem\_inválida.  \nDT05\_(INVALID_CUT_OFF_DATE)\_-\_Transação\_extrapola\_o\_prazo\_máximo\_para\_devolução\_de\_pagamento\_instantâneo\_regulamentado\_pelo\_Arranjo\_Pix.  \nED05\_(SETTLEMENT_FAILED)\_-\_Erro\_no\_processamento\_do\_pagamento\_instantâneo.  \nFF07\_(INVALID_PURPOSE)\_-\_Inconsistência\_entre\_a\_finalidade\_da\_transação\_e\_o\_preenchimento\_do\_bloco\_elementos\_Structured.  \nFF08\_(INVALID_END_TO_END_ID)\_-\_Identificador\_da\_operação\_mal\_formatado.  \nRC09\_(INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER)\_-\_ISPB\_do\_participante\_do\_usuário\_pagador\_inválido\_ou\_inexistente.  \nRC10\_(INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER)\_-\_ISPB\_do\_participante\_do\_usuário\_recebedor\_inválido\_ou\_inexistente.  \nRR4\_\_(REGULATORY_REASON)\_-\_Ordem\_de\_pagamento\_em\_que\_o\_usuário\_pagador\_é\_sancionado\_por\_resolução\_do\_Conselho\_de\_Segurança\_das\_Nações\_Unidas\_(CSNU).\_Nos\_casos\_em\_que\_o\_usuário\_recebedor\_for\_o\_sancionado,\_a\_ordem\_de\_pagamento\_não\_deve\_ser\_rejeitada.  \nSL02\_(SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT)\_-\_A\_transação\_original\_não\_está\_relacionada\_ao\_serviço\_de\_Saque\_Pix.  \n[Restrição]\_Esse\_motivo\_deverá\_ser\_enviado\_quando\_o\_campo\_/data/status\_for\_igual\_a\_RJCT\_(REJECTED).  \n"
        payment:
          $ref: '#/components/schemas/PaymentPix'
        additionalInfo:
          type: string
          maxLength: 140
          pattern: \w*\W*
          example: Descrição da Transação
          description: |
            Descrição do pagamento, em formato livre, feito pelo pagador.
        creditorAccount:
          $ref: '#/components/schemas/Account'
      additionalProperties: false
    Links:
      type: object
      description: Referências para outros recusos da API requisitada.
      required:
        - self
      properties:
        self:
          type: string
          format: uri
          maxLength: 2000
          description: URI completo que gerou a resposta atual.
          example: 'https://api.banco.com.br/open-banking/api/v1/resource'
          pattern: '^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
        first:
          type: string
          format: uri
          maxLength: 2000
          description: URI da primeira página que originou essa lista de resultados. Restrição - Obrigatório quando não for a primeira página da resposta
          example: 'https://api.banco.com.br/open-banking/api/v1/resource'
          pattern: '^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
        prev:
          type: string
          format: uri
          maxLength: 2000
          description: "URI da página anterior dessa lista de resultados. Restrição - \tObrigatório quando não for a primeira página da resposta"
          example: 'https://api.banco.com.br/open-banking/api/v1/resource'
          pattern: '^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
        next:
          type: string
          format: uri
          maxLength: 2000
          description: URI da próxima página dessa lista de resultados. Restrição - Obrigatório quando não for a última página da resposta
          example: 'https://api.banco.com.br/open-banking/api/v1/resource'
          pattern: '^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
        last:
          type: string
          format: uri
          maxLength: 2000
          description: URI da última página dessa lista de resultados. Restrição - Obrigatório quando não for a última página da resposta
          example: 'https://api.banco.com.br/open-banking/api/v1/resource'
          pattern: '^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
      additionalProperties: false
    Meta:
      type: object
      description: Meta informações referente a API requisitada.
      required:
        - totalRecords
        - totalPages
        - requestDateTime
      properties:
        totalRecords:
          type: integer
          format: int32
          description: Número total de registros no resultado
          example: 1
        totalPages:
          type: integer
          format: int32
          description: Número total de páginas no resultado
          example: 1
        requestDateTime:
          description: 'Data e hora da consulta, conforme especificação RFC-3339, formato UTC.'
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
      additionalProperties: false
  parameters:
    consentId:
      name: consentId
      in: path
      description: Identificador do consentimento.
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
        minLength: 1
        maxLength: 100
    paymentId:
      name: paymentId
      in: path
      description: Identificador da operação de pagamento.
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
        maxLength: 100
    Authorization:
      name: Authorization
      in: header
      description: Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado
      required: true
      schema:
        type: string
        pattern: \w*\W*
        maxLength: 2048
    xCustomerUserAgent:
      name: x-customer-user-agent
      in: header
      description: Indica o user-agent que o usuário utiliza.
      required: false
      schema:
        type: string
        pattern: \w*\W*
        minLength: 1
        maxLength: 100
    xFapiAuthDate:
      name: x-fapi-auth-date
      in: header
      description: 'Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC'
      required: false
      schema:
        type: string
        pattern: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$'
        minLength: 29
        maxLength: 29
    xFapiCustomerIpAddress:
      name: x-fapi-customer-ip-address
      in: header
      description: O endereço IP do usuário se estiver atualmente logado com o receptor.
      required: false
      schema:
        type: string
        pattern: \w*\W*
        minLength: 1
        maxLength: 100
    xFapiInteractionId:
      name: x-fapi-interaction-id
      in: header
      description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.'
      required: false
      schema:
        type: string
        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
        minLength: 1
        maxLength: 100
    XIdempotencyKey:
      name: x-idempotency-key
      in: header
      description: Cabeçalho HTTP personalizado. Identificador de solicitação exclusivo para suportar a idempotência.
      required: true
      schema:
        type: string
        maxLength: 40
        pattern: ^(?!\s)(.*)(\S)$
    XJwsSignature:
      name: x-jws-signature
      in: header
      description: Cabeçalho contendo uma assinatura JWS separada do corpo do payload.
      required: true
      schema:
        type: string
        pattern: \w*\W*
        maxLength: 2048
  responses:
    BadRequest:
      description: 'A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    Forbidden:
      description: O token tem escopo incorreto ou uma política de segurança foi violada
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    InternalServerError:
      description: Ocorreu um erro no gateway da API ou no microsserviço
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    MethodNotAllowed:
      description: O consumidor tentou acessar o recurso com um método não suportado
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    NotAcceptable:
      description: A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    NotFound:
      description: O recurso solicitado não existe ou não foi implementado
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    TooManyRequests:
      description: 'A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    UnprocessableEntity:
      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    UnprocessableEntityPixPayments:
      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
          examples:
            Saldo insuficiente:
              summary: Saldo insuficiente
              value:
                errors:
                  - code: '1'
                    title: Saldo insuficiente
                    detail: Esta conta não possui saldo suficiente para realizar o pagamento.
                meta:
                  totalRecords: 1
                  totalPages: 1
                  requestDateTime: '2021-05-21T08:30:00Z'
            Beneficiário incompatível:
              summary: Beneficiário incompatível
              value:
                errors:
                  - code: '2'
                    title: Beneficiário incompatível
                    detail: O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.
                meta:
                  totalRecords: 1
                  totalPages: 1
                  requestDateTime: '2021-05-21T08:30:00Z'
            Valor da transação incompatível:
              summary: Valor incompatível
              value:
                errors:
                  - code: '3'
                    title: Valor da transação incompatível
                    detail: O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.
                meta:
                  totalRecords: 1
                  totalPages: 1
                  requestDateTime: '2021-05-21T08:30:00Z'
            Acima do limite estabelecido:
              summary: Acima limite estabelecido
              value:
                errors:
                  - code: '4'
                    title: Limite acima do limite estabelecido
                    detail: O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.
                meta:
                  totalRecords: 1
                  totalPages: 1
                  requestDateTime: '2021-05-21T08:30:00Z'
            Valor inválido:
              summary: Valor inválido
              value:
                errors:
                  - code: '5'
                    title: Valor inválido
                    detail: O valor enviado não é válido para o QR Code (ou boleto) informado.
                meta:
                  totalRecords: 1
                  totalPages: 1
                  requestDateTime: '2021-05-21T08:30:00Z'
            Cobrança inválida:
              summary: Cobrança inválida
              value:
                errors:
                  - code: '6'
                    title: Cobrança inválida
                    detail: 'Validação de expiração, validação de vencimento, Status Válido.'
                meta:
                  totalRecords: 1
                  totalPages: 1
                  requestDateTime: '2021-05-21T08:30:00Z'
            Consentimento inválido:
              summary: Consentimento inválido
              value:
                errors:
                  - code: '7'
                    title: Consentimento inválido
                    detail: Consentimento inválido status não é Authorised ou está expirado.
                meta:
                  totalRecords: 1
                  totalPages: 1
                  requestDateTime: '2021-05-21T08:30:00Z'
            Janela de operação inválida:
              summary: Janela inválida
              value:
                errors:
                  - code: '8'
                    title: Janela de operação inválida
                    detail: Requisição está fora da janela de funcionamento.
                meta:
                  totalRecords: 1
                  totalPages: 1
                  requestDateTime: '2021-05-21T08:30:00Z'
            Desconhecido:
              summary: Desconhecido
              value:
                errors:
                  - code: '99'
                    title: Desconhecido
                    detail: Não informada pela detentora de conta.
                meta:
                  totalRecords: 1
                  totalPages: 1
                  requestDateTime: '2021-05-21T08:30:00Z'
    Unauthorized:
      description: Cabeçalho de autenticação ausente/inválido ou token inválido
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    UnsupportedMediaType:
      description: O formato do payload não é um formato suportado.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    201PaymentsConsentsConsentCreated:
      description: Consentimento de pagamento criado com sucesso.
      headers:
        x-fapi-interaction-id:
          schema:
            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePaymentConsent'
    200PaymentsConsentsConsentIdRead:
      description: Dados do consentimento de pagamento obtidos com sucesso.
      headers:
        x-fapi-interaction-id:
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
            maxLength: 100
            description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePaymentConsent'
    201PaymentsInitiationPixPaymentCreated:
      description: Iniciação de pagamento Pix criada com sucesso.
      headers:
        x-fapi-interaction-id:
          schema:
            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePixPayment'
    200PaymentsInitiationPixPaymentIdRead:
      description: Dados de iniciação de pagamento Pix obtidos com sucesso.
      headers:
        x-fapi-interaction-id:
          schema:
            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePixPayment'
