openapi: 3.0.0
info:
  title: API Payments Consents - Open Banking Brasil
  description: |
    API que trata do consentimento das operações de pagamentos para o Open Banking Brasil.

    # Permissions necessárias para a API Payments Consents

    Para cada um dos paths desta API, além dos escopos (`scopes`) indicados existem `permissions` que deverão ser observadas:

    ### /payments/consents
      - permissions:
        - POST: **PAYMENTS_CONSENTS_CREATE**
    ### /payments/consents/{consentId}
      - permissions:
        - GET: **PAYMENTS_CONSENTS_READ**
  version: 1.0.0-rc1.0
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  contact:
    name: Governança do Open Banking Brasil – Interfaces
    email: gt-interfaces@openbankingbr.org
    url: 'https://openbanking-brasil.github.io/areadesenvolvedor/'
servers:
  - url: 'https://api.banco.com.br/open-banking/payments-consents/v1'
    description: Servidor de Produção
  - url: 'https://apih.banco.com.br/open-banking/payments-consents/v1'
    description: Servidor de Homologação
tags:
  - name: Payments Consents
paths:
  /consents:
    post:
      tags:
        - Payments Consents
      summary: Criar consentimento de pagamento.
      operationId: paymentsConsentsPostConsents
      description: Método para criar um consentimento de pagamento.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/xFapiAuthDate'
        - $ref: '#/components/parameters/xFapiCustomerIpAddress'
        - $ref: '#/components/parameters/xFapiInteractionId'
        - $ref: '#/components/parameters/xCustomerUserAgent'
        - $ref: '#/components/parameters/XIdempotencyKey'
        - $ref: '#/components/parameters/XJwsSignature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentConsent'
        description: Payload para criação do consentimento para iniciação do pagamento.
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201PaymentsConsentsConsentCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
        - OpenId:
            - openId
            - payments-consents
  '/consents/{consentId}':
    get:
      tags:
        - Payments Consents
      summary: Consultar consentimento de pagamento.
      operationId: paymentsConsentsGetConsentsConsentId
      description: Método para consultar um consentimento de pagamento.
      parameters:
        - $ref: '#/components/parameters/consentId'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/xFapiAuthDate'
        - $ref: '#/components/parameters/xFapiCustomerIpAddress'
        - $ref: '#/components/parameters/xFapiInteractionId'
        - $ref: '#/components/parameters/xCustomerUserAgent'
        - $ref: '#/components/parameters/XJwsSignature'
      responses:
        '200':
          $ref: '#/components/responses/200PaymentsConsentsConsentIdRead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
        - OpenId:
            - openId
            - payments-consents
components:
  schemas:
    CreatePaymentConsent:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CreatePaymentConsentData'
      additionalProperties: false
    CreatePaymentConsentData:
      type: object
      description: Objeto contendo as informações de consentimento para a iniciação de pagamento individual.
      required:
        - creditor
        - payment
        - debtor
      properties:
        creditor:
          $ref: '#/components/schemas/Creditor'
        payment:
          $ref: '#/components/schemas/PaymentConsent'
        debtor:
          $ref: '#/components/schemas/Account'
      additionalProperties: false
    ResponsePaymentConsent:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ResponsePaymentConsentData'
      additionalProperties: false
    ResponsePaymentConsentData:
      type: object
      description: Objeto contendo as informações de resposta do consentimento para a iniciação de pagamento individual.
      required:
        - consentId
        - status
        - creditor
        - payment
        - debtor
      properties:
        consentId:
          type: string
          maxLength: 36
          pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
          example: 8d886d81-3a1f-48d2-bc15-a19f1f777867
          description: |
            Identificador único do consentimento.
        status:
          type: string
          maxLength: 22
          enum:
            - AUTHORISED
            - AWAITING_AUTHORISATION
            - REJECTED
            - REVOKED
          example: AUTHORISED
          description: Status do Consentimento para iniciação de pagamento.
        creditor:
          $ref: '#/components/schemas/Creditor'
        payment:
          $ref: '#/components/schemas/PaymentConsent'
        debtor:
          $ref: '#/components/schemas/Account'
      additionalProperties: false
    PaymentConsent:
      type: object
      description: Objeto contendo os dados de pagamento para consentimento.
      required:
        - type
        - dateTime
        - currency
        - amount
      properties:
        type:
          type: string
          maxLength: 3
          description: |
            Tipos de pagamentos permitidos pelo Open Banking Brasil.
          enum:
            - PIX
          example: PIX
        dateTime:
          type: string
          format: date-time
          maxLength: 20
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
          example: '2021-01-01T00:00:00Z'
          description: |
            Data e hora do consentimento. 
            Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).
        currency:
          type: string
          maxLength: 3
          pattern: '^(\w{3}){1}$'
          example: BRL
          description: |
            Moeda referente ao valor monetário informado, segundo modelo ISO-4217. p.ex. 'BRL' 
            Todos os valores monetários informados estão representados com a moeda vigente do Brasil.
        amount:
          type: number
          format: double
          maxLength: 19
          pattern: '^((\d{1,16}\.\d{2}))$'
          example: 100000.12
          description: |
            Valor da transação efetuada e convertida em moeda nacional com 2 casas decimais.
      additionalProperties: false
    Account:
      type: object
      description: Objeto que contém os dados da conta que devem ser usados para a iniciação de pagamento.
      required:
        - ispb
        - number
        - checkDigit
        - accountType
      properties:
        ispb:
          type: number
          maxLength: 8
          pattern: '^[0-9]{1,8}$'
          example: 12345678
          description: |
            Identificador do Sistema de Pagamentos Brasileiros.
            Código que define instituições participantes do Sistema de Transferência de Reservas (STR).
        branchCode:
          type: string
          maxLength: 4
          pattern: '^(\w{4}){1}$'
          example: '1774'
          description: |
            Código da Agência detentora da conta.
            Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito, 
            no exercício de atividades da instituição, não podendo ser móvel ou transitória.
            [Restrição] Obrigatório quando tipo de conta for CACC (CONTA_DEPOSITO_A_VISTA) ou SVGS (CONTA_POUPANCA).
        number:
          type: string
          maxLength: 20
          pattern: '^\d{8,20}$'
          example: '1234567890'
          description: Número da conta.
        checkDigit:
          type: string
          maxLength: 4
          pattern: '^(\w{4}){1}$'
          example: '1234'
          description: Dígito da conta.
        accountType:
          $ref: '#/components/schemas/EnumAccountPaymentsType'
      additionalProperties: false
    Creditor:
      type: object
      description: Objeto contendo os dados do recebedor (creditor).
      required:
        - personType
        - cpfCnpj
        - name
      properties:
        personType:
          type: string
          description: |
            Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).
          enum:
            - PESSOA_NATURAL
            - PESSOA_JURIDICA
        cpfCnpj:
          type: string
          maxLength: 14
          pattern: '^\d{11,14}$'
          example: '58764789000137'
          description: |
            Identificação da pessoa envolvida na transação. 
            Preencher com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.
            O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços. 
            O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.
        name:
          type: string
          maxLength: 80
          pattern: \w*\W*
          example: Marco Antonio de Brito
          description: Nome relacionado à Pessoa Natural ou Pessoa jurídica.
      additionalProperties: false
    ResponseError:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                description: Código de erro específico do endpoint
                type: string
                pattern: \w*\W*
                maxLength: 255
              title:
                description: Título legível por humanos deste erro específico
                type: string
                pattern: \w*\W*
                maxLength: 255
              detail:
                description: Descrição legível por humanos deste erro específico
                type: string
                pattern: \w*\W*
                maxLength: 2048
            additionalProperties: false
        meta:
          type: object
          description: Meta informações referente a API requisitada.
          required:
            - totalRecords
            - totalPages
            - requestDateTime
          properties:
            totalRecords:
              type: integer
              format: int32
              description: Número total de registros no resultado
              example: 1
            totalPages:
              type: integer
              format: int32
              description: Número total de páginas no resultado
              example: 1
            requestDateTime:
              description: 'Data e hora da consulta, conforme especificação RFC-3339, formato UTC.'
              type: string
              maxLength: 20
              format: date-time
              example: '2021-05-21T08:30:00Z'
          additionalProperties: false
      additionalProperties: false
    EnumAccountPaymentsType:
      type: string
      maxLength: 4
      enum:
        - CACC
        - SLRY
        - SVGS
        - TRAN
      description: |
        Tipos de contas usadas para pagamento via PIX. Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas, conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.
        Segue descrição de cada valor do ENUM para o escopo do Open Banking Brasil.
        CACC - Current (CONTA_DEPOSITO_A_VISTA)
        SLRY - Salary (CONTA_SALARIO)
        SVGS - Savings (CONTA_POUPANCA)
        TRAN - TransactingAccount (CONTA_PAGAMENTO_PRE_PAGA)
      example: CACC
  parameters:
    consentId:
      name: consentId
      in: path
      description: Identificador do consentimento.
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
        minLength: 1
        maxLength: 100
    Authorization:
      name: Authorization
      in: header
      description: Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado
      required: true
      schema:
        type: string
        pattern: \w*\W*
        maxLength: 2048
    xCustomerUserAgent:
      name: x-customer-user-agent
      in: header
      description: Indica o user-agent que o usuário utiliza.
      required: false
      schema:
        type: string
        pattern: \w*\W*
        minLength: 1
        maxLength: 100
    xFapiAuthDate:
      name: x-fapi-auth-date
      in: header
      description: 'Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC'
      required: false
      schema:
        type: string
        pattern: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$'
        minLength: 29
        maxLength: 29
    xFapiCustomerIpAddress:
      name: x-fapi-customer-ip-address
      in: header
      description: O endereço IP do usuário se estiver atualmente logado com o receptor.
      required: false
      schema:
        type: string
        pattern: \w*\W*
        minLength: 1
        maxLength: 100
    xFapiInteractionId:
      name: x-fapi-interaction-id
      in: header
      description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.'
      required: false
      schema:
        type: string
        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
        minLength: 1
        maxLength: 100
    XIdempotencyKey:
      name: x-idempotency-key
      in: header
      description: Cabeçalho HTTP personalizado. Identificador de solicitação exclusivo para suportar a idempotência.
      required: true
      schema:
        type: string
        maxLength: 40
        pattern: ^(?!\s)(.*)(\S)$
    XJwsSignature:
      name: x-jws-signature
      in: header
      description: Cabeçalho contendo uma assinatura JWS separada do corpo do payload.
      required: true
      schema:
        type: string
        pattern: \w*\W*
        maxLength: 2048
  securitySchemes:
    OpenId:
      type: openIdConnect
      openIdConnectUrl: 'https://authserver.example/.well-known/openid-configuration'
  responses:
    BadRequest:
      description: 'A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    Forbidden:
      description: O token tem escopo incorreto ou uma política de segurança foi violada
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    InternalServerError:
      description: Ocorreu um erro no gateway da API ou no microsserviço
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    MethodNotAllowed:
      description: O consumidor tentou acessar o recurso com um método não suportado
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    NotAcceptable:
      description: A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    NotFound:
      description: O recurso solicitado não existe ou não foi implementado
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    TooManyRequests:
      description: 'A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    UnprocessableEntity:
      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    Unauthorized:
      description: Cabeçalho de autenticação ausente/inválido ou token inválido
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    UnsupportedMediaType:
      description: O formato do payload não é um formato suportado.
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/ResponseError'
    201PaymentsConsentsConsentCreated:
      description: Consentimento de pagamento criado com sucesso.
      headers:
        x-fapi-interaction-id:
          schema:
            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePaymentConsent'
    200PaymentsConsentsConsentIdRead:
      description: Dados do consentimento de pagamento obtidos com sucesso.
      headers:
        x-fapi-interaction-id:
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
            maxLength: 100
            description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponsePaymentConsent'
