type: object
description: Objeto contendo dados do pagamento e da conta do recebedor (creditor).
required:
  - paymentId
  - consentId
  - creationDateTime
  - statusUpdateDateTime
  - status
  - localInstrument
  - payment
  - creditorAccount
  - cnpjInitiator
properties:
  paymentId:
    type: string
    minLength: 1
    maxLength: 100
    pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$
    example: TXpRMU9UQTROMWhZV2xSU1FUazJSMDl
    description: |
      Código ou identificador único informado pela instituição detentora da conta para representar
      a iniciação de pagamento individual. O `paymentId` deve ser diferente do `endToEndId`.
      Este é o identificador que deverá ser utilizado na consulta ao status da iniciação de pagamento efetuada.
  endToEndId:
    $ref: ../business_commons/EndToEndId.yaml
  consentId:
    type: string
    maxLength: 256
    pattern: ^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*'%\/?#]+$
    example: urn:bancoex:C1DD33123
    description: |
      Identificador único do consentimento criado para a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.
      Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource
      Identifier - URI - que é atribuído sob o URI scheme "urn" e um namespace URN específico, com a intenção de que o URN
      seja um identificador de recurso persistente e independente da localização.
      Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:
      - o namespace(urn)
      - o identificador associado ao namespace da instituição transnmissora (bancoex)
      - o identificador específico dentro do namespace (C1DD33123).
      Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).
  creationDateTime:
    type: string
    format: date-time
    pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
    example: '2020-07-21T08:30:00Z'
    description: |
      Data e hora em que o recurso foi criado.
      Uma string com data e hora conforme especificação RFC-3339,
      sempre com a utilização de timezone UTC(UTC time format).
  statusUpdateDateTime:
    type: string
    format: date-time
    pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
    example: '2020-07-21T08:30:00Z'
    description: |
      Data e hora da última atualização da iniciação de pagamento.
      Uma string com data e hora conforme especificação RFC-3339,
      sempre com a utilização de timezone UTC(UTC time format).
  proxy:
    type: string
    maxLength: 77
    pattern: '[\w\W\s]*'
    example: '12345678901'
    description: |
      Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.
      No caso de telefone celular deve ser informado no padrão E.1641.
      Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.
      No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.
      Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.
      No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.
      Se informado, a detentora da conta deve validar o proxy no DICT quando localInstrument for igual a DICT, QRDN (uso futuro) ou QRES (uso futuro) e validar o campo creditorAccount.
      Esta validação é opcional caso o localInstrument for igual a INIC.
      [Restrição] Se localInstrument for igual a MANU, o campo proxy não deve ser preenchido. Se localInstrument for igual INIC, DICT, QRDN (uso futuro) ou QRES(uso futuro), o campo proxy deve ser sempre preenchido com a chave Pix.
  status:
    $ref: ../enum/EnumPaymentStatusType.yaml
  rejectionReason:
    $ref: ../enum/EnumRejectionReasonType.yaml
  localInstrument:
    $ref: ../enum/EnumLocalInstrument.yaml
  cnpjInitiator:
    type: string
    pattern: '^\d{14}$'
    maxLength: 14
    example: '50685362000135'
    description: 'CNPJ do Iniciador de Pagamento devidamente habilitado para a prestação de Serviço de Iniciação no Pix.'
  payment:
    $ref: ./PaymentPix.yaml
  transactionIdentification:
    type: string
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9]{0,24}$'
    maxLength: 25
    example: 'E00038166201907261559y6j6'
    description: |
      Trata-se de um identificador de transação que deve ser retransmitido intacto pelo PSP do pagador ao gerar a ordem de pagamento. Essa informação permitirá ao recebedor identificar e correlacionar a transferência, quando recebida, com a apresentação das instruções ao pagador.
      Os caracteres permitidos no contexto do Pix para o campo txid (EMV 62-05) são:
      - Letras minúsculas, de ‘a’ a ‘z’
      - Letras maiúsculas, de ‘A’ a ‘z’
      - Dígitos decimais, de ‘0’ a ‘9’

      [Restrição] Se localInstrument for igual a INIC, o campo transactionIdentification deve ser preenchido obrigatoriamente.
      Se localInstrument for igual a MANU ou DICT, o campo transactionIdentification não deve ser preenchido.
      A detentora de conta deve validar se a condicionalidade do campo foi atendida pela iniciadora de pagamento.
  remittanceInformation:
    type: string
    maxLength: 140
    pattern: '[\w\W\s]*'
    example: Pagamento da nota RSTO035-002.
    description: |
      Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.
  creditorAccount:
    $ref: ../business_commons/CreditorAccount.yaml
additionalProperties: false
